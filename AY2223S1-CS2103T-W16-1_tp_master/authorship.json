[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W16-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W16-1/tp/branch/master/graph/badge.svg?token\u003dTL4U2UJXS0)](https://codecov.io/gh/AY2223S1-CS2103T-W16-1/tp)","lastModifiedDate":"2022-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jehousoh"},"content":"# GuestBook","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"jehousoh"},"content":"* GuestBook is a **one stop access for Hotel Managers to keep track of their guests\u0027 data**.","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"JustinPeng13"},"content":"  * Ideal for Hotel Managers of small- to medium-sized hotels who have many guests staying.","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"jehousoh"},"content":"  * Used to keep track of guests details and search based on their names.","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"jehousoh"},"content":"* For more information:","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"jehousoh"},"content":"  * [User Guide](https://github.com/AY2223S1-CS2103T-W16-1/tp/blob/master/docs/UserGuide.md)","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"jehousoh"},"content":"  * [Developer Guide](https://github.com/AY2223S1-CS2103T-W16-1/tp/blob/master/docs/DeveloperGuide.md)","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jehousoh":7,"Lan-Jingbo":1,"bryanhce":3,"-":4,"JustinPeng13":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"jehousoh"},"content":"mainClassName \u003d \u0027seedu.guest.Main\u0027","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"jehousoh"},"content":"    archiveFileName \u003d \u0027guestbook.jar\u0027","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"jehousoh"},"content":"run {","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"jehousoh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jehousoh":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Lan-Jingbo"},"content":"### Justin Peng","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"jehousoh"},"content":"\u003cimg src\u003d\"images/justinpeng13.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"JustinPeng13"},"content":"[[homepage](https://www.justinpeng.com)]","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"JustinPeng13"},"content":"[[github](https://github.com/JustinPeng13)]","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"JustinPeng13"},"content":"[[portfolio](team/justinpeng13.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"JustinPeng13"},"content":"* Role: Secondary Team Lead","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"JustinPeng13"},"content":"* Responsibilities: Deliverables and deadlines, Scheduling and tracking, Git/SourceTree expert","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"jehousoh"},"content":"### Soh Je Hou","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"jehousoh"},"content":"\u003cimg src\u003d\"images/jehousoh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"jehousoh"},"content":"[[github](http://github.com/jehousoh)]","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"jehousoh"},"content":"[[portfolio](team/jehousoh.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"jehousoh"},"content":"* Responsibilities: Deliverables and deadlines, Scheduling and tracking","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Lan-Jingbo"},"content":"### Lan Jingbo","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"jehousoh"},"content":"\u003cimg src\u003d\"images/lan-jingbo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Lan-Jingbo"},"content":"[[github](http://github.com/Lan-Jingbo)] [[portfolio](team/lanjingbo.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"Lan-Jingbo"},"content":"* Responsibilities: Data, Testing, Project Management","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"kangzongxian"},"content":"### Kang Zong Xian","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"kangzongxian"},"content":"\u003cimg src\u003d\"images/kangzongxian.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"kangzongxian"},"content":"[[github](http://github.com/kangzongxian)]","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"kangzongxian"},"content":"[[portfolio](team/kangzongxian.md)]","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"kangzongxian"},"content":"* Responsibilities: Code Quality, Documentation","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"bryanhce"},"content":"### Ho Cheng En Bryan","lastModifiedDate":"2022-09-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"bryanhce"},"content":"\u003cimg src\u003d\"images/bryanhce.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"bryanhce"},"content":"[[github](http://github.com/bryanhce)]","lastModifiedDate":"2022-09-27"},{"lineNumber":55,"author":{"gitId":"bryanhce"},"content":"[[portfolio](team/bryanhce.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"bryanhce"},"content":"* Responsibilities: Code quality, Documentation","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"kangzongxian":5,"jehousoh":7,"Lan-Jingbo":4,"bryanhce":5,"-":32,"JustinPeng13":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"JustinPeng13"},"content":"* Libraries used:","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"JustinPeng13"},"content":"  * [JavaFX](https://openjfx.io/)","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"JustinPeng13"},"content":"  * [Jackson](https://github.com/FasterXML/jackson)","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"JustinPeng13"},"content":"  * [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":20,"author":{"gitId":"jehousoh"},"content":"* Icons used:","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"jehousoh"},"content":"  * [IconsDB](https://iconsdb.com/)","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"JustinPeng13"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S1-CS2103T-W16-1/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"JustinPeng13"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S1-CS2103T-W16-1/tp/tree/master/src/main/java/seedu/guest/Main.java) and [`MainApp`](https://github.com/AY2223S1-CS2103T-W16-1/tp/tree/master/src/main/java/seedu/guest/MainApp.java). It is responsible for,","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"jehousoh"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S1-CS2103T-W16-1/tp/blob/master/src/main/java/seedu/guest/ui/Ui.java)","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"jehousoh"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `GuestListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"jehousoh"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S1-CS2103T-W16-1/tp/blob/master/src/main/java/seedu/guest/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S1-CS2103T-W16-1/tp/blob/master/src/main/resources/view/GuestListPanel.fxml)","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"bryanhce"},"content":"* depends on some classes in the `Model` component, as it displays `Guest` object residing in the `Model`.","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"Lan-Jingbo"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S1-CS2103T-W16-1/tp/blob/master/src/main/java/seedu/guest/logic/Logic.java)","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"bryanhce"},"content":"1. When `Logic` is called upon to execute a command, it uses the `GuestBookParser` class to parse the user command.","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"bryanhce"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a guest).","lastModifiedDate":"2022-10-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"bryanhce"},"content":"* When called upon to parse a user command, the `GuestBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `GuestBookParser` returns back as a `Command` object.","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"JustinPeng13"},"content":"**API** : [`Model.java`](https://github.com/AY2223S1-CS2103T-W16-1/tp/tree/master/src/main/java/seedu/guest/model/Model.java)","lastModifiedDate":"2022-10-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"kangzongxian"},"content":"* stores the GuestBook data i.e., all `Guest` objects (which are contained in a `UniqueGuestBook` object).","lastModifiedDate":"2022-10-25"},{"lineNumber":134,"author":{"gitId":"bryanhce"},"content":"* stores the currently \u0027selected\u0027 `Guest` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cGuest\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"JustinPeng13"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S1-CS2103T-W16-1/tp/tree/master/src/main/java/seedu/guest/storage/Storage.java)","lastModifiedDate":"2022-10-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"kangzongxian"},"content":"* can save both GuestBook data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-10-25"},{"lineNumber":147,"author":{"gitId":"bryanhce"},"content":"* inherits from both `GuestBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-10-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"bryanhce"},"content":"Classes used by multiple components are in the `seedu.guest.commons` package.","lastModifiedDate":"2022-10-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"JustinPeng13"},"content":"### Add Command","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":162,"author":{"gitId":"jehousoh"},"content":"#### Implementation:","lastModifiedDate":"2022-10-17"},{"lineNumber":163,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":164,"author":{"gitId":"bryanhce"},"content":"* The `add` command takes in 6 compulsory fields (`Name`, `Phone`, `Email`, `Room`, `Date Range` and `Number Of Guests`) ","lastModifiedDate":"2022-10-26"},{"lineNumber":165,"author":{"gitId":"bryanhce"},"content":"and 1 optional field (`Request`) and is supported by the `AddCommandParser` that extracts out each of the fields ","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"bryanhce"},"content":"from their respective prefixes.","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":168,"author":{"gitId":"kangzongxian"},"content":"The following activity diagram summarizes what happens when a user enters an `add` command.","lastModifiedDate":"2022-10-26"},{"lineNumber":169,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":170,"author":{"gitId":"jehousoh"},"content":"![AddActivityDiagram](images/AddActivityDiagram.png)","lastModifiedDate":"2022-10-17"},{"lineNumber":171,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":172,"author":{"gitId":"jehousoh"},"content":"#### Design Considerations:","lastModifiedDate":"2022-10-17"},{"lineNumber":173,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":174,"author":{"gitId":"jehousoh"},"content":"**Aspect: How to deal with duplicate entries**","lastModifiedDate":"2022-10-17"},{"lineNumber":175,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":176,"author":{"gitId":"kangzongxian"},"content":"* **Alternative 1 (current choice):** Reject any entry with a duplicate name or room that is case-insensitive.","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"jehousoh"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2022-10-17"},{"lineNumber":178,"author":{"gitId":"kangzongxian"},"content":"    * Cons: Will have issues with adding people of the same name or room to GuestBook.","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":180,"author":{"gitId":"jehousoh"},"content":"* **Alternative 2:** Allow duplicate entries to be added with no consequences.","lastModifiedDate":"2022-10-17"},{"lineNumber":181,"author":{"gitId":"kangzongxian"},"content":"    * Pros: Allows for multiple guests of the same name or room to be added.","lastModifiedDate":"2022-10-26"},{"lineNumber":182,"author":{"gitId":"kangzongxian"},"content":"    * Cons: Easy to abuse the command intentionally (to break the program) or unintentionally (accidentally). Inappropriate to put 2 or more unrelated guests in the same room.","lastModifiedDate":"2022-10-26"},{"lineNumber":183,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":184,"author":{"gitId":"kangzongxian"},"content":"In small hotels, the chances of getting two guests that have identical full names are","lastModifiedDate":"2022-10-26"},{"lineNumber":185,"author":{"gitId":"kangzongxian"},"content":"incredibly unlikely. Also, guests would prefer to stay alone or with their families and friends. With these considerations in mind, we decided to proceed with Alternative 1.","lastModifiedDate":"2022-10-26"},{"lineNumber":186,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":187,"author":{"gitId":"jehousoh"},"content":"**Aspect: Excluding `isRoomClean` in the `add` command**","lastModifiedDate":"2022-10-17"},{"lineNumber":188,"author":{"gitId":"jehousoh"},"content":"* As adding the guest will be done during check in, the room should by default be cleaned for the guest to immediately","lastModifiedDate":"2022-10-17"},{"lineNumber":189,"author":{"gitId":"kangzongxian"},"content":"be able to enter their room. Hence, we chose to remove `isRoomClean` as it would make the `add` command unnecessarily longer.","lastModifiedDate":"2022-10-26"},{"lineNumber":190,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":191,"author":{"gitId":"jehousoh"},"content":"**Aspect: Excluding `Bill` in the `add` command**","lastModifiedDate":"2022-10-17"},{"lineNumber":192,"author":{"gitId":"jehousoh"},"content":"* As adding the guest will be done during check in, the guest should not have incurred any bill costs yet. Hence, we set","lastModifiedDate":"2022-10-18"},{"lineNumber":193,"author":{"gitId":"kangzongxian"},"content":"the initial bill to be 0 and chose to remove `Bill` as it would make the `add` command unnecessarily longer.","lastModifiedDate":"2022-10-26"},{"lineNumber":194,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":195,"author":{"gitId":"jehousoh"},"content":"**Aspect: Making `Request` in the `add` command**","lastModifiedDate":"2022-10-17"},{"lineNumber":196,"author":{"gitId":"jehousoh"},"content":"* As adding the guest will be done during check in, the guest might not have any special requests to make for the room. Hence,","lastModifiedDate":"2022-10-17"},{"lineNumber":197,"author":{"gitId":"jehousoh"},"content":"we chose to make `Request` optional and default it as blank should it not be provided.","lastModifiedDate":"2022-10-17"},{"lineNumber":198,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":199,"author":{"gitId":"bryanhce"},"content":"### Bill Field","lastModifiedDate":"2022-10-26"},{"lineNumber":200,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":201,"author":{"gitId":"jehousoh"},"content":"#### Implementation:","lastModifiedDate":"2022-10-17"},{"lineNumber":202,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":203,"author":{"gitId":"bryanhce"},"content":"* The `Bill` class holds the value that a `Guest` is required to pay to the hotel.","lastModifiedDate":"2022-10-26"},{"lineNumber":204,"author":{"gitId":"bryanhce"},"content":"* Its constructor takes in a string representing a signed `double` with up to 2 decimal places.","lastModifiedDate":"2022-10-26"},{"lineNumber":205,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":206,"author":{"gitId":"jehousoh"},"content":"#### Design Considerations:","lastModifiedDate":"2022-10-17"},{"lineNumber":207,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":208,"author":{"gitId":"bryanhce"},"content":"**Aspect: `add()` method of the `Bill` class**","lastModifiedDate":"2022-10-26"},{"lineNumber":209,"author":{"gitId":"bryanhce"},"content":"* As `Bill`s can be added to each other, we abstracted this behaviour into the `add` method.","lastModifiedDate":"2022-10-26"},{"lineNumber":210,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":211,"author":{"gitId":"bryanhce"},"content":"**Aspect: How to deduct from bills**","lastModifiedDate":"2022-10-26"},{"lineNumber":212,"author":{"gitId":"bryanhce"},"content":"* **Alternative 1:** Create a `subtract` method.","lastModifiedDate":"2022-10-26"},{"lineNumber":213,"author":{"gitId":"bryanhce"},"content":"    * Pros: More understandable code.","lastModifiedDate":"2022-10-26"},{"lineNumber":214,"author":{"gitId":"bryanhce"},"content":"    * Cons: Requires knowledge of which method to call (`add` or `subtract`).","lastModifiedDate":"2022-10-26"},{"lineNumber":215,"author":{"gitId":"bryanhce"},"content":"* **Alternative 2 (current choice):** Use `add()` with a negative `Bill`.","lastModifiedDate":"2022-10-26"},{"lineNumber":216,"author":{"gitId":"bryanhce"},"content":"    * Pros: Less code, more flexibility.","lastModifiedDate":"2022-10-26"},{"lineNumber":217,"author":{"gitId":"bryanhce"},"content":"    * Cons: `Bill` must be allowed to hold negative values, but the bill field for each `Guest`","lastModifiedDate":"2022-10-26"},{"lineNumber":218,"author":{"gitId":"bryanhce"},"content":"      cannot, thus requiring more checks.","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":220,"author":{"gitId":"bryanhce"},"content":"Taking into consideration that `double`s are already signed and charges on bills can be negative, we decided to proceed with Alternative 2.","lastModifiedDate":"2022-10-26"},{"lineNumber":221,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":222,"author":{"gitId":"JustinPeng13"},"content":"### Bill Command","lastModifiedDate":"2022-10-20"},{"lineNumber":223,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":224,"author":{"gitId":"JustinPeng13"},"content":"#### Implementation:","lastModifiedDate":"2022-10-20"},{"lineNumber":225,"author":{"gitId":"JustinPeng13"},"content":"* The `bill` command takes in an INDEX indicating the index of the guest to edit in the current panel (starting from 1) and the `bill` field and is supported by the `BillCommandParser` that extracts the bill value.","lastModifiedDate":"2022-10-20"},{"lineNumber":226,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":227,"author":{"gitId":"JustinPeng13"},"content":"The following activity diagrams summarizes what happens when a user enters a `bill` command.","lastModifiedDate":"2022-10-20"},{"lineNumber":228,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":229,"author":{"gitId":"JustinPeng13"},"content":"![BillActivityDiagram](images/BillActivityDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":230,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":231,"author":{"gitId":"JustinPeng13"},"content":"#### Design Considerations:","lastModifiedDate":"2022-10-20"},{"lineNumber":232,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":233,"author":{"gitId":"JustinPeng13"},"content":"**Aspect: How to update a bill**","lastModifiedDate":"2022-10-20"},{"lineNumber":234,"author":{"gitId":"JustinPeng13"},"content":"* **Alternative 1:** Set the bill to the input value.","lastModifiedDate":"2022-10-20"},{"lineNumber":235,"author":{"gitId":"kangzongxian"},"content":"  * Pros: Can be implemented by extending the `edit` command, so that the user does not need to learn an additional command.","lastModifiedDate":"2022-10-26"},{"lineNumber":236,"author":{"gitId":"JustinPeng13"},"content":"  * Cons: The user is required to calculate the updated bill value, which is less convenient and intuitive.","lastModifiedDate":"2022-10-20"},{"lineNumber":237,"author":{"gitId":"JustinPeng13"},"content":"* **Alternative 2 (current choice):** Add the input value to the bill.","lastModifiedDate":"2022-10-20"},{"lineNumber":238,"author":{"gitId":"JustinPeng13"},"content":"  * Pros: More aligned with real-life implementation of bills, by adding the next charge. Easy to undo as the previous command is displayed.","lastModifiedDate":"2022-10-20"},{"lineNumber":239,"author":{"gitId":"JustinPeng13"},"content":"  * Cons: Addition method must be implemented, and negative values must be accepted.","lastModifiedDate":"2022-10-20"},{"lineNumber":240,"author":{"gitId":"JustinPeng13"},"content":"* **Alternative 3:** Allow both depending on syntax.","lastModifiedDate":"2022-10-20"},{"lineNumber":241,"author":{"gitId":"JustinPeng13"},"content":"  * Pros: Flexibility for user, such as resetting the bill to 0 or another known value if needed.","lastModifiedDate":"2022-10-20"},{"lineNumber":242,"author":{"gitId":"JustinPeng13"},"content":"  * Cons: Syntax may be confusing and complex to implement.","lastModifiedDate":"2022-10-20"},{"lineNumber":243,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":244,"author":{"gitId":"JustinPeng13"},"content":"Taking into consideration the much higher probability of the user using the bill command to add a value as compared to setting the value,","lastModifiedDate":"2022-10-20"},{"lineNumber":245,"author":{"gitId":"JustinPeng13"},"content":"and that minimal calculation is needed to reset the bill to 0 (`b/-CURRENT_VALUE`), we decided to proceed with Alternative 2.","lastModifiedDate":"2022-10-20"},{"lineNumber":246,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":247,"author":{"gitId":"JustinPeng13"},"content":"**Aspect: Accepting signed and unsigned positive values**","lastModifiedDate":"2022-10-20"},{"lineNumber":248,"author":{"gitId":"JustinPeng13"},"content":"* As the user may prefer to see `+` differentiating positive and negative values, or leave out the `+` sign for convenience, we decided to accept both formats for positive values.","lastModifiedDate":"2022-10-20"},{"lineNumber":249,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":250,"author":{"gitId":"JustinPeng13"},"content":"**Aspect: Using the `b/` prefix**","lastModifiedDate":"2022-10-21"},{"lineNumber":251,"author":{"gitId":"JustinPeng13"},"content":"* To standardise the formatting and testing for field inputs, we decided to include the `b/` prefix in the command syntax.","lastModifiedDate":"2022-10-21"},{"lineNumber":252,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":253,"author":{"gitId":"bryanhce"},"content":"### DateRange Field","lastModifiedDate":"2022-10-26"},{"lineNumber":254,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":255,"author":{"gitId":"bryanhce"},"content":"#### Implementation:","lastModifiedDate":"2022-10-26"},{"lineNumber":256,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":257,"author":{"gitId":"bryanhce"},"content":"* The `DateRange` class holds the period of stay of a `Guest`.","lastModifiedDate":"2022-10-26"},{"lineNumber":258,"author":{"gitId":"bryanhce"},"content":"* Its constructor takes in a string representing a check-in date and a check-out date.","lastModifiedDate":"2022-10-26"},{"lineNumber":259,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":260,"author":{"gitId":"bryanhce"},"content":"#### Design Considerations:","lastModifiedDate":"2022-10-26"},{"lineNumber":261,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":262,"author":{"gitId":"bryanhce"},"content":"**Aspect: How to represent dates**","lastModifiedDate":"2022-10-26"},{"lineNumber":263,"author":{"gitId":"bryanhce"},"content":"* **Alternative 1:** Separate classes for check-in and check-out dates extended from a `GuestDate` class.","lastModifiedDate":"2022-10-26"},{"lineNumber":264,"author":{"gitId":"bryanhce"},"content":"    * Pros: Easier to parse and edit dates separately.","lastModifiedDate":"2022-10-26"},{"lineNumber":265,"author":{"gitId":"bryanhce"},"content":"    * Cons: Depend on each other for validation (check-in must be earlier than check-out), which increases coupling.","lastModifiedDate":"2022-10-26"},{"lineNumber":266,"author":{"gitId":"bryanhce"},"content":"* **Alternative 2 (current choice):** Single class representing both dates.","lastModifiedDate":"2022-10-26"},{"lineNumber":267,"author":{"gitId":"bryanhce"},"content":"    * Pros: Validation can be done within the class itself which reduces coupling. More intuitive as the dates","lastModifiedDate":"2022-10-26"},{"lineNumber":268,"author":{"gitId":"bryanhce"},"content":"      are often displayed together.","lastModifiedDate":"2022-10-26"},{"lineNumber":269,"author":{"gitId":"bryanhce"},"content":"    * Cons: Parsing, editing, and other operations on the dates are more complex.","lastModifiedDate":"2022-10-26"},{"lineNumber":270,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":271,"author":{"gitId":"bryanhce"},"content":"Taking into consideration that check-in and check-out dates come as a pair, we decided to proceed with Alternative 2 to reduce coupling.","lastModifiedDate":"2022-10-26"},{"lineNumber":272,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":273,"author":{"gitId":"bryanhce"},"content":"### Edit Command","lastModifiedDate":"2022-10-26"},{"lineNumber":274,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":275,"author":{"gitId":"bryanhce"},"content":"#### Implementation:","lastModifiedDate":"2022-10-26"},{"lineNumber":276,"author":{"gitId":"bryanhce"},"content":"* The `edit` command takes in an INDEX indicating the index of the guest to edit in the current panel (starting from 1)","lastModifiedDate":"2022-10-26"},{"lineNumber":277,"author":{"gitId":"bryanhce"},"content":"  and 8 optional fields (`Name`, `Phone`, `Email`, `Room`, `Date Range`, `Number Of Guests`, `Is Room Clean` and `Request`)","lastModifiedDate":"2022-10-26"},{"lineNumber":278,"author":{"gitId":"bryanhce"},"content":"  and is supported by the `EditCommandParser` that extracts out each of the fields from their respective prefixes.","lastModifiedDate":"2022-10-26"},{"lineNumber":279,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":280,"author":{"gitId":"bryanhce"},"content":"The following activity diagram summarizes what happens when a user enters an `edit` command.","lastModifiedDate":"2022-10-27"},{"lineNumber":281,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":282,"author":{"gitId":"bryanhce"},"content":"![EditActivityDiagram](images/EditActivityDiagram.png)","lastModifiedDate":"2022-10-26"},{"lineNumber":283,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":284,"author":{"gitId":"bryanhce"},"content":"#### Design Considerations:","lastModifiedDate":"2022-10-26"},{"lineNumber":285,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":286,"author":{"gitId":"bryanhce"},"content":"**Aspect: Allowing only specific fields provided to be edited**","lastModifiedDate":"2022-10-26"},{"lineNumber":287,"author":{"gitId":"bryanhce"},"content":"* As the edit command is usually used when there is a change or error in the information provided, it makes more sense for the user to be able to change only selected fields.","lastModifiedDate":"2022-10-26"},{"lineNumber":288,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":289,"author":{"gitId":"bryanhce"},"content":"**Aspect: Excluding `Bill` in the `edit` command**","lastModifiedDate":"2022-10-26"},{"lineNumber":290,"author":{"gitId":"bryanhce"},"content":"* As the `bill` command allows us to add and subtract to the bill directly, the edit command is redundant and","lastModifiedDate":"2022-10-26"},{"lineNumber":291,"author":{"gitId":"bryanhce"},"content":"  may cause user error if they were to replace the `Bill` by accident.","lastModifiedDate":"2022-10-26"},{"lineNumber":292,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":293,"author":{"gitId":"JustinPeng13"},"content":"### MarkRoomsUnclean Command","lastModifiedDate":"2022-10-20"},{"lineNumber":294,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":295,"author":{"gitId":"bryanhce"},"content":"#### Implementation","lastModifiedDate":"2022-10-19"},{"lineNumber":296,"author":{"gitId":"kangzongxian"},"content":"* The `markRoomsUnclean` command edits all the guests in GuestBook and changes their isRoomClean statuses to \"no\". It takes in no additional inputs or fields.","lastModifiedDate":"2022-10-25"},{"lineNumber":297,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":298,"author":{"gitId":"bryanhce"},"content":"The following activity diagram summarizes what happens when a user enters a `markRoomsUnclean` command.","lastModifiedDate":"2022-10-19"},{"lineNumber":299,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":300,"author":{"gitId":"bryanhce"},"content":"![MarkRoomsUncleanActivityDiagram](images/MarkRoomsUncleanActivityDiagram.png)","lastModifiedDate":"2022-10-25"},{"lineNumber":301,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":302,"author":{"gitId":"bryanhce"},"content":"#### Design Considerations:","lastModifiedDate":"2022-10-19"},{"lineNumber":303,"author":{"gitId":"bryanhce"},"content":"**Aspect: The scope at which the command changes all guests\u0027 isRoomClean statuses**","lastModifiedDate":"2022-10-19"},{"lineNumber":304,"author":{"gitId":"bryanhce"},"content":"* Alternative 1: Allow `markRoomsUnclean` command to operate only on the last shown list instead of the entire list. This is to Standardise how edits are made across the commands (e.g. edit and delete).","lastModifiedDate":"2022-10-19"},{"lineNumber":305,"author":{"gitId":"bryanhce"},"content":"  * Pros: This might be more intuitive for users, as `edit` and `delete` commands work only on the last shown lists.","lastModifiedDate":"2022-10-19"},{"lineNumber":306,"author":{"gitId":"bryanhce"},"content":"  * Cons: User is unable to change all the guests\u0027 isRoomClean statuses in a single command.","lastModifiedDate":"2022-10-19"},{"lineNumber":307,"author":{"gitId":"kangzongxian"},"content":"* Alternative 2 (current choice): Allow `markRoomsUnclean` command to change all guests\u0027 isRoomClean statuses in GuestBook instead of the last shown list.","lastModifiedDate":"2022-10-25"},{"lineNumber":308,"author":{"gitId":"bryanhce"},"content":"  * Pros: User is able to change all the guests\u0027 isRoomClean statuses in a single command.","lastModifiedDate":"2022-10-19"},{"lineNumber":309,"author":{"gitId":"bryanhce"},"content":"  * Cons: There is less flexibility in marking groups of guests\u0027 room as unclean.","lastModifiedDate":"2022-10-19"},{"lineNumber":310,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":311,"author":{"gitId":"kangzongxian"},"content":"Taking into consideration the context of GuestBook that operates for small hotels, it is unlikely to have a case in which the user has to mark different groups of guests\u0027 isRoomClean statuses differently as the types of rooms as mostly homogenous. Hence, we decided to proceed with Alternative 2.","lastModifiedDate":"2022-10-26"},{"lineNumber":312,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":313,"author":{"gitId":"JustinPeng13"},"content":"### Find Command","lastModifiedDate":"2022-10-20"},{"lineNumber":314,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":315,"author":{"gitId":"kangzongxian"},"content":"#### Implementation:","lastModifiedDate":"2022-10-19"},{"lineNumber":316,"author":{"gitId":"kangzongxian"},"content":"* The `find` command takes in multiple keywords separated by spaces, and find all guests whose `fields` contain any of the keywords. The keywords are case-insensitive as well. For example, finding \u0027Alice\u0027 is the same as finding \u0027aLiCE\u0027.","lastModifiedDate":"2022-10-26"},{"lineNumber":317,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":318,"author":{"gitId":"kangzongxian"},"content":"The following activity diagram summarizes what happens when a user enters a `find` command.","lastModifiedDate":"2022-10-19"},{"lineNumber":319,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":320,"author":{"gitId":"kangzongxian"},"content":"![FindActivityDiagram](images/FindActivityDiagram.png)","lastModifiedDate":"2022-10-19"},{"lineNumber":321,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":322,"author":{"gitId":"kangzongxian"},"content":"#### Design Considerations:","lastModifiedDate":"2022-10-19"},{"lineNumber":323,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":324,"author":{"gitId":"kangzongxian"},"content":"**Aspect: Allowing searching only through all fields**","lastModifiedDate":"2022-10-25"},{"lineNumber":325,"author":{"gitId":"kangzongxian"},"content":"* As the hotel manager would usually appreciate the ability to search by other fields such as by Room, it is appropriate to make the `find` command to scan through all the fields of the guests.","lastModifiedDate":"2022-10-25"},{"lineNumber":326,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":327,"author":{"gitId":"kangzongxian"},"content":"**Aspect: Only matching full keywords**","lastModifiedDate":"2022-10-19"},{"lineNumber":328,"author":{"gitId":"kangzongxian"},"content":"* The `find` command only matches full keywords. For example, typing in \u0027ali\u0027 would not match a Guest named \u0027Alice\u0027. As we do not want to display possible redundant data to the hotel manager, we decided to limit the `find` command to only full keywords, so that the results displayed are more targeted.","lastModifiedDate":"2022-10-19"},{"lineNumber":329,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":330,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":331,"author":{"gitId":"JustinPeng13"},"content":"### \\[Proposed\\] Undo/Redo Command","lastModifiedDate":"2022-10-20"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"bryanhce"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedGuestBook`. It extends `GuestBook` with an undo/redo history, stored internally as an `guestBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2022-10-03"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"kangzongxian"},"content":"* `VersionedGuestBook#commit()` — Saves the current GuestBook state in its history.","lastModifiedDate":"2022-10-25"},{"lineNumber":338,"author":{"gitId":"kangzongxian"},"content":"* `VersionedGuestBook#undo()` — Restores the previous GuestBook state from its history.","lastModifiedDate":"2022-10-25"},{"lineNumber":339,"author":{"gitId":"kangzongxian"},"content":"* `VersionedGuestBook#redo()` — Restores a previously undone GuestBook state from its history.","lastModifiedDate":"2022-10-25"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"bryanhce"},"content":"These operations are exposed in the `Model` interface as `Model#commitGuestBook()`, `Model#undoGuestBook()` and `Model#redoGuestBook()` respectively.","lastModifiedDate":"2022-10-03"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"kangzongxian"},"content":"Step 1. The user launches the application for the first time. The `VersionedGuestBook` will be initialized with the initial GuestBook state, and the `currentStatePointer` pointing to that single GuestBook state.","lastModifiedDate":"2022-10-25"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"kangzongxian"},"content":"Step 2. The user executes `delete 5` command to delete the 5th guest in GuestBook. The `delete` command calls `Model#commitGuestBook()`, causing the modified state of GuestBook after the `delete 5` command executes to be saved in the `guestBookStateList`, and the `currentStatePointer` is shifted to the newly inserted GuestBook state.","lastModifiedDate":"2022-10-25"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"kangzongxian"},"content":"Step 3. The user executes `add n/David …​` to add a new guest. The `add` command also calls `Model#commitGuestBook()`, causing another modified GuestBook state to be saved into the `guestBookStateList`.","lastModifiedDate":"2022-10-25"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"kangzongxian"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitGuestBook()`, so the GuestBook state will not be saved into the `guestBookStateList`.","lastModifiedDate":"2022-10-25"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"kangzongxian"},"content":"Step 4. The user now decides that adding the guest was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoGuestBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous GuestBook state, and restores the GuestBook to that state.","lastModifiedDate":"2022-10-25"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"bryanhce"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial GuestBook state, then there are no previous GuestBook states to restore. The `undo` command uses `Model#canUndoGuestBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2022-10-03"},{"lineNumber":366,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"kangzongxian"},"content":"The `redo` command does the opposite — it calls `Model#redoGuestBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores GuestBook to that state.","lastModifiedDate":"2022-10-25"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"kangzongxian"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `guestBookStateList.size() - 1`, pointing to the latest GuestBook state, then there are no undone GuestBook states to restore. The `redo` command uses `Model#canRedoGuestBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2022-10-25"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"kangzongxian"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify GuestBook, such as `list`, will usually not call `Model#commitGuestBook()`, `Model#undoGuestBook()` or `Model#redoGuestBook()`. Thus, the `guestBookStateList` remains unchanged.","lastModifiedDate":"2022-10-25"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"kangzongxian"},"content":"Step 6. The user executes `clear`, which calls `Model#commitGuestBook()`. Since the `currentStatePointer` is not pointing at the end of the `guestBookStateList`, all GuestBook states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2022-10-25"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"JustinPeng13"},"content":"#### Design Considerations:","lastModifiedDate":"2022-10-20"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"kangzongxian"},"content":"* **Alternative 1 (current choice):** Saves the entire GuestBook.","lastModifiedDate":"2022-10-25"},{"lineNumber":401,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"bryanhce"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the guest being deleted).","lastModifiedDate":"2022-10-01"},{"lineNumber":407,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"kangzongxian"},"content":"As the users of this application would be hotel mangers of small hotels, there would not a massive list of guests. Hence, we think that memory usage would not be an issue, and proceeded with Alternative 1.","lastModifiedDate":"2022-10-26"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":416,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":417,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":418,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":419,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"bryanhce"},"content":"* hotel manager of a small-sized hotel","lastModifiedDate":"2022-10-17"},{"lineNumber":429,"author":{"gitId":"bryanhce"},"content":"* hotel manager who want to keep track of guests","lastModifiedDate":"2022-09-27"},{"lineNumber":430,"author":{"gitId":"bryanhce"},"content":"* has a need to manage a significant number of guests","lastModifiedDate":"2022-09-27"},{"lineNumber":431,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":434,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"bryanhce"},"content":"**Value proposition**:","lastModifiedDate":"2022-09-27"},{"lineNumber":437,"author":{"gitId":"bryanhce"},"content":"* To know when the guests check in and check out","lastModifiedDate":"2022-09-27"},{"lineNumber":438,"author":{"gitId":"JustinPeng13"},"content":"* To keep track of the guests\u0027 bills","lastModifiedDate":"2022-10-10"},{"lineNumber":439,"author":{"gitId":"bryanhce"},"content":"* To note down all the requirements/requests that the guests asked for","lastModifiedDate":"2022-09-27"},{"lineNumber":440,"author":{"gitId":"bryanhce"},"content":"* To note down the status of the room, if the room is cleaned or not cleaned","lastModifiedDate":"2022-09-27"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":442,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"bryanhce"},"content":"| Priority | As a…                    | I want to…                                                         | So that I can…                                                                            |","lastModifiedDate":"2022-10-26"},{"lineNumber":447,"author":{"gitId":"bryanhce"},"content":"|----------|--------------------------|--------------------------------------------------------------------|-------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-17"},{"lineNumber":448,"author":{"gitId":"bryanhce"},"content":"| `* * *`  | first time hotel manager | know the available commands                                        | use the application to its full capabilities                                              |","lastModifiedDate":"2022-10-17"},{"lineNumber":449,"author":{"gitId":"Lan-Jingbo"},"content":"| `* * *`  | hotel manager            | view a list of all the guests                                      | browse all my guests\u0027 data at once                                                        |","lastModifiedDate":"2022-10-03"},{"lineNumber":450,"author":{"gitId":"Lan-Jingbo"},"content":"| `* * *`  | hotel manager            | view the contact number of the guest                               | contact them in an emergency                                                              |","lastModifiedDate":"2022-10-03"},{"lineNumber":451,"author":{"gitId":"Lan-Jingbo"},"content":"| `* * *`  | hotel manager            | view the name of the guest                                         | verify the guest                                                                          |","lastModifiedDate":"2022-10-03"},{"lineNumber":452,"author":{"gitId":"Lan-Jingbo"},"content":"| `* * *`  | hotel manager            | view the email address of the guest                                | contact the guest via email                                                               |","lastModifiedDate":"2022-10-03"},{"lineNumber":453,"author":{"gitId":"bryanhce"},"content":"| `* * *`  | hotel manager            | be able to exit the program                                        | close it when I do not need to use it                                                     |","lastModifiedDate":"2022-10-17"},{"lineNumber":454,"author":{"gitId":"Lan-Jingbo"},"content":"| `* * *`  | first time hotel manager | be able to delete data of all guests at one go                     | have a clean slate to work on should I need to                                            |","lastModifiedDate":"2022-10-03"},{"lineNumber":455,"author":{"gitId":"JustinPeng13"},"content":"| `* * *`  | hotel manager            | view the check-in date of a guest                                  | prepare the room for the incoming guests                                                  |","lastModifiedDate":"2022-10-10"},{"lineNumber":456,"author":{"gitId":"JustinPeng13"},"content":"| `* * *`  | hotel manager            | view the check-out date of a guest                                 | prepare when to clean the room                                                            |","lastModifiedDate":"2022-10-10"},{"lineNumber":457,"author":{"gitId":"bryanhce"},"content":"| `* * *`  | hotel manager            | delete a guest after they check out of my hotel                    | do not keep unnecessary data on my guests                                                 |","lastModifiedDate":"2022-10-17"},{"lineNumber":458,"author":{"gitId":"Lan-Jingbo"},"content":"| `* * *`  | hotel manager            | be able to save the details of the guests                          | the data is not lost between sessions                                                     |","lastModifiedDate":"2022-10-03"},{"lineNumber":459,"author":{"gitId":"Lan-Jingbo"},"content":"| `* * *`  | hotel manager            | search guests by keyword                                           | see details of specific guests                                                            |","lastModifiedDate":"2022-10-03"},{"lineNumber":460,"author":{"gitId":"Lan-Jingbo"},"content":"| `* * *`  | hotel manager            | view the number of guests in each room                             | prepare proper bed suites                                                                 |","lastModifiedDate":"2022-10-03"},{"lineNumber":461,"author":{"gitId":"bryanhce"},"content":"| `* * *`  | hotel manager            | add the details of a new guest when they are staying at my hotel   | know the details of who is staying at my hotel                                            |","lastModifiedDate":"2022-10-17"},{"lineNumber":462,"author":{"gitId":"JustinPeng13"},"content":"| `* * *`  | hotel manager            | be able to edit the name of the guest                              | update it if there are any changes                                                        |","lastModifiedDate":"2022-10-10"},{"lineNumber":463,"author":{"gitId":"JustinPeng13"},"content":"| `* * *`  | hotel manager            | be able to edit the email address of the guest                     | update it if there are any changes                                                        |","lastModifiedDate":"2022-10-10"},{"lineNumber":464,"author":{"gitId":"JustinPeng13"},"content":"| `* * *`  | hotel manager            | be able to edit the number of guests                               | update it if there are any changes                                                        |","lastModifiedDate":"2022-10-10"},{"lineNumber":465,"author":{"gitId":"JustinPeng13"},"content":"| `* * *`  | hotel manager            | be able to edit the check-in and check-out date range of the guest | update it if there are any changes                                                        |","lastModifiedDate":"2022-10-10"},{"lineNumber":466,"author":{"gitId":"JustinPeng13"},"content":"| `* * *`  | hotel manager            | be able to edit the contact number of the guest                    | update it if there are any changes                                                        |","lastModifiedDate":"2022-10-10"},{"lineNumber":467,"author":{"gitId":"JustinPeng13"},"content":"| `* *`    | hotel manager            | get the details of the bill of the hotel guest                     | charge the guest the right amount                                                         |","lastModifiedDate":"2022-10-10"},{"lineNumber":468,"author":{"gitId":"JustinPeng13"},"content":"| `* *`    | hotel manager            | be able to add to the bill of the hotel guest                      | update it if there are any changes                                                        |","lastModifiedDate":"2022-10-10"},{"lineNumber":469,"author":{"gitId":"JustinPeng13"},"content":"| `* *`    | hotel manager            | be able to deduct from the bill of the hotel guest                 | update it if there are any changes                                                        |","lastModifiedDate":"2022-10-10"},{"lineNumber":470,"author":{"gitId":"bryanhce"},"content":"| `* *`    | hotel manager            | view if a room has been cleaned                                    | allocate my cleaners cleaning duties                                                      |","lastModifiedDate":"2022-10-17"},{"lineNumber":471,"author":{"gitId":"bryanhce"},"content":"| `* *`    | hotel manager            | mark a room as clean                                               | my cleaners will not need to waste time cleaning the room again                           |","lastModifiedDate":"2022-10-17"},{"lineNumber":472,"author":{"gitId":"bryanhce"},"content":"| `* *`    | hotel manager            | mark a room as not clean                                           | my cleaners will know which room to clean                                                 |","lastModifiedDate":"2022-10-17"},{"lineNumber":473,"author":{"gitId":"bryanhce"},"content":"| `* *`    | hotel manager            | get the details of any special requests from the guests            | serve the guest as requested                                                              |","lastModifiedDate":"2022-10-17"},{"lineNumber":474,"author":{"gitId":"bryanhce"},"content":"| `* *`    | hotel manager            | mark all the rooms as not cleaned at one go                        | save time from editing all the guests in GuestBook as cleaning of rooms is a daily affair |","lastModifiedDate":"2022-10-17"},{"lineNumber":475,"author":{"gitId":"Lan-Jingbo"},"content":"| `* `     | hotel manager            | get the details of where the guests booked their hotel stay from   | decide which booking platform I need to pay more attention to                             |","lastModifiedDate":"2022-10-03"},{"lineNumber":476,"author":{"gitId":"bryanhce"},"content":"| `* `     | hotel manager            | get the details of how many guests are eating breakfast            | prepare the appropriate amount of food                                                    |","lastModifiedDate":"2022-10-17"},{"lineNumber":477,"author":{"gitId":"bryanhce"},"content":"| `* `     | hotel manager            | get the details of how many guests are eating lunch                | prepare the appropriate amount of food                                                    |","lastModifiedDate":"2022-10-17"},{"lineNumber":478,"author":{"gitId":"bryanhce"},"content":"| `* `     | hotel manager            | get the details of how many guests are eating dinner               | prepare the appropriate amount of food                                                    |","lastModifiedDate":"2022-10-17"},{"lineNumber":479,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"bryanhce"},"content":"[//]: # (*{More to be added}*)","lastModifiedDate":"2022-10-26"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"JustinPeng13"},"content":"(For all use cases below, the **System** is the `GuestBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-10-10"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":487,"author":{"gitId":"bryanhce"},"content":"**Use case 1: Add a guest**","lastModifiedDate":"2022-10-17"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":489,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":491,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":492,"author":{"gitId":"bryanhce"},"content":"1. User requests to add a guest to the list with guest\u0027s details.","lastModifiedDate":"2022-10-17"},{"lineNumber":493,"author":{"gitId":"bryanhce"},"content":"2. System adds the guest.","lastModifiedDate":"2022-10-17"},{"lineNumber":494,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":495,"author":{"gitId":"bryanhce"},"content":"    Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":496,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":497,"author":{"gitId":"bryanhce"},"content":"**Extensions**","lastModifiedDate":"2022-09-27"},{"lineNumber":498,"author":{"gitId":"kangzongxian"},"content":"* 1a. The guest is already exists in the list of guests.","lastModifiedDate":"2022-10-26"},{"lineNumber":499,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":500,"author":{"gitId":"bryanhce"},"content":"    Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":501,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":502,"author":{"gitId":"kangzongxian"},"content":"* 1b. The input data is invalid.","lastModifiedDate":"2022-10-26"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"kangzongxian"},"content":"  * 1b1. System shows an error message.","lastModifiedDate":"2022-10-26"},{"lineNumber":505,"author":{"gitId":"bryanhce"},"content":"  ","lastModifiedDate":"2022-09-27"},{"lineNumber":506,"author":{"gitId":"bryanhce"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2022-09-27"},{"lineNumber":507,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":508,"author":{"gitId":"bryanhce"},"content":"**Use case 2: Search for a guest**","lastModifiedDate":"2022-10-17"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"kangzongxian"},"content":"1. User requests to search for a guest.","lastModifiedDate":"2022-10-26"},{"lineNumber":513,"author":{"gitId":"bryanhce"},"content":"2. System returns the guest.","lastModifiedDate":"2022-10-17"},{"lineNumber":514,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":515,"author":{"gitId":"bryanhce"},"content":"   Use case ends.","lastModifiedDate":"2022-10-17"},{"lineNumber":516,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":517,"author":{"gitId":"bryanhce"},"content":"**Extensions**","lastModifiedDate":"2022-10-17"},{"lineNumber":518,"author":{"gitId":"kangzongxian"},"content":"* 1a. The guest is does not exist in the system.","lastModifiedDate":"2022-10-26"},{"lineNumber":519,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":520,"author":{"gitId":"bryanhce"},"content":"  Use case ends.","lastModifiedDate":"2022-10-17"},{"lineNumber":521,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":522,"author":{"gitId":"kangzongxian"},"content":"* 1b. The search data is invalid.","lastModifiedDate":"2022-10-26"},{"lineNumber":523,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":524,"author":{"gitId":"kangzongxian"},"content":"    * 1b1. System shows an error message.","lastModifiedDate":"2022-10-26"},{"lineNumber":525,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":526,"author":{"gitId":"bryanhce"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-10-17"},{"lineNumber":527,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":528,"author":{"gitId":"bryanhce"},"content":"**Use case 3: Update a guest\u0027s details**","lastModifiedDate":"2022-10-17"},{"lineNumber":529,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":530,"author":{"gitId":"bryanhce"},"content":"**MSS**","lastModifiedDate":"2022-10-17"},{"lineNumber":531,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":532,"author":{"gitId":"kangzongxian"},"content":"1. User \u003cu\u003esearches for guest (Use case 2)\u003c/u\u003e.","lastModifiedDate":"2022-10-26"},{"lineNumber":533,"author":{"gitId":"bryanhce"},"content":"2. User requests to edit a guest\u0027s details.","lastModifiedDate":"2022-10-17"},{"lineNumber":534,"author":{"gitId":"bryanhce"},"content":"3. System updates the guest.","lastModifiedDate":"2022-10-17"},{"lineNumber":535,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":536,"author":{"gitId":"bryanhce"},"content":"   Use case ends.","lastModifiedDate":"2022-10-17"},{"lineNumber":537,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":538,"author":{"gitId":"bryanhce"},"content":"**Extensions**","lastModifiedDate":"2022-10-17"},{"lineNumber":539,"author":{"gitId":"bryanhce"},"content":"* 2a. The edit data is invalid.","lastModifiedDate":"2022-10-17"},{"lineNumber":540,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":541,"author":{"gitId":"kangzongxian"},"content":"    * 2a1. System shows an error message.","lastModifiedDate":"2022-10-26"},{"lineNumber":542,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":543,"author":{"gitId":"bryanhce"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-10-17"},{"lineNumber":544,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":545,"author":{"gitId":"bryanhce"},"content":"**Use case 4: Delete a guest**","lastModifiedDate":"2022-10-17"},{"lineNumber":546,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":547,"author":{"gitId":"bryanhce"},"content":"**MSS**","lastModifiedDate":"2022-10-17"},{"lineNumber":548,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":549,"author":{"gitId":"bryanhce"},"content":"1.  User requests to list guests.","lastModifiedDate":"2022-10-17"},{"lineNumber":550,"author":{"gitId":"bryanhce"},"content":"2.  System shows a list of guests.","lastModifiedDate":"2022-10-17"},{"lineNumber":551,"author":{"gitId":"bryanhce"},"content":"3.  User requests to delete a specific guest in the list.","lastModifiedDate":"2022-10-17"},{"lineNumber":552,"author":{"gitId":"bryanhce"},"content":"4.  System deletes the guest.","lastModifiedDate":"2022-10-17"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"bryanhce"},"content":"    * 3a1. System shows an error message.","lastModifiedDate":"2022-10-17"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"bryanhce"},"content":"**Use case 5: Get list of all guests**","lastModifiedDate":"2022-10-17"},{"lineNumber":569,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":570,"author":{"gitId":"bryanhce"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":571,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":572,"author":{"gitId":"bryanhce"},"content":"1.  User requests to list guests.","lastModifiedDate":"2022-10-17"},{"lineNumber":573,"author":{"gitId":"bryanhce"},"content":"2.  System shows a list of guests.","lastModifiedDate":"2022-10-17"},{"lineNumber":574,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":575,"author":{"gitId":"bryanhce"},"content":"    Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":576,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":577,"author":{"gitId":"bryanhce"},"content":"**Extensions**","lastModifiedDate":"2022-09-27"},{"lineNumber":578,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":579,"author":{"gitId":"bryanhce"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-27"},{"lineNumber":580,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":581,"author":{"gitId":"bryanhce"},"content":"  Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":582,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":583,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":584,"author":{"gitId":"bryanhce"},"content":"**Use case 6: Mark room clean status to \"no\" of all guests**","lastModifiedDate":"2022-10-18"},{"lineNumber":585,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":586,"author":{"gitId":"bryanhce"},"content":"**MSS**","lastModifiedDate":"2022-10-17"},{"lineNumber":587,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":588,"author":{"gitId":"bryanhce"},"content":"1. User requests to mark all guests\u0027 room clean statuses to \"no\".","lastModifiedDate":"2022-10-18"},{"lineNumber":589,"author":{"gitId":"bryanhce"},"content":"2. System updates all guests\u0027 room clean statuses to \"no\".","lastModifiedDate":"2022-10-18"},{"lineNumber":590,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":591,"author":{"gitId":"bryanhce"},"content":"    Use case ends.","lastModifiedDate":"2022-10-17"},{"lineNumber":592,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":593,"author":{"gitId":"bryanhce"},"content":"**Use case 7: Add or deduct to a guest\u0027s bill**","lastModifiedDate":"2022-10-17"},{"lineNumber":594,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":595,"author":{"gitId":"bryanhce"},"content":"**MSS**","lastModifiedDate":"2022-10-17"},{"lineNumber":596,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":597,"author":{"gitId":"bryanhce"},"content":"1. User \u003cu\u003esearches for guest (Use case 2)\u003c/u\u003e.","lastModifiedDate":"2022-10-17"},{"lineNumber":598,"author":{"gitId":"bryanhce"},"content":"2. User requests to add or deduct to a guest\u0027s bill.","lastModifiedDate":"2022-10-17"},{"lineNumber":599,"author":{"gitId":"bryanhce"},"content":"3. System add or deduct to original guest\u0027s bill.","lastModifiedDate":"2022-10-17"},{"lineNumber":600,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":601,"author":{"gitId":"bryanhce"},"content":"   Use case ends.","lastModifiedDate":"2022-10-17"},{"lineNumber":602,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":603,"author":{"gitId":"bryanhce"},"content":"**Extensions**","lastModifiedDate":"2022-10-17"},{"lineNumber":604,"author":{"gitId":"bryanhce"},"content":"* 2a. The update data is invalid.","lastModifiedDate":"2022-10-17"},{"lineNumber":605,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":606,"author":{"gitId":"kangzongxian"},"content":"    * 2a1. System shows an error message.","lastModifiedDate":"2022-10-26"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":608,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-10-17"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":610,"author":{"gitId":"bryanhce"},"content":"**Use case 8: Exit the program**","lastModifiedDate":"2022-10-17"},{"lineNumber":611,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":612,"author":{"gitId":"bryanhce"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":613,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":614,"author":{"gitId":"bryanhce"},"content":"1. User requests exit the program","lastModifiedDate":"2022-09-27"},{"lineNumber":615,"author":{"gitId":"bryanhce"},"content":"3. System exits the program","lastModifiedDate":"2022-10-17"},{"lineNumber":616,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":617,"author":{"gitId":"bryanhce"},"content":"    Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":618,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":619,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":620,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":621,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":622,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"bryanhce"},"content":"2. Should be able to hold up to 1000 guests without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-27"},{"lineNumber":628,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"bryanhce"},"content":"4. The response to any use action should become visible within 5 seconds.","lastModifiedDate":"2022-09-27"},{"lineNumber":630,"author":{"gitId":"kangzongxian"},"content":"5. The number of guests a user enters should be at least 1 and at most 4.","lastModifiedDate":"2022-10-26"},{"lineNumber":631,"author":{"gitId":"kangzongxian"},"content":"6. The guests should have a check-in and check-out date.","lastModifiedDate":"2022-10-26"},{"lineNumber":632,"author":{"gitId":"bryanhce"},"content":"7. The guest cannot stay for a period longer than 1 year.","lastModifiedDate":"2022-09-27"},{"lineNumber":633,"author":{"gitId":"bryanhce"},"content":"8. Data should be saved into a JSON file before exiting the program.","lastModifiedDate":"2022-09-27"},{"lineNumber":634,"author":{"gitId":"bryanhce"},"content":"9. The project is expected to adhere to a schedule that delivers a feature set every two weeks.","lastModifiedDate":"2022-09-27"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"bryanhce"},"content":"* **Number of guests**: Refers to the total number of people staying in the hotel room","lastModifiedDate":"2022-09-27"},{"lineNumber":641,"author":{"gitId":"bryanhce"},"content":"* **Guest**: Refers to the guest who booked the hotel room.","lastModifiedDate":"2022-10-01"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"bryanhce"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample guests. The window size may not be optimum.","lastModifiedDate":"2022-10-03"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"bryanhce"},"content":"[//]: # (1. _{ more test cases …​ }_)","lastModifiedDate":"2022-10-26"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"bryanhce"},"content":"### Deleting a guest","lastModifiedDate":"2022-10-01"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"bryanhce"},"content":"1. Deleting a guest while all guests are being shown","lastModifiedDate":"2022-10-01"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"bryanhce"},"content":"   1. Prerequisites: List all guests using the `list` command. Multiple guests in the list.","lastModifiedDate":"2022-10-01"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"bryanhce"},"content":"      Expected: First guest is deleted from the list. Details of the deleted guest shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2022-10-03"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"bryanhce"},"content":"      Expected: No guest is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-10-01"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"bryanhce"},"content":"[//]: # (1. _{ more test cases …​ }_)","lastModifiedDate":"2022-10-26"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"bryanhce"},"content":"[//]: # (1. _{ more test cases …​ }_)","lastModifiedDate":"2022-10-26"},{"lineNumber":695,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":696,"author":{"gitId":"Lan-Jingbo"},"content":"### Adding a guest","lastModifiedDate":"2022-10-20"},{"lineNumber":697,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":698,"author":{"gitId":"Lan-Jingbo"},"content":"1. Adding a guest","lastModifiedDate":"2022-10-20"},{"lineNumber":699,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":700,"author":{"gitId":"Lan-Jingbo"},"content":"   1. Prerequisites: Only one guest to be added.","lastModifiedDate":"2022-10-24"},{"lineNumber":701,"author":{"gitId":"kangzongxian"},"content":"      The name of the guest to be added should not exist in GuestBook.","lastModifiedDate":"2022-10-25"},{"lineNumber":702,"author":{"gitId":"Lan-Jingbo"},"content":"   The format and data of the command should be valid.","lastModifiedDate":"2022-10-24"},{"lineNumber":703,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":704,"author":{"gitId":"Lan-Jingbo"},"content":"   2. Test case: `add n/John Doe p/98765432 e/johnd@example.com rm/05-73","lastModifiedDate":"2022-10-20"},{"lineNumber":705,"author":{"gitId":"Lan-Jingbo"},"content":"                  dr/13/09/22 - 15/09/22 ng/1 rq/Apply for room service `\u003cbr\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":706,"author":{"gitId":"Lan-Jingbo"},"content":"      Expected: Guest add successfully","lastModifiedDate":"2022-10-24"},{"lineNumber":707,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":708,"author":{"gitId":"Lan-Jingbo"},"content":"   3. Test case: `add n/John Doe p/98765431 e/johnd@nus.com rm/06-73","lastModifiedDate":"2022-10-20"},{"lineNumber":709,"author":{"gitId":"Lan-Jingbo"},"content":"                  dr/13/09/22 - 15/09/23 ng/1 rq/Kill the insect `\u003cbr\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":710,"author":{"gitId":"Lan-Jingbo"},"content":"      Expected: No guest is added,","lastModifiedDate":"2022-10-20"},{"lineNumber":711,"author":{"gitId":"kangzongxian"},"content":"      because the name is already in GuestBook. Error details shown in the status message.","lastModifiedDate":"2022-10-25"},{"lineNumber":712,"author":{"gitId":"Lan-Jingbo"},"content":"         Status bar remains the same.","lastModifiedDate":"2022-10-20"},{"lineNumber":713,"author":{"gitId":"Lan-Jingbo"},"content":"   ","lastModifiedDate":"2022-10-20"},{"lineNumber":714,"author":{"gitId":"kangzongxian"},"content":"   4. Test case: `add n/Peter p/98765431 e/johnd@nus.com rm/05-73","lastModifiedDate":"2022-10-26"},{"lineNumber":715,"author":{"gitId":"kangzongxian"},"content":"         dr/13/09/22 - 15/09/23 ng/1 rq/Kill the insect `\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":716,"author":{"gitId":"kangzongxian"},"content":"         Expected: No guest is added,","lastModifiedDate":"2022-10-26"},{"lineNumber":717,"author":{"gitId":"kangzongxian"},"content":"         because the room is already in GuestBook. Error details shown in the status message.","lastModifiedDate":"2022-10-26"},{"lineNumber":718,"author":{"gitId":"kangzongxian"},"content":"         Status bar remains the same.","lastModifiedDate":"2022-10-26"},{"lineNumber":719,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":720,"author":{"gitId":"kangzongxian"},"content":"   5. Test case: `add n/John@y Doe p/98765431 e/johnd@nus.com rm/06-73","lastModifiedDate":"2022-10-26"},{"lineNumber":721,"author":{"gitId":"Lan-Jingbo"},"content":"                  dr/13/09/22 - 15/09/23 ng/1 rq/Kill the insect `\u003cbr\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":722,"author":{"gitId":"Lan-Jingbo"},"content":"      Expected: No guest is added, because the name is invalid. Error details shown in the status message.","lastModifiedDate":"2022-10-20"},{"lineNumber":723,"author":{"gitId":"Lan-Jingbo"},"content":"      Status bar remains the same.","lastModifiedDate":"2022-10-20"},{"lineNumber":724,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":725,"author":{"gitId":"kangzongxian"},"content":"   6. Test case: `add n/Johnny Doe p/+65431 e/johnd@nus.com rm/06-73","lastModifiedDate":"2022-10-26"},{"lineNumber":726,"author":{"gitId":"Lan-Jingbo"},"content":"                  dr/13/09/22 - 15/09/23 ng/1 rq/Kill the insect `\u003cbr\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":727,"author":{"gitId":"Lan-Jingbo"},"content":"      Expected: No guest is added, because the phone number is invalid. Error details shown in the status message.","lastModifiedDate":"2022-10-20"},{"lineNumber":728,"author":{"gitId":"Lan-Jingbo"},"content":"      Status bar remains the same.","lastModifiedDate":"2022-10-20"},{"lineNumber":729,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":730,"author":{"gitId":"kangzongxian"},"content":"   7. Test case: `add n/Johnny Doe p/98765431 e/nus.com rm/06-73","lastModifiedDate":"2022-10-26"},{"lineNumber":731,"author":{"gitId":"Lan-Jingbo"},"content":"                  dr/13/09/22 - 15/09/23 ng/1 rq/Kill the insect `\u003cbr\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":732,"author":{"gitId":"Lan-Jingbo"},"content":"      Expected: No guest is added, because the email address is invalid. Error details shown in the status message.","lastModifiedDate":"2022-10-24"},{"lineNumber":733,"author":{"gitId":"Lan-Jingbo"},"content":"      Status bar remains the same.","lastModifiedDate":"2022-10-20"},{"lineNumber":734,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":735,"author":{"gitId":"kangzongxian"},"content":"   8. Test case: `add n/Johnny Doe p/98765431 e/johnd@nus.com rm/!06-73","lastModifiedDate":"2022-10-26"},{"lineNumber":736,"author":{"gitId":"Lan-Jingbo"},"content":"                  dr/13/09/22 - 15/09/23 ng/1 rq/Kill the insect `\u003cbr\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":737,"author":{"gitId":"Lan-Jingbo"},"content":"      Expected: No guest is added, because the room is invalid. Error details shown in the status message.","lastModifiedDate":"2022-10-24"},{"lineNumber":738,"author":{"gitId":"Lan-Jingbo"},"content":"      Status bar remains the same.","lastModifiedDate":"2022-10-20"},{"lineNumber":739,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":740,"author":{"gitId":"kangzongxian"},"content":"   9. Test case: `add n/Johnny Doe p/98765431 e/johnd@nus.com rm/06-73","lastModifiedDate":"2022-10-26"},{"lineNumber":741,"author":{"gitId":"Lan-Jingbo"},"content":"                  dr/13/09/22 - 13/09/23 ng/1 rq/Kill the insect `\u003cbr\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":742,"author":{"gitId":"Lan-Jingbo"},"content":"      Expected: No guest is added, because the date range is invalid. Error details shown in the status message.","lastModifiedDate":"2022-10-20"},{"lineNumber":743,"author":{"gitId":"Lan-Jingbo"},"content":"      Status bar remains the same.","lastModifiedDate":"2022-10-20"},{"lineNumber":744,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":745,"author":{"gitId":"kangzongxian"},"content":"   10. Test case: `add n/Johnny Doe p/98765431 e/johnd@nus.com rm/06-73","lastModifiedDate":"2022-10-26"},{"lineNumber":746,"author":{"gitId":"Lan-Jingbo"},"content":"                   dr/13/09/22 - 15/09/23 ng/5 rq/Kill the insect `\u003cbr\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":747,"author":{"gitId":"Lan-Jingbo"},"content":"       Expected: No guest is added, because the number of guest is invalid (\u003e4).","lastModifiedDate":"2022-10-24"},{"lineNumber":748,"author":{"gitId":"Lan-Jingbo"},"content":"       Error details shown in the status message.","lastModifiedDate":"2022-10-24"},{"lineNumber":749,"author":{"gitId":"Lan-Jingbo"},"content":"          Status bar remains the same.","lastModifiedDate":"2022-10-20"},{"lineNumber":750,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":751,"author":{"gitId":"kangzongxian"},"content":"   11. Test case: `add n/Johnny Doe p/98765431 e/johnd@nus.com rm/06-73","lastModifiedDate":"2022-10-26"},{"lineNumber":752,"author":{"gitId":"Lan-Jingbo"},"content":"                   dr/13/09/22 - 15/09/23 ng/1 rq/Kill the insect `\u003cbr\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":753,"author":{"gitId":"Lan-Jingbo"},"content":"       Expected: No guest is added, because the is room clean is invalid. Error details shown in the status message.","lastModifiedDate":"2022-10-20"},{"lineNumber":754,"author":{"gitId":"Lan-Jingbo"},"content":"       Status bar remains the same.","lastModifiedDate":"2022-10-20"},{"lineNumber":755,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":756,"author":{"gitId":"bryanhce"},"content":"   ","lastModifiedDate":"2022-10-26"},{"lineNumber":757,"author":{"gitId":"bryanhce"},"content":"   12. Let INVALID_REQUEST be a string of 501 characters long. \u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":758,"author":{"gitId":"bryanhce"},"content":"       Test case: `add n/Johnny Doe p/98765431 e/johnd@nus.com rm/06-73","lastModifiedDate":"2022-10-26"},{"lineNumber":759,"author":{"gitId":"Lan-Jingbo"},"content":"       dr/13/09/22 - 15/09/23 ng/1 rq/INVALID_REQUEST `\u003cbr\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":760,"author":{"gitId":"Lan-Jingbo"},"content":"       Expected: No guest is added, because the request is invalid (\u003e500 characters).","lastModifiedDate":"2022-10-24"},{"lineNumber":761,"author":{"gitId":"Lan-Jingbo"},"content":"       Status bar remains the same.","lastModifiedDate":"2022-10-20"},{"lineNumber":762,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":763,"author":{"gitId":"Lan-Jingbo"},"content":"### Editing a guest","lastModifiedDate":"2022-10-20"},{"lineNumber":764,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":765,"author":{"gitId":"Lan-Jingbo"},"content":"1. Editing a guest","lastModifiedDate":"2022-10-20"},{"lineNumber":766,"author":{"gitId":"Lan-Jingbo"},"content":"   ","lastModifiedDate":"2022-10-20"},{"lineNumber":767,"author":{"gitId":"bryanhce"},"content":"   1. Prerequisite: Only 1 guest to be edited. The guest\u0027s index should exist.","lastModifiedDate":"2022-10-26"},{"lineNumber":768,"author":{"gitId":"bryanhce"},"content":"   The guest should exist in GuestBook. The format and content of the command should be valid.","lastModifiedDate":"2022-10-26"},{"lineNumber":769,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":770,"author":{"gitId":"Lan-Jingbo"},"content":"   2. Test case: `edit 1 n/Johnny`\u003cbr\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":771,"author":{"gitId":"Lan-Jingbo"},"content":"      Expected: Guest edit successfully, the first guest\u0027s name will change from \"John Doe\" to \"Johnny\"","lastModifiedDate":"2022-10-24"},{"lineNumber":772,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":773,"author":{"gitId":"Lan-Jingbo"},"content":"   3. Test case: `edit 99999 n/Johnny`\u003cbr\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":774,"author":{"gitId":"Lan-Jingbo"},"content":"      Expected: No guest is edited, because the input index does not exist. Error details shown in the status message.","lastModifiedDate":"2022-10-20"},{"lineNumber":775,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":776,"author":{"gitId":"Lan-Jingbo"},"content":"   4. Test case: `edit 1 n/Jo@`\u003cbr\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":777,"author":{"gitId":"Lan-Jingbo"},"content":"      Expected: No guest is edited, because the name is invalid. Error details shown in the status message.","lastModifiedDate":"2022-10-20"},{"lineNumber":778,"author":{"gitId":"Lan-Jingbo"},"content":"      Status bar remains the same.","lastModifiedDate":"2022-10-20"},{"lineNumber":779,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":780,"author":{"gitId":"bryanhce"},"content":"   5. Other incorrect edit commands to try: `edit`, `edit x`, `edit 1 rc/hi`, `edit ...`\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":781,"author":{"gitId":"bryanhce"},"content":"      Expected: No guest is edited, because the parameters are invalid. Error details shown in the status message.","lastModifiedDate":"2022-10-27"},{"lineNumber":782,"author":{"gitId":"bryanhce"},"content":"      Status bar remains the same.","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"kangzongxian":73,"jehousoh":39,"Lan-Jingbo":76,"bryanhce":235,"-":304,"JustinPeng13":55}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"2. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"3. **Verify the setup**:","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"   1. Run the `seedu.guest.Main` and try a few commands.","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"   2. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"JustinPeng13"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [GuestBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"bryanhce":5,"-":50,"JustinPeng13":1}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"   e.g. `seedu.guest.commons.StringUtilTest`","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"   e.g. `seedu.guest.storage.StorageManagerTest`","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"   e.g. `seedu.guest.logic.LogicManagerTest`","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"bryanhce":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jehousoh"},"content":"![App Logo](images/guest_book_160.png)","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"JustinPeng13"},"content":"## Introduction","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"GuestBook is a **desktop app for managing guests in a hotel,","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"optimized for use via a Command Line Interface** (CLI)","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"If you are a hotel manager who can type fast, GuestBook can get your","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"JustinPeng13"},"content":"guest management tasks done **faster** than traditional GUI apps.","lastModifiedDate":"2022-10-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"JustinPeng13"},"content":"You can use GuestBook to track guests and their details including _name_, _email address_, _phone number_, ","lastModifiedDate":"2022-10-29"},{"lineNumber":17,"author":{"gitId":"JustinPeng13"},"content":"_room number_, _dates of stay_, _number of guests_, _bill_, _request_, and whether their _room has been cleaned_. ","lastModifiedDate":"2022-10-29"},{"lineNumber":18,"author":{"gitId":"JustinPeng13"},"content":"By allowing you to _add_, _edit_, _delete_, and _filter_ guests, GuestBook can fulfill all your hotel management needs.","lastModifiedDate":"2022-10-29"},{"lineNumber":19,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"JustinPeng13"},"content":"This user guide provides in-depth descriptions of all the available features in GuestBook and how to use them.","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"## **Table of Contents**","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"## How to use the User Guide","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"JustinPeng13"},"content":"* For a quick and easy way to **get started** with GuestBook, you can visit the [Quick Start](#quick-start) section.","lastModifiedDate":"2022-10-29"},{"lineNumber":31,"author":{"gitId":"JustinPeng13"},"content":"* To **understand the terms** we use in GuestBook, you can visit the [Glossary](#glossary) section.","lastModifiedDate":"2022-10-29"},{"lineNumber":32,"author":{"gitId":"JustinPeng13"},"content":"* To see the **amazing features** that GuestBook provides and how to use them, you can visit the [Features](#features) section.","lastModifiedDate":"2022-10-29"},{"lineNumber":33,"author":{"gitId":"JustinPeng13"},"content":"* Having **issues**? You can check out the [FAQ](#faq) section to see find solutions to your issues.","lastModifiedDate":"2022-10-29"},{"lineNumber":34,"author":{"gitId":"JustinPeng13"},"content":"* Have a **question** for us? Feel free to [contact us](#contact-us), and we will do our best to assist you.","lastModifiedDate":"2022-10-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"jehousoh"},"content":"## Components of the UI","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"jehousoh"},"content":"### Locations of the components","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"jehousoh"},"content":"![UiComponentLabels](images/UiComponentLabels.png)","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"jehousoh"},"content":"### Use of the components","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"jehousoh"},"content":"| Component                              | Use                                                                  |","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"JustinPeng13"},"content":"|----------------------------------------|----------------------------------------------------------------------|","lastModifiedDate":"2022-10-29"},{"lineNumber":49,"author":{"gitId":"JustinPeng13"},"content":"| **Command Box**                        | This is where you **enter commands**.                                |","lastModifiedDate":"2022-10-29"},{"lineNumber":50,"author":{"gitId":"JustinPeng13"},"content":"| **Result Display**                     | This is where the detailed **results** of the command will be shown. |","lastModifiedDate":"2022-10-29"},{"lineNumber":51,"author":{"gitId":"JustinPeng13"},"content":"| **Guest Card**                         | This is where all **guest information** of a guest will be shown.    |","lastModifiedDate":"2022-10-29"},{"lineNumber":52,"author":{"gitId":"JustinPeng13"},"content":"| **Status Bar**                         | This shows the location of your **save file**.                       |","lastModifiedDate":"2022-10-29"},{"lineNumber":53,"author":{"gitId":"JustinPeng13"},"content":"| ![Phone](images/phone.png)             | This is the **phone number** of the guest.                           |","lastModifiedDate":"2022-10-29"},{"lineNumber":54,"author":{"gitId":"JustinPeng13"},"content":"| ![Email](images/email.png)             | This is the **email address** of the guest.                          |","lastModifiedDate":"2022-10-29"},{"lineNumber":55,"author":{"gitId":"JustinPeng13"},"content":"| ![Room](images/room.png)               | This is the **room** the guest is staying in.                        |","lastModifiedDate":"2022-10-29"},{"lineNumber":56,"author":{"gitId":"JustinPeng13"},"content":"| ![DateRange](images/dateRange.png)     | These are the **dates of stay** of the guest.                        |","lastModifiedDate":"2022-10-29"},{"lineNumber":57,"author":{"gitId":"JustinPeng13"},"content":"| ![NumberOfGuests](images/group.png)    | This is the total **number of guests** in the guest\u0027s room.          |","lastModifiedDate":"2022-10-29"},{"lineNumber":58,"author":{"gitId":"JustinPeng13"},"content":"| ![IsRoomClean](images/isRoomClean.png) | This shows whether the guest\u0027s **room has been cleaned**.            |","lastModifiedDate":"2022-10-29"},{"lineNumber":59,"author":{"gitId":"JustinPeng13"},"content":"| ![Bill](images/bill.png)               | This is the current **bill** of the guest.                           |","lastModifiedDate":"2022-10-29"},{"lineNumber":60,"author":{"gitId":"JustinPeng13"},"content":"| ![Request](images/request.png)         | This shows any **requests** made by the guest.                       |","lastModifiedDate":"2022-10-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"bryanhce"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"jehousoh"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"JustinPeng13"},"content":"1. Ensure you have `Java 11` or above installed in your Computer.","lastModifiedDate":"2022-10-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":71,"author":{"gitId":"bryanhce"},"content":"2. Download the latest `guestbook.jar` from [here](https://github.com/AY2223S1-CS2103T-W16-1/tp/releases). \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":72,"author":{"gitId":"bryanhce"},"content":"   ![Ui](images/DownloadInstruction.png) \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":74,"author":{"gitId":"bryanhce"},"content":"3. Copy the file to the folder you want to use as the **home folder** for your GuestBook. \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":75,"author":{"gitId":"bryanhce"},"content":"   ![Ui](images/GuestBookIcon.png) \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":77,"author":{"gitId":"bryanhce"},"content":"4. Double-click on `guestbook.jar` to start the app. The GUI, similar to the image below, should pop up in a few seconds. ","lastModifiedDate":"2022-10-30"},{"lineNumber":78,"author":{"gitId":"JustinPeng13"},"content":"Note that the app contains **sample data**.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":79,"author":{"gitId":"bryanhce"},"content":"   ![Ui](images/Ui.png) \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"bryanhce"},"content":"5. Type the command in the command box and press _Enter_ to execute it. E.g., typing **`help`** and pressing _Enter_ will open the help window.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":82,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":83,"author":{"gitId":"bryanhce"},"content":"6. To kickstart your journey, you can add a guest, `John Doe`, to GuestBook using the **`add`** command.","lastModifiedDate":"2022-10-30"},{"lineNumber":84,"author":{"gitId":"kangzongxian"},"content":"   * **`add`** `n/John Doe p/98765432 e/johnd@example.com rm/05-73 dr/13/09/22 - 15/09/22 ng/3 rq/Extra towels`: Adds a guest named `John Doe` to GuestBook. ","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"bryanhce"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"bryanhce"},"content":"7. To find `John Doe`, you can use the **`find`** command, and search through any of `John Doe`\u0027s `fields`, such as his _name_ or _room_. The command below can help you find guests that match the keywords you entered.","lastModifiedDate":"2022-10-30"},{"lineNumber":88,"author":{"gitId":"JustinPeng13"},"content":"   * **`find`** `John Doe` : Finds all the guests who have at least one field containing `John` or `Doe` (_case-insensitive_).","lastModifiedDate":"2022-10-29"},{"lineNumber":89,"author":{"gitId":"bryanhce"},"content":"     \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":90,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"bryanhce"},"content":"8. To make changes to `John Doe`, you can use the **`edit`** command. This changes the guest\u0027s fields based on the new values you provide. The other values will remain unchanged. \u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":92,"author":{"gitId":"JustinPeng13"},"content":"For example, if `John Doe` is the second guest in the list, and you want to change his room number to `05-55`, you can do this.","lastModifiedDate":"2022-10-29"},{"lineNumber":93,"author":{"gitId":"kangzongxian"},"content":"    * **`edit`** `2` `rm/05-55`n: Changes the `Room` of `John Doe` to `05-55` in GuestBook.","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"bryanhce"},"content":"      \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":95,"author":{"gitId":"jehousoh"},"content":"   ","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"bryanhce"},"content":"9. After executing a **`find`** command, you might realise that some of your guests are no longer visible, as they are not in the current list.\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":97,"author":{"gitId":"JustinPeng13"},"content":"To see a list of all your guests, you can use the **`list`** command.","lastModifiedDate":"2022-10-29"},{"lineNumber":98,"author":{"gitId":"kangzongxian"},"content":"      * **`list`**: List all the guests in GuestBook.","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"bryanhce"},"content":"        \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":100,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"bryanhce"},"content":"10. In the event that a guest orders room service, you can add charges to the guest\u0027s bill using the **`bill`** command.\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":102,"author":{"gitId":"JustinPeng13"},"content":"For example, you can charge the third guest `30.35` by running the command below.","lastModifiedDate":"2022-10-29"},{"lineNumber":103,"author":{"gitId":"JustinPeng13"},"content":"    * **`bill`** `3` `b/+30.35`: Adds `30.35` to the bill of the third guest.","lastModifiedDate":"2022-10-29"},{"lineNumber":104,"author":{"gitId":"bryanhce"},"content":"      \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":105,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"bryanhce"},"content":"11. When a guest checks out of your hotel, you can remove the guest using the **`delete`** command.","lastModifiedDate":"2022-10-30"},{"lineNumber":107,"author":{"gitId":"kangzongxian"},"content":"    * **`delete`** `3` : Deletes the third guest shown in the current list.","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"bryanhce"},"content":"      \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"bryanhce"},"content":"12. To clear your GuestBook of all entries, you can use the **`clear`** command.\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":111,"author":{"gitId":"JustinPeng13"},"content":"\u003cspan style\u003d\"background-color: yellow; color: black\"\u003e**WARNING:** This action is **irreversible**. Use with caution.\u003c/span\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":112,"author":{"gitId":"kangzongxian"},"content":"    * **`clear`** : Deletes all guests.","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"bryanhce"},"content":"      \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"bryanhce"},"content":"13. Finally, to quit GuestBook, you can run the **`exit`** command.","lastModifiedDate":"2022-10-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"bryanhce"},"content":"      \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"bryanhce"},"content":"14. For more details, you can refer to the [Features](#features) below for the exact specifications of each command. Thank you and we hope you enjoy using GuestBook!","lastModifiedDate":"2022-10-30"},{"lineNumber":120,"author":{"gitId":"bryanhce"},"content":"    \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":121,"author":{"gitId":"bryanhce"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-10-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"bryanhce"},"content":"## Glossary","lastModifiedDate":"2022-10-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":127,"author":{"gitId":"bryanhce"},"content":"| Term             | Definition                                                                                                                                          |","lastModifiedDate":"2022-10-25"},{"lineNumber":128,"author":{"gitId":"bryanhce"},"content":"|------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"bryanhce"},"content":"| **Alphanumeric** | Refers to characters that are numbers 0-9 and alphabets A-Z, both uppercase and lowercase.                                                          |","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"bryanhce"},"content":"| **dd/MM/yy**     | Refers to the date format, where dd stands for 2 digit days, 2 digit months and the last 2 digits for the year and they must be separated by a \"/\". |","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"bryanhce"},"content":"| **CLI**          | Stands for Command Line Interface, it refers to a text-based interface used to execute operations of the system.                                    |","lastModifiedDate":"2022-10-30"},{"lineNumber":132,"author":{"gitId":"bryanhce"},"content":"| **Guest**        | A guest staying at the hotel.                                                                                                                       |","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"bryanhce"},"content":"| **GUI**          | Stands for Graphical User Interface, it refers to an interface that allows users to interact with the system through friendly visuals.              |","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"bryanhce"},"content":"| **Hard disk**    | A data storage device used to store and retrieve data.                                                                                              |","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"bryanhce"},"content":"| **Index**        | The number that corresponds to the position of the Guest in the list. The index **must be a positive integer** like 1, 2 or 3.                      |","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"bryanhce"},"content":"| **Java**         | A programming language used to run GuestBook.                                                                                                       |","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"bryanhce"},"content":"| **JSON file**    | Stands for JavaScript Object Notation. It refers to a file format to store data.                                                                    |","lastModifiedDate":"2022-10-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":139,"author":{"gitId":"bryanhce"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-10-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"JustinPeng13"},"content":"* Words in `UPPER_CASE` are the **parameters** to be supplied by you, the user.\u003cbr\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":150,"author":{"gitId":"JustinPeng13"},"content":"  E.g., In `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2022-10-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":153,"author":{"gitId":"JustinPeng13"},"content":"* Items in square brackets are **optional**.\u003cbr\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":154,"author":{"gitId":"JustinPeng13"},"content":"  E.g., `n/NAME [rq/REQUEST]` can be used as `n/John Doe rq/Extra towels` or as `n/John Doe`.","lastModifiedDate":"2022-10-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":157,"author":{"gitId":"JustinPeng13"},"content":"* Parameters can be in **any order**.\u003cbr\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":158,"author":{"gitId":"JustinPeng13"},"content":"  E.g., If the command specifies `n/NAME p/PHONE`, `p/PHONE n/NAME` is also acceptable.","lastModifiedDate":"2022-10-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":160,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":161,"author":{"gitId":"JustinPeng13"},"content":"* If a parameter is expected only once but is specified multiple times in the command, only the **last occurrence** of the parameter will be considered.\u003cbr\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":162,"author":{"gitId":"JustinPeng13"},"content":"  E.g., If you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2022-10-29"},{"lineNumber":163,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":164,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":165,"author":{"gitId":"JustinPeng13"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be **ignored**.\u003cbr\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":166,"author":{"gitId":"JustinPeng13"},"content":"  E.g., If the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2022-10-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":168,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"### Viewing help: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"JustinPeng13"},"content":"This command shows a message explaining how to access the **help page**, which is this user guide you are reading.","lastModifiedDate":"2022-10-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"bryanhce"},"content":"**Format**: `help`","lastModifiedDate":"2022-10-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"bryanhce"},"content":"### Adding a guest: `add`","lastModifiedDate":"2022-10-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"bryanhce"},"content":"This command adds a guest to GuestBook.","lastModifiedDate":"2022-10-28"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":182,"author":{"gitId":"JustinPeng13"},"content":"This command is typically used to **check a guest in** to your hotel with their personal and room details.","lastModifiedDate":"2022-10-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"bryanhce"},"content":"**Format**: `add n/NAME p/PHONE e/EMAIL rm/ROOM dr/DATE_RANGE ng/NUMBER_OF_GUESTS [rq/REQUEST]`","lastModifiedDate":"2022-10-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"bryanhce"},"content":"**Constraints of parameters**:","lastModifiedDate":"2022-10-29"},{"lineNumber":187,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":188,"author":{"gitId":"bryanhce"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;Unless stated otherwise, all fields **should not** be left blank.","lastModifiedDate":"2022-10-30"},{"lineNumber":189,"author":{"gitId":"bryanhce"},"content":"* `NAME` should only contain alphanumeric characters and spaces.","lastModifiedDate":"2022-10-23"},{"lineNumber":190,"author":{"gitId":"kangzongxian"},"content":"* `PHONE` should only contain numbers, and it should be at least 3 digits and at most 15 digits long.","lastModifiedDate":"2022-10-26"},{"lineNumber":191,"author":{"gitId":"bryanhce"},"content":"* `EMAIL` should only contain alphanumeric characters and \u0027@\u0027 character. The local segment (before \"@\") should be at most 64 characters long, and the domain segment (after \"@\") should be at most 255 characters long.","lastModifiedDate":"2022-10-28"},{"lineNumber":192,"author":{"gitId":"bryanhce"},"content":"* `ROOM` should only contain alphanumeric characters. A hyphen can only be added if it is in between 2 alphanumeric characters.","lastModifiedDate":"2022-10-30"},{"lineNumber":193,"author":{"gitId":"bryanhce"},"content":"* `DATE_RANGE` should follow the format dd/MM/yy - dd/MM/yy.","lastModifiedDate":"2022-10-23"},{"lineNumber":194,"author":{"gitId":"bryanhce"},"content":"* `NUMBER_OF_GUESTS` should only contain numbers, and it should be at least 1 and at most 4.","lastModifiedDate":"2022-10-23"},{"lineNumber":195,"author":{"gitId":"kangzongxian"},"content":"* `REQUEST` is an optional field, and it should be at most 500 characters long.","lastModifiedDate":"2022-10-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"bryanhce"},"content":"**Examples**:","lastModifiedDate":"2022-10-29"},{"lineNumber":198,"author":{"gitId":"bryanhce"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com rm/05-73 dr/19/05/22 - 24/05/22 ng/3`","lastModifiedDate":"2022-10-20"},{"lineNumber":199,"author":{"gitId":"bryanhce"},"content":"* `add n/Betsy Crowe p/82297553 e/betsycrowe@example.com rm/Aloha5 dr/10/01/12 - 11/01/12 ng/1 rq/Extra towels`","lastModifiedDate":"2022-10-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"bryanhce"},"content":"### Listing all guests: `list`","lastModifiedDate":"2022-10-01"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"kangzongxian"},"content":"This command displays a list of all guests in GuestBook.","lastModifiedDate":"2022-10-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"bryanhce"},"content":"**Format**: `list`","lastModifiedDate":"2022-10-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"bryanhce"},"content":"### Editing a guest: `edit`","lastModifiedDate":"2022-10-01"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"kangzongxian"},"content":"This command edits an existing guest in GuestBook.","lastModifiedDate":"2022-10-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"bryanhce"},"content":"The guest specified at the `INDEX` is the guest you wish to edit in the current list. The existing values will be **updated** to the new values","lastModifiedDate":"2022-10-30"},{"lineNumber":212,"author":{"gitId":"JustinPeng13"},"content":"you provide. The values that you **did not specify** to edit will remain **unchanged**.","lastModifiedDate":"2022-10-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"bryanhce"},"content":"**Format**: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [rm/ROOM] [dr/DATE_RANGE] [ng/NUMBER_OF_GUESTS] [rc/IS_ROOM_CLEAN] [rq/REQUEST]`","lastModifiedDate":"2022-10-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":216,"author":{"gitId":"bryanhce"},"content":"**Constraints of parameters**:","lastModifiedDate":"2022-10-29"},{"lineNumber":217,"author":{"gitId":"bryanhce"},"content":"* Identical to the constraints of the `add` feature from above.","lastModifiedDate":"2022-10-26"},{"lineNumber":218,"author":{"gitId":"JustinPeng13"},"content":"* `IS_ROOM_CLEAN` should only contain `yes`, `no`, `y` or `n` (_case-insensitive_).","lastModifiedDate":"2022-10-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"bryanhce"},"content":"**Examples**:","lastModifiedDate":"2022-10-29"},{"lineNumber":221,"author":{"gitId":"bryanhce"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the first guest to `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-10-26"},{"lineNumber":222,"author":{"gitId":"bryanhce"},"content":"*  `edit 2 n/Betsy Crower` Edits the name of the second guest to `Betsy Crower`.","lastModifiedDate":"2022-10-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"JustinPeng13"},"content":"### Billing a guest: `bill`","lastModifiedDate":"2022-10-17"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":226,"author":{"gitId":"JustinPeng13"},"content":"This command updates the bill of a guest in GuestBook. Note that the bill here refers to the **total additional charges incurred**","lastModifiedDate":"2022-10-29"},{"lineNumber":227,"author":{"gitId":"JustinPeng13"},"content":"by the guest during their stay at your hotel and should not include the cost of the room booking.","lastModifiedDate":"2022-10-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":229,"author":{"gitId":"bryanhce"},"content":"This command updates the bill of the guest at the specified `INDEX` of the current list. ","lastModifiedDate":"2022-10-30"},{"lineNumber":230,"author":{"gitId":"JustinPeng13"},"content":"Depending on the sign (`+` or `-`) of your input, the existing bill value will be **increased** ","lastModifiedDate":"2022-10-29"},{"lineNumber":231,"author":{"gitId":"JustinPeng13"},"content":"or **decreased** respectively by the value you provide.","lastModifiedDate":"2022-10-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":233,"author":{"gitId":"bryanhce"},"content":"**Format**: `bill INDEX b/BILL`","lastModifiedDate":"2022-10-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":235,"author":{"gitId":"bryanhce"},"content":"**Constraints of parameters**:","lastModifiedDate":"2022-10-29"},{"lineNumber":236,"author":{"gitId":"JustinPeng13"},"content":"* `BILL` should only contain numbers, and can have up to 2 decimal places.","lastModifiedDate":"2022-10-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":238,"author":{"gitId":"bryanhce"},"content":"**Examples**:","lastModifiedDate":"2022-10-29"},{"lineNumber":239,"author":{"gitId":"bryanhce"},"content":"* `bill 1 b/+99.99` or `bill 1 b/99.99` Adds 99.99 to the bill of the first guest.","lastModifiedDate":"2022-10-26"},{"lineNumber":240,"author":{"gitId":"bryanhce"},"content":"* `bill 2 b/-10` Subtracts 10 from the bill of the second guest.","lastModifiedDate":"2022-10-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":242,"author":{"gitId":"bryanhce"},"content":"**Common mistakes**:","lastModifiedDate":"2022-10-29"},{"lineNumber":243,"author":{"gitId":"JustinPeng13"},"content":"* Missing out the `b/` prefix in the bill command.","lastModifiedDate":"2022-10-29"},{"lineNumber":244,"author":{"gitId":"kangzongxian"},"content":"* Editing the bill using the edit command instead of the bill command.","lastModifiedDate":"2022-10-25"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":246,"author":{"gitId":"jehousoh"},"content":"### Locating guests: `find`","lastModifiedDate":"2022-10-22"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"Lan-Jingbo"},"content":"This command locates guests whose details contain any of the given keywords. ","lastModifiedDate":"2022-10-29"},{"lineNumber":249,"author":{"gitId":"Lan-Jingbo"},"content":"This allows you to search through all guests\u0027 fields.","lastModifiedDate":"2022-10-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":251,"author":{"gitId":"Lan-Jingbo"},"content":"This command is typically used when searching for a guest of a **specific characteristic**.","lastModifiedDate":"2022-10-29"},{"lineNumber":252,"author":{"gitId":"Lan-Jingbo"},"content":"For example, the command `find no` will display all ","lastModifiedDate":"2022-10-29"},{"lineNumber":253,"author":{"gitId":"Lan-Jingbo"},"content":"the rooms that have room clean statuses set to `no`.","lastModifiedDate":"2022-10-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"bryanhce"},"content":"**Format**: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-10-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"bryanhce"},"content":"**Constraints of parameters**:","lastModifiedDate":"2022-10-29"},{"lineNumber":258,"author":{"gitId":"JustinPeng13"},"content":"* The search is **case-insensitive**. E.g., `hans` will match `Hans`","lastModifiedDate":"2022-10-30"},{"lineNumber":259,"author":{"gitId":"JustinPeng13"},"content":"* The order of the keywords does not matter. E.g., `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2022-10-29"},{"lineNumber":260,"author":{"gitId":"JustinPeng13"},"content":"* **Only full words** will be matched E.g., `Han` will not match `Hans`","lastModifiedDate":"2022-10-30"},{"lineNumber":261,"author":{"gitId":"Lan-Jingbo"},"content":"* Guests matching **at least one** keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-10-29"},{"lineNumber":262,"author":{"gitId":"JustinPeng13"},"content":"  E.g., `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2022-10-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"bryanhce"},"content":"**Examples**:","lastModifiedDate":"2022-10-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"kangzongxian"},"content":"* `find alex 99272758 03-68` returns `Alex Yeoh`, `Bernice Yu`, `Charlotte Oliveiro` (refer to the image below for the details of the guests)\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":267,"author":{"gitId":"bryanhce"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":268,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":269,"author":{"gitId":"jehousoh"},"content":"  ![result for \u0027find alex 99272758 03-68\u0027](images/findAlex9927275803-68.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"bryanhce"},"content":"**Common mistakes**:","lastModifiedDate":"2022-10-29"},{"lineNumber":272,"author":{"gitId":"bryanhce"},"content":"* Searching for guests using incomplete keywords e.g. `170` will **not match** `170.00`.","lastModifiedDate":"2022-10-30"},{"lineNumber":273,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":274,"author":{"gitId":"bryanhce"},"content":"### Deleting a guest: `delete`","lastModifiedDate":"2022-10-01"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"bryanhce"},"content":"This command deletes an existing guest in GuestBook from the current list.","lastModifiedDate":"2022-10-30"},{"lineNumber":277,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":278,"author":{"gitId":"bryanhce"},"content":"The guest specified at the `INDEX` is the guest you wish to delete. ","lastModifiedDate":"2022-10-30"},{"lineNumber":279,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":280,"author":{"gitId":"Lan-Jingbo"},"content":"This command is typically used when a guest has checked out of the hotel. Do note that the `delete` command ","lastModifiedDate":"2022-10-29"},{"lineNumber":281,"author":{"gitId":"bryanhce"},"content":"is **irreversible**. ","lastModifiedDate":"2022-10-30"},{"lineNumber":282,"author":{"gitId":"bryanhce"},"content":"Once deleted, the specific guest\u0027s data cannot be retrieved.","lastModifiedDate":"2022-10-30"},{"lineNumber":283,"author":{"gitId":"bryanhce"},"content":"\u003cspan style\u003d\"background-color: yellow; color: black\"\u003eOnce deleted, the specific guest\u0027s data cannot be retrieved. Please use this","lastModifiedDate":"2022-10-30"},{"lineNumber":284,"author":{"gitId":"bryanhce"},"content":"command with caution.\u003c/span\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"bryanhce"},"content":"**Format**: `delete INDEX`","lastModifiedDate":"2022-10-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"bryanhce"},"content":"**Examples**:","lastModifiedDate":"2022-10-29"},{"lineNumber":289,"author":{"gitId":"kangzongxian"},"content":"* `list` followed by `delete 2` deletes the 2nd guest in GuestBook.","lastModifiedDate":"2022-10-25"},{"lineNumber":290,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":291,"author":{"gitId":"bryanhce"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st guest in the results of the `find` command.","lastModifiedDate":"2022-10-01"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"bryanhce"},"content":"### Marking all rooms as unclean: `markRoomsUnclean`","lastModifiedDate":"2022-10-19"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":295,"author":{"gitId":"JustinPeng13"},"content":"This command functions to mark the room clean statuses of all guests as `no`.","lastModifiedDate":"2022-10-30"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":297,"author":{"gitId":"bryanhce"},"content":"This command is typically used at the end or the start of the day when the hotel manager wishes to ","lastModifiedDate":"2022-10-25"},{"lineNumber":298,"author":{"gitId":"bryanhce"},"content":"update **all the room clean statuses** to `no` efficiently. This clean slate would allow the hotel ","lastModifiedDate":"2022-10-30"},{"lineNumber":299,"author":{"gitId":"Lan-Jingbo"},"content":"managers to keep track of the rooms that are cleaned or uncleaned for the day.","lastModifiedDate":"2022-10-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":301,"author":{"gitId":"bryanhce"},"content":"**Format**: `markRoomsUnclean`","lastModifiedDate":"2022-10-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":303,"author":{"gitId":"bryanhce"},"content":"**Common mistakes**: ","lastModifiedDate":"2022-10-29"},{"lineNumber":304,"author":{"gitId":"JustinPeng13"},"content":"* Missing out the `s`: `markRoomUnclean`.","lastModifiedDate":"2022-10-30"},{"lineNumber":305,"author":{"gitId":"JustinPeng13"},"content":"* Capitalising the `m`: `MarkRoomsUnclean`.","lastModifiedDate":"2022-10-30"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":307,"author":{"gitId":"-"},"content":"### Clearing all entries: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"Lan-Jingbo"},"content":"This command clears **all entries** from GuestBook. ","lastModifiedDate":"2022-10-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":311,"author":{"gitId":"JustinPeng13"},"content":"This command is typically used as a **hard reset** of all guest data in GuestBook. Do note that this command ","lastModifiedDate":"2022-10-30"},{"lineNumber":312,"author":{"gitId":"bryanhce"},"content":"is **irreversible**.","lastModifiedDate":"2022-10-30"},{"lineNumber":313,"author":{"gitId":"bryanhce"},"content":"\u003cspan style\u003d\"background-color: yellow; color: black\"\u003eOnce cleared, all the guest data cannot be retrieved. Please use this command","lastModifiedDate":"2022-10-30"},{"lineNumber":314,"author":{"gitId":"bryanhce"},"content":"with utmost caution.\u003c/span\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"bryanhce"},"content":"**Format**: `clear`","lastModifiedDate":"2022-10-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"bryanhce"},"content":"This command exits the program.","lastModifiedDate":"2022-10-25"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"bryanhce"},"content":"**Format**: `exit`","lastModifiedDate":"2022-10-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"JustinPeng13"},"content":"GuestBook data is saved in the hard disk **automatically** after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-10-30"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":330,"author":{"gitId":"JustinPeng13"},"content":"GuestBook data is saved as a _JSON file_ `[JAR file location]/data/guestbook.json`.\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":331,"author":{"gitId":"JustinPeng13"},"content":"Advanced users may change data directly by editing this data file.","lastModifiedDate":"2022-10-30"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":333,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":334,"author":{"gitId":"kangzongxian"},"content":"If your changes to the data file makes its format invalid, GuestBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-09-30"},{"lineNumber":335,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":337,"author":{"gitId":"bryanhce"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-10-26"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":339,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"jehousoh"},"content":"Listed here are some frequently asked questions. Should you require any other assistance, feel free to [contact us](#contact-us).","lastModifiedDate":"2022-10-25"},{"lineNumber":344,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":345,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"Lan-Jingbo"},"content":"**A**: Install the app in the other computer and **overwrite the empty data file** it creates with the file that contains the data of your previous GuestBook home folder.","lastModifiedDate":"2022-10-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"jehousoh"},"content":"**Q**: Will my data be automatically saved?\u003cbr\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":349,"author":{"gitId":"JustinPeng13"},"content":"**A**: **Yes**, GuestBook automatically saves your data after every command entered.","lastModifiedDate":"2022-10-30"},{"lineNumber":350,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":351,"author":{"gitId":"jehousoh"},"content":"**Q**: Where is my data saved?\u003cbr\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":352,"author":{"gitId":"jehousoh"},"content":"**A**: Go to where you have downloaded your `guestbook.jar` file, there a `/data` folder will be created and the data will be saved under `guestbook.json`.","lastModifiedDate":"2022-10-25"},{"lineNumber":353,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":354,"author":{"gitId":"jehousoh"},"content":"**Q**: Can I rename my saved data file?\u003cbr\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":355,"author":{"gitId":"Lan-Jingbo"},"content":"**A**: **No**, GuestBook currently only supports the use of `guestbook.json` as the name of the saved data file.","lastModifiedDate":"2022-10-29"},{"lineNumber":356,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":357,"author":{"gitId":"jehousoh"},"content":"**Q**: Why are there no guests in my GuestBook?\u003cbr\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":358,"author":{"gitId":"JustinPeng13"},"content":"**A**: If you didn\u0027t enter the `clear` command, it is likely that your `guestbook.json` file is **corrupted**, causing GuestBook to reset it to prevent any malicious files from being used.","lastModifiedDate":"2022-10-30"},{"lineNumber":359,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":360,"author":{"gitId":"bryanhce"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-10-26"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":362,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":366,"author":{"gitId":"kangzongxian"},"content":"| Action                 | Format, Examples                                                                                                                                                                               |","lastModifiedDate":"2022-09-30"},{"lineNumber":367,"author":{"gitId":"Lan-Jingbo"},"content":"|------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-26"},{"lineNumber":368,"author":{"gitId":"bryanhce"},"content":"| **Add**                | `add n/NAME p/PHONE e/EMAIL rm/ROOM dr/DATE_RANGE ng/NUMBER_OF_GUESTS [rq/REQUEST]` \u003cbr\u003e E.g., `add n/John Doe p/98765432 e/johnd@example.com rm/05-73 dr/19/05/20 - 24/05/22 ng/3`            |","lastModifiedDate":"2022-10-30"},{"lineNumber":369,"author":{"gitId":"bryanhce"},"content":"| **Bill**               | `bill INDEX b/BILL`\u003cbr\u003e E.g., `bill 2 b/99.99`                                                                                                                                                 |","lastModifiedDate":"2022-10-30"},{"lineNumber":370,"author":{"gitId":"kangzongxian"},"content":"| **Clear**              | `clear`                                                                                                                                                                                        |","lastModifiedDate":"2022-09-30"},{"lineNumber":371,"author":{"gitId":"bryanhce"},"content":"| **Delete**             | `delete INDEX`\u003cbr\u003e E.g., `delete 3`                                                                                                                                                            |","lastModifiedDate":"2022-10-30"},{"lineNumber":372,"author":{"gitId":"bryanhce"},"content":"| **Edit**               | `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [rm/ROOM] [dr/DATE_RANGE] [ng/NUMBER_OF_GUESTS] [rc/IS_ROOM_CLEAN] [rq/REQUEST]`\u003cbr\u003e E.g.,`edit 2 e/jameslee@example.com dr/13/09/22 - 15/09/22 ng/4` |","lastModifiedDate":"2022-10-30"},{"lineNumber":373,"author":{"gitId":"kangzongxian"},"content":"| **Exit**               | `exit`                                                                                                                                                                                         |","lastModifiedDate":"2022-10-27"},{"lineNumber":374,"author":{"gitId":"bryanhce"},"content":"| **Find**               | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e E.g., `find James Jake`                                                                                                                                     |","lastModifiedDate":"2022-10-30"},{"lineNumber":375,"author":{"gitId":"kangzongxian"},"content":"| **Help**               | `help`                                                                                                                                                                                         |","lastModifiedDate":"2022-10-16"},{"lineNumber":376,"author":{"gitId":"bryanhce"},"content":"| **List**               | `list`                                                                                                                                                                                         |","lastModifiedDate":"2022-10-26"},{"lineNumber":377,"author":{"gitId":"kangzongxian"},"content":"| **Mark Rooms Unclean** | `markRoomsUnclean`                                                                                                                                                                             |                                                                                                                                                                                      |","lastModifiedDate":"2022-10-27"},{"lineNumber":378,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":379,"author":{"gitId":"bryanhce"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-10-26"},{"lineNumber":380,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":381,"author":{"gitId":"bryanhce"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":382,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":383,"author":{"gitId":"jehousoh"},"content":"## Contact Us","lastModifiedDate":"2022-10-25"},{"lineNumber":384,"author":{"gitId":"JustinPeng13"},"content":"For enquiries or feedback, feel free to let us know at [guestbook.enquiries@gmail.com](mailto:guestbook.enquiries@gmail.com).","lastModifiedDate":"2022-10-26"},{"lineNumber":385,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":386,"author":{"gitId":"bryanhce"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2022-10-26"},{"lineNumber":387,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"kangzongxian":25,"jehousoh":24,"Lan-Jingbo":12,"bryanhce":129,"-":125,"JustinPeng13":72}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"jehousoh"},"content":"    content: \"GuestBook\";","lastModifiedDate":"2022-10-19"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"jehousoh":1,"-":294}},{"path":"docs/diagrams/AddActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jehousoh"},"content":"@startuml","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"jehousoh"},"content":"skinparam activity {","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"jehousoh"},"content":"    ArrowColor #A80036","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"jehousoh"},"content":"    BackgroundColor #FEFECE","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"jehousoh"},"content":"    BorderColor #A80036","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"jehousoh"},"content":"    BorderThickness 1.5","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"jehousoh"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"jehousoh"},"content":"start","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"jehousoh"},"content":":User executes add command;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"jehousoh"},"content":"if () then ([Request provided])","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"jehousoh"},"content":"    :Create guest with Request provided;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"jehousoh"},"content":"else ([else])","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"jehousoh"},"content":"    :Create guest with no Request;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"jehousoh"},"content":"endif","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"jehousoh"},"content":":Add guest to model;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"jehousoh"},"content":"stop","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"jehousoh"},"content":"@enduml","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"jehousoh":18}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteGuest(g)","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveGuestBook(guestBook)","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bryanhce":2,"-":36}},{"path":"docs/diagrams/BillActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JustinPeng13"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"JustinPeng13"},"content":"skinparam activity {","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"JustinPeng13"},"content":"    ArrowColor #A80036","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"JustinPeng13"},"content":"    BackgroundColor #FEFECE","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"JustinPeng13"},"content":"    BorderColor #A80036","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"JustinPeng13"},"content":"    BorderThickness 1.5","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"JustinPeng13"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"JustinPeng13"},"content":"start","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"JustinPeng13"},"content":":User executes bill command;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"JustinPeng13"},"content":":Get guest to bill;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"JustinPeng13"},"content":":Create new bill with updated value;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"JustinPeng13"},"content":":Create new guest using updated bill;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"JustinPeng13"},"content":":Set new guest to model;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"JustinPeng13"},"content":"stop","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"JustinPeng13"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"JustinPeng13":16}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"if () then ([command commits GuestBook])","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"    :Save GuestBook to","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"    guestBookStateList;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kangzongxian":3,"-":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"Lan-Jingbo"},"content":"participant \":GuestBookParser\" as GuestBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"Lan-Jingbo"},"content":"LogicManager -\u003e GuestBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Lan-Jingbo"},"content":"activate GuestBookParser","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"Lan-Jingbo"},"content":"GuestBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"Lan-Jingbo"},"content":"DeleteCommandParser --\u003e GuestBookParser","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"Lan-Jingbo"},"content":"GuestBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"Lan-Jingbo"},"content":"DeleteCommandParser --\u003e GuestBookParser : d","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"Lan-Jingbo"},"content":"DeleteCommandParser -[hidden]-\u003e GuestBookParser","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"Lan-Jingbo"},"content":"GuestBookParser --\u003e LogicManager : d","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"Lan-Jingbo"},"content":"deactivate GuestBookParser","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Lan-Jingbo":10,"-":59}},{"path":"docs/diagrams/EditActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jehousoh"},"content":"@startuml","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"jehousoh"},"content":"skinparam activity {","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"jehousoh"},"content":"    ArrowColor #A80036","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"jehousoh"},"content":"    BackgroundColor #FEFECE","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"jehousoh"},"content":"    BorderColor #A80036","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"jehousoh"},"content":"    BorderThickness 1.5","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"jehousoh"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"jehousoh"},"content":"start","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"jehousoh"},"content":":User executes edit command;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"jehousoh"},"content":":Get guest to edit;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"jehousoh"},"content":":Create new guest using fields provided;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"jehousoh"},"content":":Set new guest to model;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"jehousoh"},"content":"stop","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"jehousoh"},"content":"@enduml","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"jehousoh":15}},{"path":"docs/diagrams/FindActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"@startuml","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"skinparam activity {","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"    ArrowColor #A80036","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"    BackgroundColor #FEFECE","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"    BorderColor #A80036","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"    BorderThickness 1.5","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"start","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":":User executes find command with keywords;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":":Find guests whose Name matches any keyword;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":":Display the guests that match;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"stop","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"@enduml","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"kangzongxian":14}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Lan-Jingbo"},"content":"Class GuestBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"Lan-Jingbo"},"content":"LogicManager -right-\u003e\"1\" GuestBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"Lan-Jingbo"},"content":"GuestBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Lan-Jingbo":3,"-":43}},{"path":"docs/diagrams/MarkRoomsUncleanActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"@startuml","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"skinparam activity {","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"    ArrowColor #A80036","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"    BackgroundColor #FEFECE","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"    BorderColor #A80036","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"    BorderThickness 1.5","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"start","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":":User executes markRoomsUnclean command;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":":Get list of guests to edit isRoomClean status;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":":Create new list of guests with isRoomClean fields set to \"no\";","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":":Set new list of guests to model;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"stop","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"@enduml","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"bryanhce":15}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"JustinPeng13"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyGuestBook\" as ReadOnlyGuestBook","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"JustinPeng13"},"content":"Class GuestBook","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"JustinPeng13"},"content":"Class UniqueGuestList","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"JustinPeng13"},"content":"Class Guest","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"JustinPeng13"},"content":"Class Email","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"JustinPeng13"},"content":"Class Room","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"JustinPeng13"},"content":"Class DateRange","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"JustinPeng13"},"content":"Class NumberOfGuests","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"JustinPeng13"},"content":"Class IsRoomClean","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"JustinPeng13"},"content":"Class Bill","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"JustinPeng13"},"content":"Class Request","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"JustinPeng13"},"content":"GuestBook .up.|\u003e ReadOnlyGuestBook","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"JustinPeng13"},"content":"Model .left.\u003e ReadOnlyGuestBook","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"JustinPeng13"},"content":"ModelManager -left-\u003e \"1\" GuestBook","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"JustinPeng13"},"content":"GuestBook *--\u003e \"1\" UniqueGuestList","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"JustinPeng13"},"content":"UniqueGuestList --\u003e \"~* all\" Guest","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"JustinPeng13"},"content":"Guest *--\u003e Name","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"JustinPeng13"},"content":"Guest *--\u003e Email","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"JustinPeng13"},"content":"Guest *---\u003e Phone","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"JustinPeng13"},"content":"Guest *---\u003e Room","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"JustinPeng13"},"content":"Guest *---\u003e DateRange","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"JustinPeng13"},"content":"Guest *---\u003e NumberOfGuests","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"JustinPeng13"},"content":"Guest *---\u003e IsRoomClean","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"JustinPeng13"},"content":"Guest *--\u003e Bill","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"JustinPeng13"},"content":"Guest *--\u003e Request","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"JustinPeng13"},"content":"ModelManager --\u003e\"~* filtered\" Guest","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":27,"JustinPeng13":27}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"Lan-Jingbo"},"content":"Class GuestBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"Lan-Jingbo"},"content":"HiddenOutside ..\u003e GuestBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"Lan-Jingbo"},"content":"GuestBookParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"Lan-Jingbo"},"content":"GuestBookParser ..\u003e Command : returns \u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"Lan-Jingbo":4,"-":34}},{"path":"docs/diagrams/ProposedImplementationFindActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"@startuml","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"skinparam activity {","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"    ArrowColor #A80036","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"    BackgroundColor #FEFECE","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"    BorderColor #A80036","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"    BorderThickness 1.5","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"start","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":":User executes find command with keywords;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":":Find guests whose fields match any keyword;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":":Display the guests that match;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"stop","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"@enduml","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"kangzongxian":14}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"package \"GuestBook Storage\" #F4F6F6{","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nGuestBookStorage\" as GuestBookStorage","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"Class JsonGuestBookStorage","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"Class JsonSerializableGuestBook","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"Class JsonAdaptedGuest","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"StorageManager -up-\u003e \"1\" GuestBookStorage","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"Storage -right-|\u003e GuestBookStorage","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"kangzongxian"},"content":"JsonGuestBookStorage .up.|\u003e GuestBookStorage","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"kangzongxian"},"content":"JsonGuestBookStorage ..\u003e JsonSerializableGuestBook","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"kangzongxian"},"content":"JsonSerializableGuestBook --\u003e \"*\" JsonAdaptedGuest","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"kangzongxian"},"content":"JsonAdaptedGuest --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kangzongxian":11,"-":32}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"jehousoh"},"content":"Class GuestListPanel","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"jehousoh"},"content":"Class GuestCard","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"jehousoh"},"content":"MainWindow *-down-\u003e \"1\" GuestListPanel","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"jehousoh"},"content":"GuestListPanel -down-\u003e \"*\" GuestCard","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"jehousoh"},"content":"GuestListPanel --|\u003e UiPart","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"jehousoh"},"content":"GuestCard --|\u003e UiPart","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"jehousoh"},"content":"GuestCard ..\u003e Model","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"jehousoh"},"content":"GuestListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jehousoh":8,"-":52}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Lan-Jingbo"},"content":"    class State1 as \"__gb0:GuestBook__\"","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Lan-Jingbo"},"content":"    class State2 as \"__gb1:GuestBook__\"","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Lan-Jingbo"},"content":"    class State3 as \"__gb2:GuestBook__\"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"Lan-Jingbo"},"content":"class Pointer as \"Current State\" #FFFF2F","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Lan-Jingbo":4,"-":16}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Lan-Jingbo"},"content":"    class State1 as \"__gb0:GuestBook__\"","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Lan-Jingbo"},"content":"        class State2 as \"__gb1:GuestBook__\"","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Lan-Jingbo"},"content":"        class State3 as \"__gb2:GuestBook__\"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"Lan-Jingbo"},"content":"class Pointer as \"Current State\" #FFFF2F","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Lan-Jingbo":4,"-":18}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Lan-Jingbo"},"content":"    class State1 as \"__gb0:GuestBook__\"","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Lan-Jingbo"},"content":"    class State2 as \"__gb1:GuestBook__\"","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Lan-Jingbo"},"content":"    class State3 as \"__gb2:GuestBook__\"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Lan-Jingbo"},"content":"class Pointer as \"Current State\" #FFFF2F","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Lan-Jingbo":4,"-":16}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Lan-Jingbo"},"content":"    class State1 as \"__gb0:GuestBook__\"","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Lan-Jingbo"},"content":"    class State2 as \"__gb1:GuestBook__\"","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Lan-Jingbo"},"content":"    class State3 as \"__gb2:GuestBook__\"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Lan-Jingbo"},"content":"class Pointer as \"Current State\" #FFFF2F","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Lan-Jingbo":4,"-":16}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Lan-Jingbo"},"content":"    class State1 as \"__gb0:GuestBook__\"","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Lan-Jingbo"},"content":"    class State2 as \"__gb1:GuestBook__\"","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Lan-Jingbo"},"content":"    class State3 as \"__gb2:GuestBook__\"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Lan-Jingbo"},"content":"class Pointer as \"Current State\" #FFFF2F","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Lan-Jingbo":4,"-":16}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Lan-Jingbo"},"content":"    class State1 as \"__gb0:GuestBook__\"","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Lan-Jingbo"},"content":"    class State2 as \"__gb1:GuestBook__\"","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Lan-Jingbo"},"content":"    class State3 as \"__gb2:GuestBook__\"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Lan-Jingbo"},"content":"class Pointer as \"Current State\" #FFFF2F","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"Lan-Jingbo"},"content":"note right on link: State gb2 deleted.","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Lan-Jingbo":5,"-":16}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"Lan-Jingbo"},"content":"participant \":GuestBookParser\" as GuestBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"Lan-Jingbo"},"content":"participant \":VersionedGuestBook\" as VersionedGuestBook MODEL_COLOR","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Lan-Jingbo"},"content":"LogicManager -\u003e GuestBookParser : parseCommand(undo)","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"Lan-Jingbo"},"content":"activate GuestBookParser","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"Lan-Jingbo"},"content":"GuestBookParser -\u003e UndoCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"Lan-Jingbo"},"content":"UndoCommand --\u003e GuestBookParser","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"Lan-Jingbo"},"content":"GuestBookParser --\u003e LogicManager : u","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Lan-Jingbo"},"content":"deactivate GuestBookParser","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"Lan-Jingbo"},"content":"UndoCommand -\u003e Model : undoGuestBook()","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"Lan-Jingbo"},"content":"Model -\u003e VersionedGuestBook : undo()","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"Lan-Jingbo"},"content":"activate VersionedGuestBook","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"Lan-Jingbo"},"content":"VersionedGuestBook -\u003e VersionedGuestBook :resetData(ReadOnlyGuestBook)","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"Lan-Jingbo"},"content":"VersionedGuestBook --\u003e Model :","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"Lan-Jingbo"},"content":"deactivate VersionedGuestBook","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Lan-Jingbo":14,"-":39}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"ecp -\u003e ec ++: index, editGuestDescriptor","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"bryanhce":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jehousoh"},"content":"title: GuestBook","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W16-1/tp/branch/master/graph/badge.svg?token\u003dTL4U2UJXS0)](https://codecov.io/gh/AY2223S1-CS2103T-W16-1/tp)","lastModifiedDate":"2022-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"jehousoh"},"content":"**GuestBook is a desktop application for managing your guests\u0027 details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"JustinPeng13"},"content":"* If you are interested in using GuestBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"JustinPeng13"},"content":"* If you are interested about developing GuestBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jehousoh":2,"-":15,"JustinPeng13":2}},{"path":"docs/team/bryanhce.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"title: Ho Cheng En Bryans\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"jehousoh"},"content":"### Project: GuestBook","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"GuestBook is a **desktop app for managing guests in a hotel,","lastModifiedDate":"2022-10-29"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"optimized for use via a Command Line Interface** (CLI)","lastModifiedDate":"2022-10-29"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-10-29"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"If you are a hotel manager who can type fast, GuestBook can get your","lastModifiedDate":"2022-10-29"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"guest management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-10-29"},{"lineNumber":13,"author":{"gitId":"jehousoh"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"jehousoh"},"content":"It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"jehousoh"},"content":"This project is based off AddressBook - Level 3.","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"* **New Feature**: Add isRoomClean field","lastModifiedDate":"2022-10-29"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"* **New Feature**: Add markRoomsUnclean command","lastModifiedDate":"2022-10-29"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"  * Allows the user to set the room clean status of all the guest in the hotel to \"no\" in a single command.","lastModifiedDate":"2022-10-29"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"  * This feature greatly aids with GuestBook\u0027s efficiency. Typing in one command to change all guests\u0027 room","lastModifiedDate":"2022-10-29"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"clean statuses saves the user an incredible amount of time compared to individually editing each guest\u0027s ","lastModifiedDate":"2022-10-29"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"details.","lastModifiedDate":"2022-10-29"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dbryanhce\u0026tabRepo\u003dAY2223S1-CS2103T-W16-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-10-29"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"bryanhce"},"content":"  * Refactored entire AddressBook 3 to fit the GuestBook specificity.","lastModifiedDate":"2022-10-29"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"    * This includes editing user guide, developer guide, person class to guest class (pull request #58).","lastModifiedDate":"2022-10-29"},{"lineNumber":35,"author":{"gitId":"bryanhce"},"content":"  * Refactored Commons and Logic packages\u0027 test cases (pull request #66).","lastModifiedDate":"2022-10-29"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"bryanhce"},"content":"  * User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"    * Did final checks to ensure consistency of UG (pull request #142).","lastModifiedDate":"2022-10-29"},{"lineNumber":41,"author":{"gitId":"bryanhce"},"content":"    * Add glossary (pull request #129).","lastModifiedDate":"2022-10-29"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"    * Updated introduction and subheadings (pull request #148).","lastModifiedDate":"2022-10-29"},{"lineNumber":43,"author":{"gitId":"bryanhce"},"content":"    * Update add guest in user guide (pull request #122).","lastModifiedDate":"2022-10-29"},{"lineNumber":44,"author":{"gitId":"bryanhce"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"    * Did final checks to ensure consistency of DG (pull request #142).","lastModifiedDate":"2022-10-29"},{"lineNumber":46,"author":{"gitId":"bryanhce"},"content":"    * Add implementation of markRoomsUnclean command (pull request #113).","lastModifiedDate":"2022-10-29"},{"lineNumber":47,"author":{"gitId":"bryanhce"},"content":"    * Updated user profile, value proposition, use cases, NFR (pull request #47).","lastModifiedDate":"2022-10-29"},{"lineNumber":48,"author":{"gitId":"bryanhce"},"content":"    * Add UML diagrams (pull request #113 and #112).","lastModifiedDate":"2022-10-29"},{"lineNumber":49,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":50,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":51,"author":{"gitId":"bryanhce"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-09-27"},{"lineNumber":52,"author":{"gitId":"bryanhce"},"content":"  * Filmed and submitted demo v1.2.","lastModifiedDate":"2022-10-29"},{"lineNumber":53,"author":{"gitId":"bryanhce"},"content":"  * Filmed and submitted demo v1.3.","lastModifiedDate":"2022-10-29"},{"lineNumber":54,"author":{"gitId":"bryanhce"},"content":"  * Released v1.2 of GuestBook.","lastModifiedDate":"2022-10-29"},{"lineNumber":55,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":56,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":57,"author":{"gitId":"bryanhce"},"content":"* **Project management**:","lastModifiedDate":"2022-10-29"},{"lineNumber":58,"author":{"gitId":"bryanhce"},"content":"  * Add Github tags, milestones, assignee.","lastModifiedDate":"2022-10-29"},{"lineNumber":59,"author":{"gitId":"bryanhce"},"content":"  * Used Github issue tracker.","lastModifiedDate":"2022-10-29"},{"lineNumber":60,"author":{"gitId":"bryanhce"},"content":"  * Followed the branching workflow.","lastModifiedDate":"2022-10-29"},{"lineNumber":61,"author":{"gitId":"bryanhce"},"content":"  * Contributed to meetings by sharing screen and facilitating discussions.","lastModifiedDate":"2022-10-29"},{"lineNumber":62,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":63,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":64,"author":{"gitId":"bryanhce"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2022-10-29"},{"lineNumber":65,"author":{"gitId":"bryanhce"},"content":"  * Team members\u0027 PR reviews (with non-trivial review comments): pull request #148, #147, #139, #134, #133, #132","lastModifiedDate":"2022-10-29"},{"lineNumber":66,"author":{"gitId":"bryanhce"},"content":",#126, #119, #117, #116, #109, #102, #100, #70, #68, #65 ","lastModifiedDate":"2022-10-29"},{"lineNumber":67,"author":{"gitId":"bryanhce"},"content":"  * Reported bugs for other teams (ped).","lastModifiedDate":"2022-10-29"},{"lineNumber":68,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":69,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"jehousoh":5,"bryanhce":64}},{"path":"docs/team/jehousoh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jehousoh"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"jehousoh"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"jehousoh"},"content":"title: Soh Je Hou\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"jehousoh"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"jehousoh"},"content":"### Project: GuestBook","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"jehousoh"},"content":"GuestBook is a one stop access to get all the necessary guest data.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"jehousoh"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"jehousoh"},"content":"It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"jehousoh"},"content":"This project is based off AddressBook - Level 3.","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"jehousoh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"jehousoh"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"jehousoh"},"content":"  * to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"jehousoh"},"content":"* **Code contributed**: [[RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003djehousoh\u0026tabRepo\u003dAY2223S1-CS2103T-W16-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)]","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"jehousoh"},"content":"* **Project management**:","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"jehousoh"},"content":"  * to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"jehousoh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"jehousoh"},"content":"  * to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"jehousoh"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"jehousoh"},"content":"  * User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"jehousoh"},"content":"    * to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"jehousoh"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"jehousoh"},"content":"    * to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"jehousoh"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"jehousoh"},"content":"  * to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"jehousoh"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"jehousoh"},"content":"  * to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"jehousoh"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2022-09-27"},{"lineNumber":40,"author":{"gitId":"jehousoh"},"content":"  * to be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":41,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"jehousoh"},"content":"* **Community**:","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"jehousoh"},"content":"  * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"jehousoh"},"content":"* **Tools**:","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"jehousoh"},"content":"  * to be added soon","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"jehousoh":46}},{"path":"docs/team/justinpeng13.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JustinPeng13"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"JustinPeng13"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"JustinPeng13"},"content":"title: Justin Peng\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"JustinPeng13"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"jehousoh"},"content":"### Project: GuestBook","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"jehousoh"},"content":"GuestBook is a one stop access to get all the necessary guest data.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"JustinPeng13"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"JustinPeng13"},"content":"It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"JustinPeng13"},"content":"This project is based off AddressBook - Level 3.","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"JustinPeng13"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"JustinPeng13"},"content":"* **New Features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"JustinPeng13"},"content":"  * to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"JustinPeng13"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"JustinPeng13"},"content":"  * to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"JustinPeng13"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dJustinPeng13\u0026tabRepo\u003dAY2223S1-CS2103T-W16-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"JustinPeng13"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"JustinPeng13"},"content":"  * to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"JustinPeng13"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"JustinPeng13"},"content":"  * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"JustinPeng13"},"content":"    * to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"JustinPeng13"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"JustinPeng13"},"content":"    * to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"JustinPeng13"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"JustinPeng13"},"content":"  * to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"JustinPeng13"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"JustinPeng13"},"content":"  * to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"JustinPeng13"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"JustinPeng13"},"content":"  * to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"JustinPeng13"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"JustinPeng13"},"content":"  * to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"JustinPeng13"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"JustinPeng13"},"content":"  * to be added soon","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"jehousoh":2,"JustinPeng13":43}},{"path":"docs/team/kangzongxian.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"layout: page","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"title: Kang Zong Xian\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"### Project: GuestList","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"GuestList is a one stop access to get all the necessary guest data.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"This project is based off AddressBook - Level 3.","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"    * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"* **Code contributed**: [[RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dkangzongxian\u0026tabRepo\u003dAY2223S1-CS2103T-W16-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)]","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"* **Project management**:","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"    * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":"    * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"    * User Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"        * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"kangzongxian"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"        * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"kangzongxian"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"kangzongxian"},"content":"    * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"kangzongxian"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"kangzongxian"},"content":"    * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"kangzongxian"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"kangzongxian"},"content":"    * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"kangzongxian"},"content":"* **Community**:","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"kangzongxian"},"content":"    * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"kangzongxian"},"content":"* **Tools**:","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"kangzongxian"},"content":"    * to be added soon","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"kangzongxian":46}},{"path":"docs/team/lan-jingbo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Lan-Jingbo"},"content":"title: Lan Jingbo\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jehousoh"},"content":"### Project: GuestBook","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"jehousoh"},"content":"GuestBook is a one stop access to get all the necessary guest data.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"jehousoh"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"jehousoh"},"content":"It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"jehousoh"},"content":"This project is based off AddressBook - Level 3.","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"jehousoh"},"content":"* **New Features**:","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"jehousoh"},"content":"  * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"jehousoh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"jehousoh"},"content":"  * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"jehousoh"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dLan-Jingbo\u0026tabRepo\u003dAY2223S1-CS2103T-W16-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"jehousoh"},"content":"  * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"jehousoh"},"content":"    * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"jehousoh"},"content":"    * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"jehousoh"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"jehousoh"},"content":"  * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"jehousoh"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"jehousoh"},"content":"  * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"jehousoh"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"jehousoh"},"content":"  * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"jehousoh"},"content":"  * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"jehousoh"},"content":"  * to be added soon","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"jehousoh":24,"Lan-Jingbo":1,"-":20}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"This command allows users of the GuestBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":" * Changes the remark of an existing guest in the address book.","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"bryanhce"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `GuestBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"bryanhce"},"content":"            + \": Edits the remark of the guest identified \"","lastModifiedDate":"2022-10-01"},{"lineNumber":69,"author":{"gitId":"bryanhce"},"content":"            + \"by the index number used in the last guest listing. \"","lastModifiedDate":"2022-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"bryanhce"},"content":"     * @param index of the guest in the filtered guest list to edit the remark","lastModifiedDate":"2022-10-01"},{"lineNumber":105,"author":{"gitId":"bryanhce"},"content":"     * @param remark of the guest to be updated to","lastModifiedDate":"2022-10-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"bryanhce"},"content":"Create a `RemarkCommandParser` class in the `seedu.guest.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2022-10-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"bryanhce"},"content":":information_source: Don’t forget to update `GuestBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2022-10-03"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"bryanhce"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of guest data. We achieve that by working with the `Guest` model. Each field in a Guest is implemented as a separate class (e.g. a `Name` object represents the guest’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a guest.","lastModifiedDate":"2022-10-03"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"bryanhce"},"content":"Create a new `Remark` in `seedu.guest.model.guest`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-10-01"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"bryanhce"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each guest.","lastModifiedDate":"2022-10-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"bryanhce"},"content":"Simply add the following to [`seedu.guest.ui.GuestCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-10-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"bryanhce"},"content":"**`GuestCard.java`:**","lastModifiedDate":"2022-10-03"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"bryanhce"},"content":"Then insert the following into [`main/resources/view/GuestListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-10-03"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"bryanhce"},"content":"**`GuestListCard.fxml`:**","lastModifiedDate":"2022-10-03"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"bryanhce"},"content":"## Modify `Guest` to support a `Remark` field","lastModifiedDate":"2022-10-03"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"bryanhce"},"content":"Since `GuestCard` displays data from a `Guest`, we need to update `Guest` to get our `Remark` displayed!","lastModifiedDate":"2022-10-03"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"bryanhce"},"content":"### Modify `Guest`","lastModifiedDate":"2022-10-03"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"bryanhce"},"content":"We change the constructor of `Guest` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2022-10-03"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"bryanhce"},"content":"### Update other usages of `Guest`","lastModifiedDate":"2022-10-03"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"bryanhce"},"content":"Unfortunately, a change to `Guest` will cause other commands to break, you will have to modify these commands to use the updated `Guest`!","lastModifiedDate":"2022-10-03"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"bryanhce"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Guest` class to find these commands.","lastModifiedDate":"2022-10-03"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"bryanhce"},"content":"GuestBook stores data by serializing `JsonAdaptedGuest` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedGuest` to work with our new `Guest`!","lastModifiedDate":"2022-10-03"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"bryanhce"},"content":":exclamation: You must delete GuestBook’s storage file located at `/data/guestbook.json` before running it! Not doing so will cause GuestBook to default to an empty address book!","lastModifiedDate":"2022-10-03"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"bryanhce"},"content":"Now that we have finalized the `Guest` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2022-10-03"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"bryanhce"},"content":"**`GuestCard.java`:**","lastModifiedDate":"2022-10-03"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"bryanhce"},"content":"public GuestCard(Guest guest, int displayedIndex) {","lastModifiedDate":"2022-10-03"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"bryanhce"},"content":"    remark.setText(guest.getRemark().value);","lastModifiedDate":"2022-10-01"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"bryanhce"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Guest`. Since all fields in a `Guest` are immutable, we create a new instance of a `Guest` with the values that we want and","lastModifiedDate":"2022-10-03"},{"lineNumber":329,"author":{"gitId":"bryanhce"},"content":"save it with `Model#setGuest()`.","lastModifiedDate":"2022-10-03"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"bryanhce"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Guest: %1$s\";","lastModifiedDate":"2022-10-03"},{"lineNumber":336,"author":{"gitId":"bryanhce"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Guest: %1$s\";","lastModifiedDate":"2022-10-03"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"bryanhce"},"content":"        List\u003cGuest\u003e lastShownList \u003d model.getFilteredGuestList();","lastModifiedDate":"2022-10-03"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"bryanhce"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GUEST_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-03"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"bryanhce"},"content":"        Guest guestToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-03"},{"lineNumber":347,"author":{"gitId":"bryanhce"},"content":"        Guest editedGuest \u003d new Guest(","lastModifiedDate":"2022-10-03"},{"lineNumber":348,"author":{"gitId":"bryanhce"},"content":"                guestToEdit.getName(), guestToEdit.getPhone(), guestToEdit.getEmail(),","lastModifiedDate":"2022-10-01"},{"lineNumber":349,"author":{"gitId":"bryanhce"},"content":"                guestToEdit.getAddress(), remark, guestToEdit.getTags());","lastModifiedDate":"2022-10-01"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"bryanhce"},"content":"        model.setGuest(guestToEdit, editedGuest);","lastModifiedDate":"2022-10-03"},{"lineNumber":352,"author":{"gitId":"bryanhce"},"content":"        model.updateFilteredGuestList(PREDICATE_SHOW_ALL_GUESTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"bryanhce"},"content":"        return new CommandResult(generateSuccessMessage(editedGuest));","lastModifiedDate":"2022-10-01"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"bryanhce"},"content":"     * {@code guestToEdit}.","lastModifiedDate":"2022-10-01"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"bryanhce"},"content":"    private String generateSuccessMessage(Guest guestToEdit) {","lastModifiedDate":"2022-10-03"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"bryanhce"},"content":"        return String.format(message, guestToEdit);","lastModifiedDate":"2022-10-01"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"bryanhce"},"content":"This concludes the tutorial for adding a new `Command` to GuestBook.","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"bryanhce":49,"-":352}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Guest` class.","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"The `address` field in `Guest` is actually an instance of the `seedu.guest.model.guest.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditGuestDescriptor` may require more careful inspection.","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"Let’s try removing references to `Address` in `EditGuestDescriptor`.","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"bryanhce"},"content":"1. Safe delete the field `address` in `EditGuestDescriptor`.","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"bryanhce"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Guest` class will require you to modify its constructor.","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"bryanhce"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `GuestCard` that has not been removed nor identified.","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"bryanhce"},"content":"A quick look at the `GuestCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"bryanhce"},"content":"**`GuestCard.java`**","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"bryanhce"},"content":"**`GuestCard.fxml`**","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"bryanhce"},"content":"**`invalidGuestGuestBook.json`:**","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"bryanhce"},"content":"  \"guests\": [ {","lastModifiedDate":"2022-10-01"},{"lineNumber":104,"author":{"gitId":"bryanhce"},"content":"    \"name\": \"Guest with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bryanhce":13,"-":99}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.guest.logic.Logic`.","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"bryanhce"},"content":"A quick look at the `seedu.guest.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2022-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"bryanhce"},"content":"        Command command \u003d guestBookParser.parseCommand(commandText);","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"bryanhce"},"content":"            storage.saveGuestBook(model.getGuestBook());","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"bryanhce"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `GuestBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2022-10-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"bryanhce"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditGuestDescriptor`. Recall that we can verify the contents of `editGuestDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"bryanhce"},"content":"       Guest guestToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-03"},{"lineNumber":193,"author":{"gitId":"bryanhce"},"content":"       Guest editedGuest \u003d createEditedGuest(guestToEdit, editGuestDescriptor);","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"bryanhce"},"content":"       if (!guestToEdit.isSameGuest(editedGuest) \u0026\u0026 model.hasGuest(editedGuest)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":195,"author":{"gitId":"bryanhce"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_GUEST);","lastModifiedDate":"2022-10-03"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"bryanhce"},"content":"       model.setGuest(guestToEdit, editedGuest);","lastModifiedDate":"2022-10-03"},{"lineNumber":198,"author":{"gitId":"bryanhce"},"content":"       model.updateFilteredGuestList(PREDICATE_SHOW_ALL_GUESTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":199,"author":{"gitId":"bryanhce"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_GUEST_SUCCESS, editedGuest));","lastModifiedDate":"2022-10-03"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"bryanhce"},"content":"   * it uses the `setGuest()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the guest data.","lastModifiedDate":"2022-10-03"},{"lineNumber":205,"author":{"gitId":"bryanhce"},"content":"   * it uses the `updateFilteredGuestList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ guests.\u003cbr\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":206,"author":{"gitId":"bryanhce"},"content":"     FYI, The \u0027filtered list\u0027 is the list of guests resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the guests so that the user can see the edited guest along with all other guests. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":207,"author":{"gitId":"bryanhce"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of guests is being tracked.","lastModifiedDate":"2022-10-01"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"bryanhce"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveGuestBook()` method which calls the `JsonSerializableGuestBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2022-10-03"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"bryanhce"},"content":"    **`JsonSerializableGuestBook` constructor:**","lastModifiedDate":"2022-10-03"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"bryanhce"},"content":"     * Converts a given {@code ReadOnlyGuestBook} into this class for Jackson use.","lastModifiedDate":"2022-10-03"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"bryanhce"},"content":"     * {@code JsonSerializableGuestBook}.","lastModifiedDate":"2022-10-03"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"bryanhce"},"content":"    public JsonSerializableGuestBook(ReadOnlyGuestBook source) {","lastModifiedDate":"2022-10-03"},{"lineNumber":234,"author":{"gitId":"bryanhce"},"content":"        guests.addAll(","lastModifiedDate":"2022-10-01"},{"lineNumber":235,"author":{"gitId":"bryanhce"},"content":"            source.getGuestList()","lastModifiedDate":"2022-10-03"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"bryanhce"},"content":"                  .map(JsonAdaptedGuest::new)","lastModifiedDate":"2022-10-03"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"bryanhce"},"content":"1. It appears that a `JsonAdaptedGuest` is created for each `Guest` and then added to the `JsonSerializableGuestBook`.","lastModifiedDate":"2022-10-03"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"bryanhce"},"content":"    5.  Add a new field to `Guest`","lastModifiedDate":"2022-10-03"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bryanhce":27,"-":274}},{"path":"src/main/java/seedu/guest/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.LogsCenter;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.util.FileUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"bryanhce":3,"-":61}},{"path":"src/main/java/seedu/guest/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"bryanhce":1,"-":24}},{"path":"src/main/java/seedu/guest/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.Config;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.LogsCenter;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.Version;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.util.StringUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.Logic;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.LogicManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.GuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ModelManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ReadOnlyGuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.storage.GuestBookStorage;","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.storage.JsonGuestBookStorage;","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.storage.Storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.storage.StorageManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.ui.Ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.ui.UiManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"bryanhce"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing GuestBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"bryanhce"},"content":"        GuestBookStorage guestBookStorage \u003d new JsonGuestBookStorage(userPrefs.getGuestBookFilePath());","lastModifiedDate":"2022-10-01"},{"lineNumber":60,"author":{"gitId":"bryanhce"},"content":"        storage \u003d new StorageManager(guestBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"bryanhce"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s guest book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":73,"author":{"gitId":"bryanhce"},"content":"     * The data from the sample guest book will be used instead if {@code storage}\u0027s guest book is not found,","lastModifiedDate":"2022-10-01"},{"lineNumber":74,"author":{"gitId":"bryanhce"},"content":"     * or an empty guest book will be used instead if errors occur when reading {@code storage}\u0027s guest book.","lastModifiedDate":"2022-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"bryanhce"},"content":"        Optional\u003cReadOnlyGuestBook\u003e guestBookOptional;","lastModifiedDate":"2022-10-01"},{"lineNumber":78,"author":{"gitId":"bryanhce"},"content":"        ReadOnlyGuestBook initialData;","lastModifiedDate":"2022-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"bryanhce"},"content":"            guestBookOptional \u003d storage.readGuestBook();","lastModifiedDate":"2022-10-01"},{"lineNumber":81,"author":{"gitId":"bryanhce"},"content":"            if (!guestBookOptional.isPresent()) {","lastModifiedDate":"2022-10-01"},{"lineNumber":82,"author":{"gitId":"bryanhce"},"content":"                logger.info(\"Data file not found. Will be starting with a sample GuestBook\");","lastModifiedDate":"2022-10-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"bryanhce"},"content":"            initialData \u003d guestBookOptional.orElseGet(SampleDataUtil::getSampleGuestBook);","lastModifiedDate":"2022-10-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"bryanhce"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty GuestBook\");","lastModifiedDate":"2022-10-01"},{"lineNumber":87,"author":{"gitId":"bryanhce"},"content":"            initialData \u003d new GuestBook();","lastModifiedDate":"2022-10-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"bryanhce"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty GuestBook\");","lastModifiedDate":"2022-10-01"},{"lineNumber":90,"author":{"gitId":"bryanhce"},"content":"            initialData \u003d new GuestBook();","lastModifiedDate":"2022-10-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"bryanhce"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty GuestBook\");","lastModifiedDate":"2022-10-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"bryanhce"},"content":"        logger.info(\"Starting GuestBook \" + MainApp.VERSION);","lastModifiedDate":"2022-10-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"bryanhce"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Guest Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-01"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanhce":43,"-":140}},{"path":"src/main/java/seedu/guest/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.core;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanhce":1,"-":62}},{"path":"src/main/java/seedu/guest/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.core;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"jehousoh"},"content":"    private static final double DEFAULT_WIDTH \u003d 800;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jehousoh":1,"bryanhce":1,"-":77}},{"path":"src/main/java/seedu/guest/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.core;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"    private static final String LOG_FILE \u003d \"guestbook.log\";","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanhce":2,"-":110}},{"path":"src/main/java/seedu/guest/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.core;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"    public static final String MESSAGE_INVALID_GUEST_DISPLAYED_INDEX \u003d \"The guest index provided is invalid\";","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"    public static final String MESSAGE_GUESTS_LISTED_OVERVIEW \u003d \"%1$d guests listed!\";","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bryanhce":3,"-":10}},{"path":"src/main/java/seedu/guest/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.core;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanhce":1,"-":115}},{"path":"src/main/java/seedu/guest/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.core.index;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"bryanhce":1,"-":53}},{"path":"src/main/java/seedu/guest/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.exceptions;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanhce":1,"-":10}},{"path":"src/main/java/seedu/guest/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.exceptions;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bryanhce":1,"-":20}},{"path":"src/main/java/seedu/guest/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.MainApp;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"bryanhce":2,"-":40}},{"path":"src/main/java/seedu/guest/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bryanhce":1,"-":34}},{"path":"src/main/java/seedu/guest/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.Config;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"bryanhce":3,"-":20}},{"path":"src/main/java/seedu/guest/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanhce":1,"-":82}},{"path":"src/main/java/seedu/guest/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.LogsCenter;","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanhce":3,"-":140}},{"path":"src/main/java/seedu/guest/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"jehousoh"},"content":"    private static final String SPLIT_REGEX \u003d \"\\\\s+\";","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"jehousoh"},"content":"        checkArgument(preppedWord.split(SPLIT_REGEX).length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"jehousoh"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(SPLIT_REGEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"jehousoh"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"jehousoh"},"content":"     * Returns true if the {@code sentence} contains the {@code date}.","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"jehousoh"},"content":"     *   Ignores hyphen and space, but a full date match is required.","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"jehousoh"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"jehousoh"},"content":"     *       containsDateIgnoreHyphenIgnoreSpace(\"13/09/22 - 15/09/22\", \"13/09/22\") \u003d\u003d true","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"jehousoh"},"content":"     *       containsDateIgnoreHyphenIgnoreSpace(\"13/09/22 - 15/09/22\", \"15/09/22\") \u003d\u003d true","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"jehousoh"},"content":"     *       containsDateIgnoreHyphenIgnoreSpace(\"13/09/22 - 15/09/22\", \"14/09/22\")","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"jehousoh"},"content":"     *              \u003d\u003d false //not a full date match","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"jehousoh"},"content":"     *       containsDateIgnoreHyphenIgnoreSpace(\"13/09/22 - 15/09/22\", \"13/09\")","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"jehousoh"},"content":"     *              \u003d\u003d false //not a full date match","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"jehousoh"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"jehousoh"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"jehousoh"},"content":"     * @param date cannot be null, cannot be empty, must be a single date","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"jehousoh"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"jehousoh"},"content":"    public static boolean containsDateIgnoreHyphenIgnoreSpace(String sentence, String date) {","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"jehousoh"},"content":"        requireNonNull(sentence, date);","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"jehousoh"},"content":"        String preppedDate \u003d date.trim().replace(\"-\", \"\");","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"jehousoh"},"content":"        if (preppedDate.isEmpty()) {","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"jehousoh"},"content":"            return false;","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"jehousoh"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"jehousoh"},"content":"        checkArgument(preppedDate.split(SPLIT_REGEX).length \u003d\u003d 1, \"Date parameter should be a single date\");","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"jehousoh"},"content":"        String preppedSentence \u003d sentence.replace(\"-\", \"\");","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"jehousoh"},"content":"        String[] datesInPreppedSentence \u003d preppedSentence.split(SPLIT_REGEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"jehousoh"},"content":"        return Arrays.stream(datesInPreppedSentence)","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"jehousoh"},"content":"                .anyMatch(preppedDate::equalsIgnoreCase);","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"jehousoh"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"jehousoh"},"content":"     * Returns true if the {@code sentence} contains the {@code isRoomClean}.","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"jehousoh"},"content":"     *   Ignores case, but must be either \u0027yes\u0027, \u0027no\u0027, \u0027y\u0027 or \u0027n\u0027.","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"jehousoh"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"jehousoh"},"content":"     *       containsIsRoomCleanIgnoreCase(\"yes\", \"y\") \u003d\u003d true","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"jehousoh"},"content":"     *       containsIsRoomCleanIgnoreCase(\"yes\", \"yes\") \u003d\u003d true","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"jehousoh"},"content":"     *       containsIsRoomCleanIgnoreCase(\"yes\", \"yEs\") \u003d\u003d true","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"jehousoh"},"content":"     *       containsIsRoomCleanIgnoreCase(\"no\", \"n\") \u003d\u003d true","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"jehousoh"},"content":"     *       containsIsRoomCleanIgnoreCase(\"no\", \"no\") \u003d\u003d true","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"jehousoh"},"content":"     *       containsIsRoomCleanIgnoreCase(\"no\", \"nO\") \u003d\u003d true","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"jehousoh"},"content":"     *       containsIsRoomCleanIgnoreCase(\"yes\", \"yep\") \u003d\u003d false //not in the correct format","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"jehousoh"},"content":"     *       containsIsRoomCleanIgnoreCase(\"no\", \"nope\") \u003d\u003d false //not in the correct format","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"jehousoh"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"jehousoh"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"jehousoh"},"content":"     * @param isRoomClean cannot be null, cannot be empty, must be a single isRoomClean","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"jehousoh"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"jehousoh"},"content":"    public static boolean containsIsRoomCleanIgnoreCase(String sentence, String isRoomClean) {","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"jehousoh"},"content":"        String abbreviatedRoomClean \u003d \"y\";","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"jehousoh"},"content":"        String standardisedRoomClean \u003d \"yes\";","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"jehousoh"},"content":"        String abbreviatedRoomUnclean \u003d \"n\";","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"jehousoh"},"content":"        String standardisedRoomUnclean \u003d \"no\";","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"jehousoh"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"jehousoh"},"content":"        requireNonNull(isRoomClean);","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"jehousoh"},"content":"        String preppedIsRoomClean \u003d isRoomClean.trim().toLowerCase();","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"jehousoh"},"content":"        checkArgument(!preppedIsRoomClean.isEmpty(), \"IsRoomClean parameter cannot be empty\");","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"jehousoh"},"content":"        checkArgument(preppedIsRoomClean.split(SPLIT_REGEX).length \u003d\u003d 1,","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"jehousoh"},"content":"                \"IsRoomClean parameter should be a single IsRoomClean\");","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"jehousoh"},"content":"        if (preppedIsRoomClean.equals(abbreviatedRoomClean)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"jehousoh"},"content":"            preppedIsRoomClean \u003d standardisedRoomClean;","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"jehousoh"},"content":"        } else if (preppedIsRoomClean.equals(abbreviatedRoomUnclean)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"jehousoh"},"content":"            preppedIsRoomClean \u003d standardisedRoomUnclean;","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"jehousoh"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"jehousoh"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"jehousoh"},"content":"        String[] isRoomCleansInPreppedSentence \u003d preppedSentence.split(SPLIT_REGEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":112,"author":{"gitId":"jehousoh"},"content":"        return Arrays.stream(isRoomCleansInPreppedSentence)","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"jehousoh"},"content":"                .anyMatch(preppedIsRoomClean::equalsIgnoreCase);","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jehousoh":77,"bryanhce":2,"-":64}},{"path":"src/main/java/seedu/guest/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.GuiSettings;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.CommandResult;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ReadOnlyGuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"     * Returns the GuestBook.","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"     * @see seedu.guest.model.Model#getGuestBook()","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"    ReadOnlyGuestBook getGuestBook();","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"bryanhce"},"content":"    /** Returns an unmodifiable view of the filtered list of guests */","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"    ObservableList\u003cGuest\u003e getFilteredGuestList();","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"     * Returns the user prefs\u0027 guest list file path.","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"bryanhce"},"content":"    Path getGuestBookFilePath();","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"bryanhce":14,"-":36}},{"path":"src/main/java/seedu/guest/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.GuiSettings;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.LogsCenter;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.Command;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.CommandResult;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.parser.GuestBookParser;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ReadOnlyGuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.storage.Storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"    private final GuestBookParser guestBookParser;","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"        guestBookParser \u003d new GuestBookParser();","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"        Command command \u003d guestBookParser.parseCommand(commandText);","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"bryanhce"},"content":"            storage.saveGuestBook(model.getGuestBook());","lastModifiedDate":"2022-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"bryanhce"},"content":"    public ReadOnlyGuestBook getGuestBook() {","lastModifiedDate":"2022-10-01"},{"lineNumber":59,"author":{"gitId":"bryanhce"},"content":"        return model.getGuestBook();","lastModifiedDate":"2022-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"bryanhce"},"content":"    public ObservableList\u003cGuest\u003e getFilteredGuestList() {","lastModifiedDate":"2022-10-01"},{"lineNumber":64,"author":{"gitId":"bryanhce"},"content":"        return model.getFilteredGuestList();","lastModifiedDate":"2022-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"bryanhce"},"content":"    public Path getGuestBookFilePath() {","lastModifiedDate":"2022-10-01"},{"lineNumber":69,"author":{"gitId":"bryanhce"},"content":"        return model.getGuestBookFilePath();","lastModifiedDate":"2022-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"bryanhce":22,"-":59}},{"path":"src/main/java/seedu/guest/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_DATE_RANGE;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_NUMBER_OF_GUESTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"Lan-Jingbo"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"Lan-Jingbo"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_ROOM;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":" * Adds a guest to the guest book.","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a guest to the guest book. \"","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"            + PREFIX_ROOM + \"ROOM \"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"JustinPeng13"},"content":"            + PREFIX_DATE_RANGE + \"DATE_RANGE \"","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"jehousoh"},"content":"            + PREFIX_NUMBER_OF_GUESTS + \"NUMBER_OF_GUESTS \"","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"jehousoh"},"content":"            + \"[\" + PREFIX_REQUEST + \"REQUEST]\\n\"","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"kangzongxian"},"content":"            + PREFIX_ROOM + \"05-73 \"","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"JustinPeng13"},"content":"            + PREFIX_DATE_RANGE + \"13/09/22 - 15/09/22 \"","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"            + PREFIX_NUMBER_OF_GUESTS + \"1 \"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"Lan-Jingbo"},"content":"            + PREFIX_REQUEST + \"Apply for room service\";","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"bryanhce"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New guest added: %1$s\";","lastModifiedDate":"2022-10-01"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"    public static final String MESSAGE_DUPLICATE_GUEST \u003d \"This guest already exists in the guest book\";","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"kangzongxian"},"content":"    public static final String MESSAGE_ROOM_OCCUPIED \u003d \"The room is currently occupied by a guest\";","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"    private final Guest toAdd;","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"bryanhce"},"content":"     * Creates an AddCommand to add the specified {@code Guest}","lastModifiedDate":"2022-10-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"bryanhce"},"content":"    public AddCommand(Guest guest) {","lastModifiedDate":"2022-10-01"},{"lineNumber":51,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(guest);","lastModifiedDate":"2022-10-01"},{"lineNumber":52,"author":{"gitId":"bryanhce"},"content":"        toAdd \u003d guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"bryanhce"},"content":"        if (model.hasGuest(toAdd)) {","lastModifiedDate":"2022-10-01"},{"lineNumber":60,"author":{"gitId":"bryanhce"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_GUEST);","lastModifiedDate":"2022-10-01"},{"lineNumber":61,"author":{"gitId":"kangzongxian"},"content":"        } else if (model.hasSameRoom(toAdd)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"kangzongxian"},"content":"            throw new CommandException(MESSAGE_ROOM_OCCUPIED);","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"bryanhce"},"content":"        model.addGuest(toAdd);","lastModifiedDate":"2022-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kangzongxian":5,"jehousoh":3,"Lan-Jingbo":3,"bryanhce":20,"-":41,"JustinPeng13":3}},{"path":"src/main/java/seedu/guest/logic/commands/BillCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinPeng13"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"JustinPeng13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.model.Model.PREDICATE_SHOW_ALL_GUESTS;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"JustinPeng13"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.Bill;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"JustinPeng13"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"JustinPeng13"},"content":" * Updates the bill of an existing guest in the guest book.","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"JustinPeng13"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"JustinPeng13"},"content":"public class BillCommand extends Command {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"JustinPeng13"},"content":"    public static final String COMMAND_WORD \u003d \"bill\";","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"JustinPeng13"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"JustinPeng13"},"content":"            + \": Adds to the bill of the guest identified \"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"JustinPeng13"},"content":"            + \"by the index number used in the last guest listing.\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"jehousoh"},"content":"            + \"To subtract from a bill, provide a negative value.\\n\"","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"JustinPeng13"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"JustinPeng13"},"content":"            + \"b/BILL\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"JustinPeng13"},"content":"            + \"Examples:\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"JustinPeng13"},"content":"            + COMMAND_WORD + \" 1 b/59.99\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"JustinPeng13"},"content":"            + COMMAND_WORD + \" 2 b/-10\\n\";","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"JustinPeng13"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Updated bill of Guest: %1$s\";","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"JustinPeng13"},"content":"    public static final String MESSAGE_NEGATIVE_BILL \u003d \"Total bill cannot be negative\";","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"JustinPeng13"},"content":"    private final Index index;","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"JustinPeng13"},"content":"    private final Bill bill;","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"JustinPeng13"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"JustinPeng13"},"content":"     * @param index of the guest in the filtered guest list to edit the bill","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"JustinPeng13"},"content":"     * @param bill of the guest to be updated to","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"JustinPeng13"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"JustinPeng13"},"content":"    public BillCommand(Index index, Bill bill) {","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"JustinPeng13"},"content":"        requireAllNonNull(index, bill);","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"JustinPeng13"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"JustinPeng13"},"content":"        this.bill \u003d bill;","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"JustinPeng13"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"JustinPeng13"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"JustinPeng13"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"JustinPeng13"},"content":"        List\u003cGuest\u003e lastShownList \u003d model.getFilteredGuestList();","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"JustinPeng13"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"JustinPeng13"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GUEST_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"JustinPeng13"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"JustinPeng13"},"content":"        Guest guestToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"JustinPeng13"},"content":"        Bill editedBill \u003d guestToEdit.getBill().add(bill);","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"JustinPeng13"},"content":"        if (editedBill.getValue() \u003c 0) {","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"JustinPeng13"},"content":"            throw new CommandException(MESSAGE_NEGATIVE_BILL);","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"JustinPeng13"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"JustinPeng13"},"content":"        Guest editedGuest \u003d new Guest(","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"kangzongxian"},"content":"                guestToEdit.getName(), guestToEdit.getPhone(), guestToEdit.getEmail(), guestToEdit.getRoom(),","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"JustinPeng13"},"content":"                guestToEdit.getDateRange(), guestToEdit.getNumberOfGuests(), guestToEdit.getIsRoomClean(),","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"Lan-Jingbo"},"content":"                editedBill, guestToEdit.getRequest()","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"JustinPeng13"},"content":"        );","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"JustinPeng13"},"content":"        model.setGuest(guestToEdit, editedGuest);","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"JustinPeng13"},"content":"        model.updateFilteredGuestList(PREDICATE_SHOW_ALL_GUESTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"jehousoh"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedGuest));","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"JustinPeng13"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"JustinPeng13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"JustinPeng13"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"JustinPeng13"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"JustinPeng13"},"content":"            return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"JustinPeng13"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"JustinPeng13"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"JustinPeng13"},"content":"        if (!(other instanceof BillCommand)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"JustinPeng13"},"content":"            return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"JustinPeng13"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"JustinPeng13"},"content":"        // state check","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"JustinPeng13"},"content":"        BillCommand e \u003d (BillCommand) other;","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"JustinPeng13"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"JustinPeng13"},"content":"                \u0026\u0026 bill.equals(e.bill);","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"JustinPeng13"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"kangzongxian":1,"jehousoh":2,"Lan-Jingbo":1,"JustinPeng13":91}},{"path":"src/main/java/seedu/guest/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.GuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":" * Clears the guest book.","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Guest book has been cleared!\";","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"        model.setGuestBook(new GuestBook());","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bryanhce":6,"-":17}},{"path":"src/main/java/seedu/guest/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bryanhce":3,"-":17}},{"path":"src/main/java/seedu/guest/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bryanhce":1,"-":70}},{"path":"src/main/java/seedu/guest/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.Messages;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.index.Index;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":" * Deletes a guest identified using it\u0027s displayed index from the guest book.","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"            + \": Deletes the guest identified by the index number used in the displayed guest book.\\n\"","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"    public static final String MESSAGE_DELETE_GUEST_SUCCESS \u003d \"Deleted Guest: %1$s\";","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"        List\u003cGuest\u003e lastShownList \u003d model.getFilteredGuestList();","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"bryanhce"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GUEST_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"        Guest guestToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"bryanhce"},"content":"        model.deleteGuest(guestToDelete);","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"bryanhce"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_GUEST_SUCCESS, guestToDelete));","lastModifiedDate":"2022-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bryanhce":14,"-":39}},{"path":"src/main/java/seedu/guest/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_DATE_RANGE;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_IS_ROOM_CLEAN;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_NUMBER_OF_GUESTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"Lan-Jingbo"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_ROOM;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.model.Model.PREDICATE_SHOW_ALL_GUESTS;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.Messages;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.index.Index;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.Bill;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.DateRange;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Email;","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.IsRoomClean;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Name;","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.model.guest.NumberOfGuests;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"Lan-Jingbo"},"content":"import seedu.guest.model.guest.Request;","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.model.guest.Room;","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":" * Edits the details of an existing guest in the guest book.","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the guest identified \"","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"bryanhce"},"content":"            + \"by the index number used in the displayed guest book. \"","lastModifiedDate":"2022-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"kangzongxian"},"content":"            + \"[\" + PREFIX_ROOM + \"ROOM] \"","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"JustinPeng13"},"content":"            + \"[\" + PREFIX_DATE_RANGE + \"DATE_RANGE] \"","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"jehousoh"},"content":"            + \"[\" + PREFIX_NUMBER_OF_GUESTS + \"NUMBER_OF_GUESTS] \"","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Lan-Jingbo"},"content":"            + \"[\" + PREFIX_IS_ROOM_CLEAN + \"IS_ROOM_CLEAN] \"","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"Lan-Jingbo"},"content":"            + \"[\" + PREFIX_REQUEST + \"REQUEST]\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"bryanhce"},"content":"    public static final String MESSAGE_EDIT_GUEST_SUCCESS \u003d \"Edited Guest: %1$s\";","lastModifiedDate":"2022-10-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"bryanhce"},"content":"    public static final String MESSAGE_DUPLICATE_GUEST \u003d \"This guest already exists in the guest book.\";","lastModifiedDate":"2022-10-01"},{"lineNumber":59,"author":{"gitId":"kangzongxian"},"content":"    public static final String MESSAGE_ROOM_OCCUPIED \u003d \"The room is currently occupied by a guest\";","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"bryanhce"},"content":"    private final EditGuestDescriptor editGuestDescriptor;","lastModifiedDate":"2022-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"bryanhce"},"content":"     * @param index of the guest in the filtered guest book to edit","lastModifiedDate":"2022-10-01"},{"lineNumber":66,"author":{"gitId":"bryanhce"},"content":"     * @param editGuestDescriptor details to edit the guest with","lastModifiedDate":"2022-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"bryanhce"},"content":"    public EditCommand(Index index, EditGuestDescriptor editGuestDescriptor) {","lastModifiedDate":"2022-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(editGuestDescriptor);","lastModifiedDate":"2022-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"bryanhce"},"content":"        this.editGuestDescriptor \u003d new EditGuestDescriptor(editGuestDescriptor);","lastModifiedDate":"2022-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"bryanhce"},"content":"        List\u003cGuest\u003e lastShownList \u003d model.getFilteredGuestList();","lastModifiedDate":"2022-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"bryanhce"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GUEST_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"bryanhce"},"content":"        Guest guestToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-01"},{"lineNumber":86,"author":{"gitId":"bryanhce"},"content":"        Guest editedGuest \u003d createEditedGuest(guestToEdit, editGuestDescriptor);","lastModifiedDate":"2022-10-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"bryanhce"},"content":"        if (!guestToEdit.isSameGuest(editedGuest) \u0026\u0026 model.hasGuest(editedGuest)) {","lastModifiedDate":"2022-10-01"},{"lineNumber":89,"author":{"gitId":"bryanhce"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_GUEST);","lastModifiedDate":"2022-10-01"},{"lineNumber":90,"author":{"gitId":"kangzongxian"},"content":"        } else if (!guestToEdit.getRoom().equals(editedGuest.getRoom()) \u0026\u0026 model.hasSameRoom(editedGuest)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"kangzongxian"},"content":"            throw new CommandException(MESSAGE_ROOM_OCCUPIED);","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"bryanhce"},"content":"        model.setGuest(guestToEdit, editedGuest);","lastModifiedDate":"2022-10-01"},{"lineNumber":95,"author":{"gitId":"bryanhce"},"content":"        model.updateFilteredGuestList(PREDICATE_SHOW_ALL_GUESTS);","lastModifiedDate":"2022-10-01"},{"lineNumber":96,"author":{"gitId":"bryanhce"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_GUEST_SUCCESS, editedGuest));","lastModifiedDate":"2022-10-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"bryanhce"},"content":"     * Creates and returns a {@code Guest} with the details of {@code guestToEdit}","lastModifiedDate":"2022-10-01"},{"lineNumber":101,"author":{"gitId":"bryanhce"},"content":"     * edited with {@code editGuestDescriptor}.","lastModifiedDate":"2022-10-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"bryanhce"},"content":"    private static Guest createEditedGuest(Guest guestToEdit, EditGuestDescriptor editGuestDescriptor) {","lastModifiedDate":"2022-10-01"},{"lineNumber":104,"author":{"gitId":"bryanhce"},"content":"        assert guestToEdit !\u003d null;","lastModifiedDate":"2022-10-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"bryanhce"},"content":"        Name updatedName \u003d editGuestDescriptor.getName().orElse(guestToEdit.getName());","lastModifiedDate":"2022-10-01"},{"lineNumber":107,"author":{"gitId":"bryanhce"},"content":"        Phone updatedPhone \u003d editGuestDescriptor.getPhone().orElse(guestToEdit.getPhone());","lastModifiedDate":"2022-10-01"},{"lineNumber":108,"author":{"gitId":"bryanhce"},"content":"        Email updatedEmail \u003d editGuestDescriptor.getEmail().orElse(guestToEdit.getEmail());","lastModifiedDate":"2022-10-01"},{"lineNumber":109,"author":{"gitId":"kangzongxian"},"content":"        Room updatedRoom \u003d editGuestDescriptor.getRoom().orElse(guestToEdit.getRoom());","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"JustinPeng13"},"content":"        DateRange updatedDateRange \u003d editGuestDescriptor.getDateRange().orElse(guestToEdit.getDateRange());","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"jehousoh"},"content":"        NumberOfGuests updatedNumberOfGuests \u003d editGuestDescriptor.getNumberOfGuests()","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"jehousoh"},"content":"                .orElse(guestToEdit.getNumberOfGuests());","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"bryanhce"},"content":"        IsRoomClean updatedIsRoomClean \u003d editGuestDescriptor.getIsRoomClean().orElse(guestToEdit.getIsRoomClean());","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"JustinPeng13"},"content":"        Bill updatedBill \u003d guestToEdit.getBill();","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"Lan-Jingbo"},"content":"        Request updatedRequest \u003d editGuestDescriptor.getRequest().orElse(guestToEdit.getRequest());","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"Lan-Jingbo"},"content":"        return new Guest(updatedName, updatedPhone, updatedEmail, updatedRoom, updatedDateRange,","lastModifiedDate":"2022-10-19"},{"lineNumber":117,"author":{"gitId":"Lan-Jingbo"},"content":"                updatedNumberOfGuests, updatedIsRoomClean, updatedBill, updatedRequest);","lastModifiedDate":"2022-10-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"bryanhce"},"content":"                \u0026\u0026 editGuestDescriptor.equals(e.editGuestDescriptor);","lastModifiedDate":"2022-10-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"bryanhce"},"content":"     * Stores the details to edit the guest with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-01"},{"lineNumber":140,"author":{"gitId":"bryanhce"},"content":"     * corresponding field value of the guest.","lastModifiedDate":"2022-10-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"bryanhce"},"content":"    public static class EditGuestDescriptor {","lastModifiedDate":"2022-10-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"kangzongxian"},"content":"        private Room room;","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"JustinPeng13"},"content":"        private DateRange dateRange;","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"jehousoh"},"content":"        private NumberOfGuests numberOfGuests;","lastModifiedDate":"2022-09-30"},{"lineNumber":149,"author":{"gitId":"bryanhce"},"content":"        private IsRoomClean isRoomClean;","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"Lan-Jingbo"},"content":"        private Request request;","lastModifiedDate":"2022-10-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"bryanhce"},"content":"        public EditGuestDescriptor() {}","lastModifiedDate":"2022-10-01"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":157,"author":{"gitId":"bryanhce"},"content":"        public EditGuestDescriptor(EditGuestDescriptor toCopy) {","lastModifiedDate":"2022-10-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":161,"author":{"gitId":"kangzongxian"},"content":"            setRoom(toCopy.room);","lastModifiedDate":"2022-10-16"},{"lineNumber":162,"author":{"gitId":"JustinPeng13"},"content":"            setDateRange(toCopy.dateRange);","lastModifiedDate":"2022-10-05"},{"lineNumber":163,"author":{"gitId":"jehousoh"},"content":"            setNumberOfGuests(toCopy.numberOfGuests);","lastModifiedDate":"2022-09-30"},{"lineNumber":164,"author":{"gitId":"bryanhce"},"content":"            setIsRoomClean(toCopy.isRoomClean);","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"Lan-Jingbo"},"content":"            setRequest(toCopy.request);","lastModifiedDate":"2022-10-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"Lan-Jingbo"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, room, dateRange,","lastModifiedDate":"2022-10-24"},{"lineNumber":173,"author":{"gitId":"Lan-Jingbo"},"content":"                    numberOfGuests, isRoomClean, request);","lastModifiedDate":"2022-10-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"kangzongxian"},"content":"        public void setRoom(Room room) {","lastModifiedDate":"2022-10-16"},{"lineNumber":201,"author":{"gitId":"kangzongxian"},"content":"            this.room \u003d room;","lastModifiedDate":"2022-10-16"},{"lineNumber":202,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":203,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":204,"author":{"gitId":"kangzongxian"},"content":"        public Optional\u003cRoom\u003e getRoom() {","lastModifiedDate":"2022-10-16"},{"lineNumber":205,"author":{"gitId":"kangzongxian"},"content":"            return Optional.ofNullable(room);","lastModifiedDate":"2022-10-16"},{"lineNumber":206,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":207,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":208,"author":{"gitId":"JustinPeng13"},"content":"        public void setDateRange(DateRange dateRange) {","lastModifiedDate":"2022-10-05"},{"lineNumber":209,"author":{"gitId":"JustinPeng13"},"content":"            this.dateRange \u003d dateRange;","lastModifiedDate":"2022-10-05"},{"lineNumber":210,"author":{"gitId":"JustinPeng13"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":211,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":212,"author":{"gitId":"JustinPeng13"},"content":"        public Optional\u003cDateRange\u003e getDateRange() {","lastModifiedDate":"2022-10-05"},{"lineNumber":213,"author":{"gitId":"JustinPeng13"},"content":"            return Optional.ofNullable(dateRange);","lastModifiedDate":"2022-10-05"},{"lineNumber":214,"author":{"gitId":"JustinPeng13"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":215,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":216,"author":{"gitId":"jehousoh"},"content":"        public void setNumberOfGuests(NumberOfGuests numberOfGuests) {","lastModifiedDate":"2022-09-30"},{"lineNumber":217,"author":{"gitId":"jehousoh"},"content":"            this.numberOfGuests \u003d numberOfGuests;","lastModifiedDate":"2022-09-30"},{"lineNumber":218,"author":{"gitId":"jehousoh"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":219,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":220,"author":{"gitId":"jehousoh"},"content":"        public Optional\u003cNumberOfGuests\u003e getNumberOfGuests() {","lastModifiedDate":"2022-09-30"},{"lineNumber":221,"author":{"gitId":"jehousoh"},"content":"            return Optional.ofNullable(numberOfGuests);","lastModifiedDate":"2022-09-30"},{"lineNumber":222,"author":{"gitId":"jehousoh"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":223,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":224,"author":{"gitId":"bryanhce"},"content":"        public void setIsRoomClean(IsRoomClean isRoomClean) {","lastModifiedDate":"2022-10-13"},{"lineNumber":225,"author":{"gitId":"bryanhce"},"content":"            this.isRoomClean \u003d isRoomClean;","lastModifiedDate":"2022-10-13"},{"lineNumber":226,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":227,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":228,"author":{"gitId":"bryanhce"},"content":"        public Optional\u003cIsRoomClean\u003e getIsRoomClean() {","lastModifiedDate":"2022-10-13"},{"lineNumber":229,"author":{"gitId":"bryanhce"},"content":"            return Optional.ofNullable(isRoomClean);","lastModifiedDate":"2022-10-13"},{"lineNumber":230,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":231,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":232,"author":{"gitId":"Lan-Jingbo"},"content":"        public void setRequest(Request request) {","lastModifiedDate":"2022-10-24"},{"lineNumber":233,"author":{"gitId":"Lan-Jingbo"},"content":"            this.request \u003d request;","lastModifiedDate":"2022-10-24"},{"lineNumber":234,"author":{"gitId":"Lan-Jingbo"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":235,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":236,"author":{"gitId":"Lan-Jingbo"},"content":"        public Optional\u003cRequest\u003e getRequest() {","lastModifiedDate":"2022-10-24"},{"lineNumber":237,"author":{"gitId":"Lan-Jingbo"},"content":"            return Optional.ofNullable(request);","lastModifiedDate":"2022-10-24"},{"lineNumber":238,"author":{"gitId":"Lan-Jingbo"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":239,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"bryanhce"},"content":"            if (!(other instanceof EditGuestDescriptor)) {","lastModifiedDate":"2022-10-01"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"bryanhce"},"content":"            EditGuestDescriptor e \u003d (EditGuestDescriptor) other;","lastModifiedDate":"2022-10-01"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":258,"author":{"gitId":"kangzongxian"},"content":"                    \u0026\u0026 getRoom().equals(e.getRoom())","lastModifiedDate":"2022-10-16"},{"lineNumber":259,"author":{"gitId":"JustinPeng13"},"content":"                    \u0026\u0026 getDateRange().equals(e.getDateRange())","lastModifiedDate":"2022-10-05"},{"lineNumber":260,"author":{"gitId":"bryanhce"},"content":"                    \u0026\u0026 getNumberOfGuests().equals(e.getNumberOfGuests())","lastModifiedDate":"2022-10-13"},{"lineNumber":261,"author":{"gitId":"Lan-Jingbo"},"content":"                    \u0026\u0026 getIsRoomClean().equals(e.getIsRoomClean())","lastModifiedDate":"2022-10-24"},{"lineNumber":262,"author":{"gitId":"Lan-Jingbo"},"content":"                    \u0026\u0026 getRequest().equals(e.getRequest());","lastModifiedDate":"2022-10-24"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"kangzongxian":18,"jehousoh":15,"Lan-Jingbo":21,"bryanhce":63,"-":131,"JustinPeng13":17}},{"path":"src/main/java/seedu/guest/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Guest Book as requested ...\";","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"bryanhce":3,"-":16}},{"path":"src/main/java/seedu/guest/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.Messages;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.model.guest.GuestContainsKeywordsPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":" * Finds and lists all guests in guest book whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"jehousoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all guests whose details contain any of \"","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"jehousoh"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice 98765432 bob charlie@example.com\";","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"jehousoh"},"content":"    private final GuestContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"jehousoh"},"content":"    public FindCommand(GuestContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"        model.updateFilteredGuestList(predicate);","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"bryanhce"},"content":"                String.format(Messages.MESSAGE_GUESTS_LISTED_OVERVIEW, model.getFilteredGuestList().size()));","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jehousoh":5,"bryanhce":6,"-":31}},{"path":"src/main/java/seedu/guest/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bryanhce":2,"-":19}},{"path":"src/main/java/seedu/guest/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.model.Model.PREDICATE_SHOW_ALL_GUESTS;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"/**","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":" * Lists all guests in the guest book to the user.","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":" */","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all guests\";","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"        model.updateFilteredGuestList(PREDICATE_SHOW_ALL_GUESTS);","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"bryanhce":24}},{"path":"src/main/java/seedu/guest/logic/commands/MarkRoomsUncleanCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.model.Model.PREDICATE_SHOW_ALL_GUESTS;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Bill;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.DateRange;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Email;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.IsRoomClean;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Name;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.NumberOfGuests;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Phone;","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Request;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Room;","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":" * Changes isRoomClean field of all guests in guest book to \"no\".","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"public class MarkRoomsUncleanCommand extends Command {","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"    public static final String COMMAND_WORD \u003d \"markRoomsUnclean\";","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"            + \": Changes all guests\u0027 isRoomClean statuses to \\\"no\\\".\\n\"","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Marked all guests\u0027 isRoomClean statuses as \\\"no\\\".\";","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"bryanhce"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"        model.updateFilteredGuestList(PREDICATE_SHOW_ALL_GUESTS);","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"        List\u003cGuest\u003e completeGuestList \u003d model.getFilteredGuestList();","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"        Guest guestToEdit;","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"bryanhce"},"content":"        Guest editedGuest;","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"bryanhce"},"content":"        for (int index \u003d 0; index \u003c completeGuestList.size(); index++) {","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"bryanhce"},"content":"            guestToEdit \u003d completeGuestList.get(index);","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"            editedGuest \u003d createGuestWithRoomUnclean(guestToEdit);","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"bryanhce"},"content":"            model.setGuest(guestToEdit, editedGuest);","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"bryanhce"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"bryanhce"},"content":"     * Creates and returns a {@code Guest} with the isRoomClean set to \"no\".","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"bryanhce"},"content":"    private static Guest createGuestWithRoomUnclean(Guest guestToEdit) {","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"bryanhce"},"content":"        assert guestToEdit !\u003d null;","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"bryanhce"},"content":"        Name updatedName \u003d guestToEdit.getName();","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"bryanhce"},"content":"        Phone updatedPhone \u003d guestToEdit.getPhone();","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"bryanhce"},"content":"        Email updatedEmail \u003d guestToEdit.getEmail();","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"bryanhce"},"content":"        Room updatedRoom \u003d guestToEdit.getRoom();","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"bryanhce"},"content":"        DateRange updatedDateRange \u003d guestToEdit.getDateRange();","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"bryanhce"},"content":"        NumberOfGuests updatedNumberOfGuests \u003d guestToEdit.getNumberOfGuests();","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"bryanhce"},"content":"        IsRoomClean updatedIsRoomClean \u003d new IsRoomClean(\"no\");","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"bryanhce"},"content":"        Bill updatedBill \u003d guestToEdit.getBill();","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"bryanhce"},"content":"        Request updatedRequest \u003d guestToEdit.getRequest();","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"bryanhce"},"content":"        return new Guest(updatedName, updatedPhone, updatedEmail, updatedRoom, updatedDateRange,","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"bryanhce"},"content":"                updatedNumberOfGuests, updatedIsRoomClean, updatedBill, updatedRequest);","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"bryanhce":71}},{"path":"src/main/java/seedu/guest/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands.exceptions;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"bryanhce":1,"-":16}},{"path":"src/main/java/seedu/guest/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_DATE_RANGE;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_NUMBER_OF_GUESTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"Lan-Jingbo"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_ROOM;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.model.guest.IsRoomClean.DEFAULT_IS_ROOM_CLEAN;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.AddCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.Bill;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.DateRange;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Email;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.IsRoomClean;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Name;","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.model.guest.NumberOfGuests;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"Lan-Jingbo"},"content":"import seedu.guest.model.guest.Request;","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.model.guest.Room;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"kangzongxian"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"bryanhce"},"content":"                        PREFIX_ROOM, PREFIX_DATE_RANGE, PREFIX_NUMBER_OF_GUESTS, PREFIX_REQUEST);","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"kangzongxian"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROOM,","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"bryanhce"},"content":"                PREFIX_DATE_RANGE, PREFIX_NUMBER_OF_GUESTS)","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"Lan-Jingbo"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"Lan-Jingbo"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"Lan-Jingbo"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"kangzongxian"},"content":"        Room room \u003d ParserUtil.parseRoom(argMultimap.getValue(PREFIX_ROOM).get());","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"Lan-Jingbo"},"content":"        DateRange dateRange \u003d ParserUtil.parseDateRange(argMultimap.getValue(PREFIX_DATE_RANGE).get());","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"Lan-Jingbo"},"content":"        NumberOfGuests numberOfGuests \u003d ParserUtil","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"Lan-Jingbo"},"content":"                .parseNumberOfGuests(argMultimap.getValue(PREFIX_NUMBER_OF_GUESTS).get());","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"bryanhce"},"content":"        IsRoomClean isRoomClean \u003d new IsRoomClean(DEFAULT_IS_ROOM_CLEAN);","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"Lan-Jingbo"},"content":"        Bill bill \u003d new Bill();","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"Lan-Jingbo"},"content":"        Request request \u003d new Request();","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"Lan-Jingbo"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_REQUEST)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":60,"author":{"gitId":"Lan-Jingbo"},"content":"            request \u003d ParserUtil.parseRequest(argMultimap.getValue(PREFIX_REQUEST).get());","lastModifiedDate":"2022-10-30"},{"lineNumber":61,"author":{"gitId":"Lan-Jingbo"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":62,"author":{"gitId":"Lan-Jingbo"},"content":"        Guest guest \u003d new Guest(name, phone, email, room, dateRange, numberOfGuests, isRoomClean, bill, request);","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"bryanhce"},"content":"        return new AddCommand(guest);","lastModifiedDate":"2022-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"kangzongxian":5,"jehousoh":2,"Lan-Jingbo":14,"bryanhce":17,"-":33,"JustinPeng13":3}},{"path":"src/main/java/seedu/guest/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"bryanhce":1,"-":59}},{"path":"src/main/java/seedu/guest/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"bryanhce":1,"-":147}},{"path":"src/main/java/seedu/guest/logic/parser/BillCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinPeng13"},"content":"package seedu.guest.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"JustinPeng13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_BILL;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.logic.commands.BillCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.Bill;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"JustinPeng13"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"JustinPeng13"},"content":" * Parses input arguments and creates a new {@code BillCommand} object","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"JustinPeng13"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"JustinPeng13"},"content":"public class BillCommandParser implements Parser\u003cBillCommand\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"JustinPeng13"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"JustinPeng13"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code BillCommand}","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"JustinPeng13"},"content":"     * and returns a {@code BillCommand} object for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"JustinPeng13"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"JustinPeng13"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"JustinPeng13"},"content":"    public BillCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"JustinPeng13"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"JustinPeng13"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_BILL);","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"JustinPeng13"},"content":"        Index index;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"JustinPeng13"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"JustinPeng13"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"JustinPeng13"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"JustinPeng13"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, BillCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"JustinPeng13"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"JustinPeng13"},"content":"        if (argMultimap.getValue(PREFIX_BILL).isEmpty()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"JustinPeng13"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, BillCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"JustinPeng13"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"JustinPeng13"},"content":"        Bill bill \u003d ParserUtil.parseBill(argMultimap.getValue(PREFIX_BILL).get());","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"JustinPeng13"},"content":"        return new BillCommand(index, bill);","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"JustinPeng13"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"JustinPeng13":40}},{"path":"src/main/java/seedu/guest/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"JustinPeng13"},"content":"    public static final Prefix PREFIX_DATE_RANGE \u003d new Prefix(\"dr/\");","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"jehousoh"},"content":"    public static final Prefix PREFIX_NUMBER_OF_GUESTS \u003d new Prefix(\"ng/\");","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"    public static final Prefix PREFIX_IS_ROOM_CLEAN \u003d new Prefix(\"rc/\");","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"    public static final Prefix PREFIX_ROOM \u003d new Prefix(\"rm/\");","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"JustinPeng13"},"content":"    public static final Prefix PREFIX_BILL \u003d new Prefix(\"b/\");","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Lan-Jingbo"},"content":"    public static final Prefix PREFIX_REQUEST \u003d new Prefix(\"rq/\");","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"kangzongxian":1,"jehousoh":1,"Lan-Jingbo":1,"bryanhce":2,"-":11,"JustinPeng13":2}},{"path":"src/main/java/seedu/guest/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.index.Index;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"bryanhce":5,"-":24}},{"path":"src/main/java/seedu/guest/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_DATE_RANGE;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_IS_ROOM_CLEAN;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_NUMBER_OF_GUESTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"Lan-Jingbo"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_ROOM;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.index.Index;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.EditCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.EditCommand.EditGuestDescriptor;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Lan-Jingbo"},"content":"                        PREFIX_ROOM, PREFIX_DATE_RANGE, PREFIX_NUMBER_OF_GUESTS,","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Lan-Jingbo"},"content":"                        PREFIX_IS_ROOM_CLEAN, PREFIX_REQUEST);","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"bryanhce"},"content":"        EditGuestDescriptor editGuestDescriptor \u003d new EditGuestDescriptor();","lastModifiedDate":"2022-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"bryanhce"},"content":"            editGuestDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"bryanhce"},"content":"            editGuestDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"bryanhce"},"content":"            editGuestDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-10-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"kangzongxian"},"content":"        if (argMultimap.getValue(PREFIX_ROOM).isPresent()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"kangzongxian"},"content":"            editGuestDescriptor.setRoom(ParserUtil.parseRoom(argMultimap.getValue(PREFIX_ROOM).get()));","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"JustinPeng13"},"content":"        if (argMultimap.getValue(PREFIX_DATE_RANGE).isPresent()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"JustinPeng13"},"content":"            editGuestDescriptor.setDateRange(ParserUtil.parseDateRange(argMultimap.getValue(PREFIX_DATE_RANGE).get()));","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"JustinPeng13"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"jehousoh"},"content":"        if (argMultimap.getValue(PREFIX_NUMBER_OF_GUESTS).isPresent()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"jehousoh"},"content":"            editGuestDescriptor.setNumberOfGuests(ParserUtil","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"jehousoh"},"content":"                    .parseNumberOfGuests(argMultimap.getValue(PREFIX_NUMBER_OF_GUESTS).get()));","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"jehousoh"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"bryanhce"},"content":"        if (argMultimap.getValue(PREFIX_IS_ROOM_CLEAN).isPresent()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"bryanhce"},"content":"            editGuestDescriptor.setIsRoomClean(ParserUtil","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"bryanhce"},"content":"                    .parseIsRoomClean(argMultimap.getValue(PREFIX_IS_ROOM_CLEAN).get()));","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"Lan-Jingbo"},"content":"        if (argMultimap.getValue(PREFIX_REQUEST).isPresent()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"Lan-Jingbo"},"content":"            editGuestDescriptor.setRequest(ParserUtil.parseRequest(argMultimap.getValue(PREFIX_REQUEST).get()));","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"Lan-Jingbo"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"bryanhce"},"content":"        if (!editGuestDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"bryanhce"},"content":"        return new EditCommand(index, editGuestDescriptor);","lastModifiedDate":"2022-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kangzongxian":5,"jehousoh":5,"Lan-Jingbo":6,"bryanhce":20,"-":39,"JustinPeng13":4}},{"path":"src/main/java/seedu/guest/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.FindCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.model.guest.GuestContainsKeywordsPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"jehousoh"},"content":"        return new FindCommand(new GuestContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jehousoh":2,"bryanhce":4,"-":27}},{"path":"src/main/java/seedu/guest/logic/parser/GuestBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.AddCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.logic.commands.BillCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.Command;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.EditCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.FindCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.ListCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.MarkRoomsUncleanCommand;","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"public class GuestBookParser {","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"JustinPeng13"},"content":"        case BillCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"JustinPeng13"},"content":"            return new BillCommandParser().parse(arguments);","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":76,"author":{"gitId":"bryanhce"},"content":"        case MarkRoomsUncleanCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"bryanhce"},"content":"            return new MarkRoomsUncleanCommand();","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bryanhce":18,"-":62,"JustinPeng13":4}},{"path":"src/main/java/seedu/guest/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.Command;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"bryanhce":3,"-":13}},{"path":"src/main/java/seedu/guest/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.index.Index;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.util.StringUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.Bill;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.DateRange;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Email;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.IsRoomClean;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Name;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.model.guest.NumberOfGuests;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"Lan-Jingbo"},"content":"import seedu.guest.model.guest.Request;","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.model.guest.Room;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"kangzongxian"},"content":"     * Parses a {@code String room} into an {@code Room}.","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"kangzongxian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"kangzongxian"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"kangzongxian"},"content":"     * @throws ParseException if the given {@code room} is invalid.","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"kangzongxian"},"content":"    public static Room parseRoom(String room) throws ParseException {","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"kangzongxian"},"content":"        requireNonNull(room);","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"kangzongxian"},"content":"        String trimmedRoom \u003d room.trim();","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"kangzongxian"},"content":"        if (!Room.isValidRoom(trimmedRoom)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"kangzongxian"},"content":"            throw new ParseException(Room.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"kangzongxian"},"content":"        return new Room(trimmedRoom);","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"JustinPeng13"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"JustinPeng13"},"content":"     * Parses a {@code String dateRange} into a {@code DateRange}.","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"JustinPeng13"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"JustinPeng13"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"JustinPeng13"},"content":"     * @throws ParseException if the given {@code dateRange} is invalid.","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"JustinPeng13"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"JustinPeng13"},"content":"    public static DateRange parseDateRange(String dateRange) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"JustinPeng13"},"content":"        requireNonNull(dateRange);","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"JustinPeng13"},"content":"        String trimmedDateRange \u003d dateRange.trim();","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"JustinPeng13"},"content":"        if (!DateRange.isValidDateRange(trimmedDateRange)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"JustinPeng13"},"content":"            throw new ParseException(DateRange.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"JustinPeng13"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"JustinPeng13"},"content":"        return new DateRange(trimmedDateRange);","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"jehousoh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"JustinPeng13"},"content":"     * Parses a {@code String numberOfGuests} into a {@code NumberOfGuests}.","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"jehousoh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"jehousoh"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"jehousoh"},"content":"     * @throws ParseException if the given {@code numberOfGuests} is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"jehousoh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"jehousoh"},"content":"    public static NumberOfGuests parseNumberOfGuests(String numberOfGuests) throws ParseException {","lastModifiedDate":"2022-09-30"},{"lineNumber":120,"author":{"gitId":"jehousoh"},"content":"        requireNonNull(numberOfGuests);","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"jehousoh"},"content":"        String trimmedNumberOfGuests \u003d numberOfGuests.trim();","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"jehousoh"},"content":"        if (!NumberOfGuests.isValidNumberOfGuests(trimmedNumberOfGuests)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":123,"author":{"gitId":"jehousoh"},"content":"            throw new ParseException(NumberOfGuests.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-30"},{"lineNumber":124,"author":{"gitId":"jehousoh"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"jehousoh"},"content":"        return new NumberOfGuests(trimmedNumberOfGuests);","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"bryanhce"},"content":"     * Parses a {@code String isRoomClean} into an {@code IsRoomClean}.","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"bryanhce"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"bryanhce"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"bryanhce"},"content":"     * @throws ParseException if the given {@code isRoomClean} is invalid.","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"bryanhce"},"content":"    public static IsRoomClean parseIsRoomClean(String isRoomClean) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(isRoomClean);","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"bryanhce"},"content":"        String trimmedIsRoomClean \u003d isRoomClean.trim();","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"bryanhce"},"content":"        if (!IsRoomClean.isValidIsRoomClean(trimmedIsRoomClean)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"bryanhce"},"content":"            throw new ParseException(IsRoomClean.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"bryanhce"},"content":"        return new IsRoomClean(trimmedIsRoomClean);","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":143,"author":{"gitId":"JustinPeng13"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":144,"author":{"gitId":"JustinPeng13"},"content":"     * Parses a {@code String bill} into a {@code Bill}.","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"JustinPeng13"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"JustinPeng13"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":147,"author":{"gitId":"JustinPeng13"},"content":"     * @throws ParseException if the given {@code bill} is invalid.","lastModifiedDate":"2022-10-15"},{"lineNumber":148,"author":{"gitId":"JustinPeng13"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":149,"author":{"gitId":"JustinPeng13"},"content":"    public static Bill parseBill(String bill) throws ParseException {","lastModifiedDate":"2022-10-15"},{"lineNumber":150,"author":{"gitId":"JustinPeng13"},"content":"        requireNonNull(bill);","lastModifiedDate":"2022-10-15"},{"lineNumber":151,"author":{"gitId":"JustinPeng13"},"content":"        String trimmedBill \u003d bill.trim();","lastModifiedDate":"2022-10-15"},{"lineNumber":152,"author":{"gitId":"JustinPeng13"},"content":"        if (!Bill.isValidBill(trimmedBill)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":153,"author":{"gitId":"JustinPeng13"},"content":"            throw new ParseException(Bill.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":154,"author":{"gitId":"JustinPeng13"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":155,"author":{"gitId":"JustinPeng13"},"content":"        return new Bill(trimmedBill);","lastModifiedDate":"2022-10-15"},{"lineNumber":156,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":157,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":158,"author":{"gitId":"Lan-Jingbo"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":159,"author":{"gitId":"Lan-Jingbo"},"content":"     * Parses a {@code String request} into a {@code Request}.","lastModifiedDate":"2022-10-18"},{"lineNumber":160,"author":{"gitId":"Lan-Jingbo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-18"},{"lineNumber":161,"author":{"gitId":"Lan-Jingbo"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":162,"author":{"gitId":"Lan-Jingbo"},"content":"     * @throws ParseException if the given {@code request} is invalid.","lastModifiedDate":"2022-10-18"},{"lineNumber":163,"author":{"gitId":"Lan-Jingbo"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":164,"author":{"gitId":"Lan-Jingbo"},"content":"    public static Request parseRequest(String request) throws ParseException {","lastModifiedDate":"2022-10-18"},{"lineNumber":165,"author":{"gitId":"Lan-Jingbo"},"content":"        requireNonNull(request);","lastModifiedDate":"2022-10-18"},{"lineNumber":166,"author":{"gitId":"Lan-Jingbo"},"content":"        String trimmedRequest \u003d request.trim();","lastModifiedDate":"2022-10-18"},{"lineNumber":167,"author":{"gitId":"Lan-Jingbo"},"content":"        if (!Request.isValidRequest(trimmedRequest)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":168,"author":{"gitId":"Lan-Jingbo"},"content":"            throw new ParseException(Request.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-18"},{"lineNumber":169,"author":{"gitId":"Lan-Jingbo"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":170,"author":{"gitId":"Lan-Jingbo"},"content":"        return new Request(trimmedRequest);","lastModifiedDate":"2022-10-18"},{"lineNumber":171,"author":{"gitId":"Lan-Jingbo"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"kangzongxian":16,"jehousoh":14,"Lan-Jingbo":16,"bryanhce":23,"-":70,"JustinPeng13":33}},{"path":"src/main/java/seedu/guest/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"bryanhce":1,"-":38}},{"path":"src/main/java/seedu/guest/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.parser.exceptions;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"bryanhce":2,"-":15}},{"path":"src/main/java/seedu/guest/model/GuestBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import java.util.List;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.UniqueGuestList;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"/**","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":" * Wraps all data at the guest-book level","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":" * Duplicates are not allowed (by .isSameGuest comparison)","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":" */","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"public class GuestBook implements ReadOnlyGuestBook {","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"    private final UniqueGuestList guests;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"    /*","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"     *","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"     *   among constructors.","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"    {","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"        guests \u003d new UniqueGuestList();","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"    public GuestBook() {}","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"bryanhce"},"content":"     * Creates a GuestList using the Guests in the {@code toBeCopied}","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"bryanhce"},"content":"    public GuestBook(ReadOnlyGuestBook toBeCopied) {","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"        this();","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":39,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"bryanhce"},"content":"     * Replaces the contents of the guest list with {@code guests}.","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"bryanhce"},"content":"     * {@code guests} must not contain duplicate guests.","lastModifiedDate":"2022-10-01"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"bryanhce"},"content":"    public void setGuests(List\u003cGuest\u003e guests) {","lastModifiedDate":"2022-10-01"},{"lineNumber":47,"author":{"gitId":"bryanhce"},"content":"        this.guests.setGuests(guests);","lastModifiedDate":"2022-10-01"},{"lineNumber":48,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":49,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":50,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":51,"author":{"gitId":"bryanhce"},"content":"     * Resets the existing data of this {@code GuestList} with {@code newData}.","lastModifiedDate":"2022-10-01"},{"lineNumber":52,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":53,"author":{"gitId":"bryanhce"},"content":"    public void resetData(ReadOnlyGuestBook newData) {","lastModifiedDate":"2022-10-01"},{"lineNumber":54,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-10-01"},{"lineNumber":55,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":56,"author":{"gitId":"bryanhce"},"content":"        setGuests(newData.getGuestList());","lastModifiedDate":"2022-10-01"},{"lineNumber":57,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":58,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":59,"author":{"gitId":"Lan-Jingbo"},"content":"    // guest-level operations","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":61,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":62,"author":{"gitId":"bryanhce"},"content":"     * Returns true if a guest with the same identity as {@code guest} exists in the guest book.","lastModifiedDate":"2022-10-01"},{"lineNumber":63,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":64,"author":{"gitId":"bryanhce"},"content":"    public boolean hasGuest(Guest guest) {","lastModifiedDate":"2022-10-01"},{"lineNumber":65,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(guest);","lastModifiedDate":"2022-10-01"},{"lineNumber":66,"author":{"gitId":"bryanhce"},"content":"        return guests.contains(guest);","lastModifiedDate":"2022-10-01"},{"lineNumber":67,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":68,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":69,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"kangzongxian"},"content":"     * Returns true if a guest with the same room as {@code guest} exists in the guest book.","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"kangzongxian"},"content":"    public boolean hasSameRoom(Guest guest) {","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"kangzongxian"},"content":"        requireNonNull(guest);","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"kangzongxian"},"content":"        return guests.hasSameRoom(guest);","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":78,"author":{"gitId":"bryanhce"},"content":"     * Adds a guest to the guest book.","lastModifiedDate":"2022-10-01"},{"lineNumber":79,"author":{"gitId":"bryanhce"},"content":"     * The guest must not already exist in the guest book.","lastModifiedDate":"2022-10-01"},{"lineNumber":80,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":81,"author":{"gitId":"bryanhce"},"content":"    public void addGuest(Guest p) {","lastModifiedDate":"2022-10-01"},{"lineNumber":82,"author":{"gitId":"bryanhce"},"content":"        guests.add(p);","lastModifiedDate":"2022-10-01"},{"lineNumber":83,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":84,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":85,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":86,"author":{"gitId":"bryanhce"},"content":"     * Replaces the given guest {@code target} in the list with {@code editedGuest}.","lastModifiedDate":"2022-10-01"},{"lineNumber":87,"author":{"gitId":"bryanhce"},"content":"     * {@code target} must exist in the guest book.","lastModifiedDate":"2022-10-01"},{"lineNumber":88,"author":{"gitId":"bryanhce"},"content":"     * The guest identity of {@code editedGuest} must not be the same as another existing guest in the guest book.","lastModifiedDate":"2022-10-01"},{"lineNumber":89,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":90,"author":{"gitId":"bryanhce"},"content":"    public void setGuest(Guest target, Guest editedGuest) {","lastModifiedDate":"2022-10-01"},{"lineNumber":91,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(editedGuest);","lastModifiedDate":"2022-10-01"},{"lineNumber":92,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":93,"author":{"gitId":"bryanhce"},"content":"        guests.setGuest(target, editedGuest);","lastModifiedDate":"2022-10-01"},{"lineNumber":94,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":95,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":96,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":97,"author":{"gitId":"bryanhce"},"content":"     * Removes {@code key} from this {@code GuestList}.","lastModifiedDate":"2022-10-01"},{"lineNumber":98,"author":{"gitId":"bryanhce"},"content":"     * {@code key} must exist in the guest book.","lastModifiedDate":"2022-10-01"},{"lineNumber":99,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":100,"author":{"gitId":"bryanhce"},"content":"    public void removeGuest(Guest key) {","lastModifiedDate":"2022-10-01"},{"lineNumber":101,"author":{"gitId":"bryanhce"},"content":"        guests.remove(key);","lastModifiedDate":"2022-10-01"},{"lineNumber":102,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":103,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":104,"author":{"gitId":"bryanhce"},"content":"    //// util methods","lastModifiedDate":"2022-10-01"},{"lineNumber":105,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":106,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":107,"author":{"gitId":"bryanhce"},"content":"    public String toString() {","lastModifiedDate":"2022-10-01"},{"lineNumber":108,"author":{"gitId":"bryanhce"},"content":"        return guests.asUnmodifiableObservableList().size() + \" guests\";","lastModifiedDate":"2022-10-01"},{"lineNumber":109,"author":{"gitId":"bryanhce"},"content":"        // TODO: refine later","lastModifiedDate":"2022-10-01"},{"lineNumber":110,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":111,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":112,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":113,"author":{"gitId":"bryanhce"},"content":"    public ObservableList\u003cGuest\u003e getGuestList() {","lastModifiedDate":"2022-10-01"},{"lineNumber":114,"author":{"gitId":"bryanhce"},"content":"        return guests.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-01"},{"lineNumber":115,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":116,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":117,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":118,"author":{"gitId":"bryanhce"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-01"},{"lineNumber":119,"author":{"gitId":"bryanhce"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-01"},{"lineNumber":120,"author":{"gitId":"bryanhce"},"content":"                || (other instanceof GuestBook // instanceof handles nulls","lastModifiedDate":"2022-10-01"},{"lineNumber":121,"author":{"gitId":"bryanhce"},"content":"                \u0026\u0026 guests.equals(((GuestBook) other).guests));","lastModifiedDate":"2022-10-01"},{"lineNumber":122,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":123,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":124,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":125,"author":{"gitId":"bryanhce"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-01"},{"lineNumber":126,"author":{"gitId":"bryanhce"},"content":"        return guests.hashCode();","lastModifiedDate":"2022-10-01"},{"lineNumber":127,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":128,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"kangzongxian":8,"Lan-Jingbo":1,"bryanhce":119}},{"path":"src/main/java/seedu/guest/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.GuiSettings;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"/**","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":" * The API of the Model component.","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":" */","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"public interface Model {","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"    Predicate\u003cGuest\u003e PREDICATE_SHOW_ALL_GUESTS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"     * Returns the user prefs.","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"bryanhce"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"bryanhce"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"     * Returns the user prefs\u0027 guest book file path.","lastModifiedDate":"2022-10-01"},{"lineNumber":39,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"    Path getGuestBookFilePath();","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"bryanhce"},"content":"     * Sets the user prefs\u0027 guest book file path.","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"    void setGuestBookFilePath(Path guestListFilePath);","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":47,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":48,"author":{"gitId":"bryanhce"},"content":"     * Replaces guest book data with the data in {@code guestList}.","lastModifiedDate":"2022-10-01"},{"lineNumber":49,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":50,"author":{"gitId":"bryanhce"},"content":"    void setGuestBook(ReadOnlyGuestBook guestList);","lastModifiedDate":"2022-10-01"},{"lineNumber":51,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":52,"author":{"gitId":"bryanhce"},"content":"    /** Returns the GuestList */","lastModifiedDate":"2022-10-01"},{"lineNumber":53,"author":{"gitId":"bryanhce"},"content":"    ReadOnlyGuestBook getGuestBook();","lastModifiedDate":"2022-10-01"},{"lineNumber":54,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":55,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":56,"author":{"gitId":"bryanhce"},"content":"     * Returns true if a guest with the same identity as {@code guest} exists in the guest book.","lastModifiedDate":"2022-10-01"},{"lineNumber":57,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":58,"author":{"gitId":"bryanhce"},"content":"    boolean hasGuest(Guest guest);","lastModifiedDate":"2022-10-01"},{"lineNumber":59,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":60,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"kangzongxian"},"content":"     * Returns true if a guest with the same room as {@code guest} exists in the guest book.","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"kangzongxian"},"content":"    boolean hasSameRoom(Guest toAdd);","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":66,"author":{"gitId":"bryanhce"},"content":"     * Deletes the given guest.","lastModifiedDate":"2022-10-01"},{"lineNumber":67,"author":{"gitId":"bryanhce"},"content":"     * The guest must exist in the guest book.","lastModifiedDate":"2022-10-01"},{"lineNumber":68,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":69,"author":{"gitId":"bryanhce"},"content":"    void deleteGuest(Guest target);","lastModifiedDate":"2022-10-01"},{"lineNumber":70,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":71,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":72,"author":{"gitId":"bryanhce"},"content":"     * Adds the given guest.","lastModifiedDate":"2022-10-01"},{"lineNumber":73,"author":{"gitId":"bryanhce"},"content":"     * {@code guest} must not already exist in the guest book.","lastModifiedDate":"2022-10-01"},{"lineNumber":74,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":75,"author":{"gitId":"bryanhce"},"content":"    void addGuest(Guest guest);","lastModifiedDate":"2022-10-01"},{"lineNumber":76,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":77,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":78,"author":{"gitId":"bryanhce"},"content":"     * Replaces the given guest {@code target} with {@code editedGuest}.","lastModifiedDate":"2022-10-01"},{"lineNumber":79,"author":{"gitId":"bryanhce"},"content":"     * {@code target} must exist in the guest book.","lastModifiedDate":"2022-10-01"},{"lineNumber":80,"author":{"gitId":"bryanhce"},"content":"     * The guest identity of {@code editedGuest} must not be the same as another existing guest in the guest book.","lastModifiedDate":"2022-10-01"},{"lineNumber":81,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":82,"author":{"gitId":"bryanhce"},"content":"    void setGuest(Guest target, Guest editedGuest);","lastModifiedDate":"2022-10-01"},{"lineNumber":83,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":84,"author":{"gitId":"bryanhce"},"content":"    /** Returns an unmodifiable view of the filtered guest list */","lastModifiedDate":"2022-10-01"},{"lineNumber":85,"author":{"gitId":"bryanhce"},"content":"    ObservableList\u003cGuest\u003e getFilteredGuestList();","lastModifiedDate":"2022-10-01"},{"lineNumber":86,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":87,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":88,"author":{"gitId":"bryanhce"},"content":"     * Updates the filter of the filtered guest book to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-01"},{"lineNumber":89,"author":{"gitId":"bryanhce"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-01"},{"lineNumber":90,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":91,"author":{"gitId":"bryanhce"},"content":"    void updateFilteredGuestList(Predicate\u003cGuest\u003e predicate);","lastModifiedDate":"2022-10-01"},{"lineNumber":92,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"kangzongxian":5,"bryanhce":87}},{"path":"src/main/java/seedu/guest/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.GuiSettings;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.LogsCenter;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"/**","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":" * Represents the in-memory model of the guest book data.","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":" */","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"    private final GuestBook guestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"    private final FilteredList\u003cGuest\u003e filteredGuests;","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"     * Initializes a ModelManager with the given guestList and userPrefs.","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"    public ModelManager(ReadOnlyGuestBook guestList, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"        requireAllNonNull(guestList, userPrefs);","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"        logger.fine(\"Initializing with guest book: \" + guestList + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"        this.guestBook \u003d new GuestBook(guestList);","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"bryanhce"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"        filteredGuests \u003d new FilteredList\u003c\u003e(this.guestBook.getGuestList());","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":39,"author":{"gitId":"bryanhce"},"content":"    public ModelManager() {","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"        this(new GuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"bryanhce"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"bryanhce"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-01"},{"lineNumber":47,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2022-10-01"},{"lineNumber":48,"author":{"gitId":"bryanhce"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2022-10-01"},{"lineNumber":49,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":50,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":51,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":52,"author":{"gitId":"bryanhce"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-01"},{"lineNumber":53,"author":{"gitId":"bryanhce"},"content":"        return userPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":54,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":55,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":56,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":57,"author":{"gitId":"bryanhce"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-10-01"},{"lineNumber":58,"author":{"gitId":"bryanhce"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2022-10-01"},{"lineNumber":59,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":60,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":61,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":62,"author":{"gitId":"bryanhce"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-10-01"},{"lineNumber":63,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2022-10-01"},{"lineNumber":64,"author":{"gitId":"bryanhce"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2022-10-01"},{"lineNumber":65,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":66,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":67,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":68,"author":{"gitId":"bryanhce"},"content":"    public Path getGuestBookFilePath() {","lastModifiedDate":"2022-10-01"},{"lineNumber":69,"author":{"gitId":"bryanhce"},"content":"        return userPrefs.getGuestBookFilePath();","lastModifiedDate":"2022-10-01"},{"lineNumber":70,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":71,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":72,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":73,"author":{"gitId":"bryanhce"},"content":"    public void setGuestBookFilePath(Path guestListFilePath) {","lastModifiedDate":"2022-10-01"},{"lineNumber":74,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(guestListFilePath);","lastModifiedDate":"2022-10-01"},{"lineNumber":75,"author":{"gitId":"bryanhce"},"content":"        userPrefs.setGuestBookFilePath(guestListFilePath);","lastModifiedDate":"2022-10-01"},{"lineNumber":76,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":77,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":78,"author":{"gitId":"bryanhce"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d GuestList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-01"},{"lineNumber":79,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":80,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":81,"author":{"gitId":"bryanhce"},"content":"    public void setGuestBook(ReadOnlyGuestBook guestList) {","lastModifiedDate":"2022-10-01"},{"lineNumber":82,"author":{"gitId":"bryanhce"},"content":"        this.guestBook.resetData(guestList);","lastModifiedDate":"2022-10-01"},{"lineNumber":83,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":84,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":85,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":86,"author":{"gitId":"bryanhce"},"content":"    public ReadOnlyGuestBook getGuestBook() {","lastModifiedDate":"2022-10-01"},{"lineNumber":87,"author":{"gitId":"bryanhce"},"content":"        return guestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":88,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":89,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":90,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":91,"author":{"gitId":"bryanhce"},"content":"    public boolean hasGuest(Guest guest) {","lastModifiedDate":"2022-10-01"},{"lineNumber":92,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(guest);","lastModifiedDate":"2022-10-01"},{"lineNumber":93,"author":{"gitId":"bryanhce"},"content":"        return guestBook.hasGuest(guest);","lastModifiedDate":"2022-10-01"},{"lineNumber":94,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":95,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":96,"author":{"gitId":"kangzongxian"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"kangzongxian"},"content":"    public boolean hasSameRoom(Guest guest) {","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"kangzongxian"},"content":"        requireNonNull(guest);","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"kangzongxian"},"content":"        return guestBook.hasSameRoom(guest);","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":102,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":103,"author":{"gitId":"bryanhce"},"content":"    public void deleteGuest(Guest target) {","lastModifiedDate":"2022-10-01"},{"lineNumber":104,"author":{"gitId":"bryanhce"},"content":"        guestBook.removeGuest(target);","lastModifiedDate":"2022-10-01"},{"lineNumber":105,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":106,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":107,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":108,"author":{"gitId":"bryanhce"},"content":"    public void addGuest(Guest guest) {","lastModifiedDate":"2022-10-01"},{"lineNumber":109,"author":{"gitId":"bryanhce"},"content":"        guestBook.addGuest(guest);","lastModifiedDate":"2022-10-01"},{"lineNumber":110,"author":{"gitId":"bryanhce"},"content":"        updateFilteredGuestList(PREDICATE_SHOW_ALL_GUESTS);","lastModifiedDate":"2022-10-01"},{"lineNumber":111,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":112,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":113,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":114,"author":{"gitId":"bryanhce"},"content":"    public void setGuest(Guest target, Guest editedGuest) {","lastModifiedDate":"2022-10-01"},{"lineNumber":115,"author":{"gitId":"bryanhce"},"content":"        requireAllNonNull(target, editedGuest);","lastModifiedDate":"2022-10-01"},{"lineNumber":116,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":117,"author":{"gitId":"bryanhce"},"content":"        guestBook.setGuest(target, editedGuest);","lastModifiedDate":"2022-10-01"},{"lineNumber":118,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":119,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":120,"author":{"gitId":"bryanhce"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Guest List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-01"},{"lineNumber":121,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":122,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":123,"author":{"gitId":"bryanhce"},"content":"     * Returns an unmodifiable view of the list of {@code Guest} backed by the internal list of","lastModifiedDate":"2022-10-01"},{"lineNumber":124,"author":{"gitId":"bryanhce"},"content":"     * {@code versionedGuestList}","lastModifiedDate":"2022-10-01"},{"lineNumber":125,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":126,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":127,"author":{"gitId":"bryanhce"},"content":"    public ObservableList\u003cGuest\u003e getFilteredGuestList() {","lastModifiedDate":"2022-10-01"},{"lineNumber":128,"author":{"gitId":"bryanhce"},"content":"        return filteredGuests;","lastModifiedDate":"2022-10-01"},{"lineNumber":129,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":130,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":131,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":132,"author":{"gitId":"bryanhce"},"content":"    public void updateFilteredGuestList(Predicate\u003cGuest\u003e predicate) {","lastModifiedDate":"2022-10-01"},{"lineNumber":133,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-01"},{"lineNumber":134,"author":{"gitId":"bryanhce"},"content":"        filteredGuests.setPredicate(predicate);","lastModifiedDate":"2022-10-01"},{"lineNumber":135,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":136,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":137,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":138,"author":{"gitId":"bryanhce"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-10-01"},{"lineNumber":139,"author":{"gitId":"bryanhce"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-01"},{"lineNumber":140,"author":{"gitId":"bryanhce"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-10-01"},{"lineNumber":141,"author":{"gitId":"bryanhce"},"content":"            return true;","lastModifiedDate":"2022-10-01"},{"lineNumber":142,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-01"},{"lineNumber":143,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":144,"author":{"gitId":"bryanhce"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-01"},{"lineNumber":145,"author":{"gitId":"bryanhce"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2022-10-01"},{"lineNumber":146,"author":{"gitId":"bryanhce"},"content":"            return false;","lastModifiedDate":"2022-10-01"},{"lineNumber":147,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-01"},{"lineNumber":148,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":149,"author":{"gitId":"bryanhce"},"content":"        // state check","lastModifiedDate":"2022-10-01"},{"lineNumber":150,"author":{"gitId":"bryanhce"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2022-10-01"},{"lineNumber":151,"author":{"gitId":"bryanhce"},"content":"        return guestBook.equals(other.guestBook)","lastModifiedDate":"2022-10-01"},{"lineNumber":152,"author":{"gitId":"bryanhce"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2022-10-01"},{"lineNumber":153,"author":{"gitId":"bryanhce"},"content":"                \u0026\u0026 filteredGuests.equals(other.filteredGuests);","lastModifiedDate":"2022-10-01"},{"lineNumber":154,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":155,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":156,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"kangzongxian":6,"bryanhce":150}},{"path":"src/main/java/seedu/guest/model/ReadOnlyGuestBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"/**","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":" * Unmodifiable view of a guest book","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":" */","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"public interface ReadOnlyGuestBook {","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"     * Returns an unmodifiable view of the guests list.","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"     * This list will not contain any duplicate guests.","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"    ObservableList\u003cGuest\u003e getGuestList();","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"bryanhce":17}},{"path":"src/main/java/seedu/guest/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.GuiSettings;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"    Path getGuestBookFilePath();","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"bryanhce":3,"-":13}},{"path":"src/main/java/seedu/guest/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.GuiSettings;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"    private Path guestBookFilePath \u003d Paths.get(\"data\" , \"guestbook.json\");","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"        setGuestBookFilePath(newUserPrefs.getGuestBookFilePath());","lastModifiedDate":"2022-10-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"bryanhce"},"content":"    public Path getGuestBookFilePath() {","lastModifiedDate":"2022-10-01"},{"lineNumber":51,"author":{"gitId":"bryanhce"},"content":"        return guestBookFilePath;","lastModifiedDate":"2022-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"bryanhce"},"content":"    public void setGuestBookFilePath(Path guestBookFilePath) {","lastModifiedDate":"2022-10-01"},{"lineNumber":55,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(guestBookFilePath);","lastModifiedDate":"2022-10-01"},{"lineNumber":56,"author":{"gitId":"bryanhce"},"content":"        this.guestBookFilePath \u003d guestBookFilePath;","lastModifiedDate":"2022-10-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"bryanhce"},"content":"                \u0026\u0026 guestBookFilePath.equals(o.guestBookFilePath);","lastModifiedDate":"2022-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"bryanhce"},"content":"        return Objects.hash(guiSettings, guestBookFilePath);","lastModifiedDate":"2022-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"bryanhce"},"content":"        sb.append(\"\\nLocal data file location : \" + guestBookFilePath);","lastModifiedDate":"2022-10-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanhce":12,"-":75}},{"path":"src/main/java/seedu/guest/model/guest/Bill.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinPeng13"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"JustinPeng13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"JustinPeng13"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"JustinPeng13"},"content":" * Represents any additional amount of money owed by the Guest in the guest book.","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"JustinPeng13"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBill(String)}","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"JustinPeng13"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"JustinPeng13"},"content":"public class Bill {","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"JustinPeng13"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"JustinPeng13"},"content":"            \"Bills should only contain numerical digits, one decimal point (.), and one leading plus (+) or minus (-) \"","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"JustinPeng13"},"content":"                    + \"sign.\\n\"","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"JustinPeng13"},"content":"                    + \"If a decimal point is used, there can be up to 2 digits after it (e.g., 2.5, 9.99).\\n\"","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"JustinPeng13"},"content":"                    + \"If no sign is used, the value is assumed to be positive.\";","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"JustinPeng13"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[-+]?(\\\\d+(\\\\.\\\\d{0,2})?|\\\\d*\\\\.\\\\d{1,2})$\";","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"JustinPeng13"},"content":"    public final String value;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"JustinPeng13"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"JustinPeng13"},"content":"     * Constructs an initial {@code Bill} with a value of 0.00.","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"JustinPeng13"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"JustinPeng13"},"content":"    public Bill() {","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"JustinPeng13"},"content":"        value \u003d \"0.00\";","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"JustinPeng13"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"JustinPeng13"},"content":"     * Constructs a {@code Bill}.","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"JustinPeng13"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"JustinPeng13"},"content":"     * @param bill A valid amount of money.","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"JustinPeng13"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"JustinPeng13"},"content":"    public Bill(String bill) {","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"JustinPeng13"},"content":"        requireNonNull(bill);","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"JustinPeng13"},"content":"        checkArgument(isValidBill(bill), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"JustinPeng13"},"content":"        value \u003d String.format(\"%.2f\", Double.parseDouble(bill));","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"JustinPeng13"},"content":"    public double getValue() {","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"JustinPeng13"},"content":"        return Double.parseDouble(value);","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"JustinPeng13"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"JustinPeng13"},"content":"     * Returns true if a given string is a valid bill amount.","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"JustinPeng13"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"JustinPeng13"},"content":"    public static boolean isValidBill(String test) {","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"JustinPeng13"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"JustinPeng13"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"JustinPeng13"},"content":"     * Returns a {@code Bill} containing the sum of values.","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"JustinPeng13"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"JustinPeng13"},"content":"    public Bill add(Bill addend) {","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"JustinPeng13"},"content":"        return new Bill(String.format(\"%.2f\", getValue() + addend.getValue()));","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"JustinPeng13"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"JustinPeng13"},"content":"    public String toString() {","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"JustinPeng13"},"content":"        return value;","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"JustinPeng13"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"JustinPeng13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"JustinPeng13"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"JustinPeng13"},"content":"                || (other instanceof Bill // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"JustinPeng13"},"content":"                \u0026\u0026 value.equals(((Bill) other).value)); // state check","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"JustinPeng13"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"JustinPeng13"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"JustinPeng13"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"JustinPeng13"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"JustinPeng13":73}},{"path":"src/main/java/seedu/guest/model/guest/DateRange.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinPeng13"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"JustinPeng13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"JustinPeng13"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"JustinPeng13"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"JustinPeng13"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"JustinPeng13"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"JustinPeng13"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"JustinPeng13"},"content":" * Represents the dates that a Guest is staying at the hotel for.","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"JustinPeng13"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDateRange(String)}","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"JustinPeng13"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"JustinPeng13"},"content":"public class DateRange {","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"JustinPeng13"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"JustinPeng13"},"content":"            \"DateRanges should contain only numbers, hyphens, backslashes, and spaces.\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"JustinPeng13"},"content":"                    + \"They must follow the format \\\"dd/MM/yy - dd/MM/yy\\\" and the second date \"","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"JustinPeng13"},"content":"                    + \"must be later than the first date.\";","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"JustinPeng13"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/uu\")","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"JustinPeng13"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"JustinPeng13"},"content":"    public final String value;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"JustinPeng13"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"JustinPeng13"},"content":"     * Constructs a {@code DateRange}.","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"JustinPeng13"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"JustinPeng13"},"content":"     * @param dateRange A valid date range.","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"JustinPeng13"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"JustinPeng13"},"content":"    public DateRange(String dateRange) {","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"JustinPeng13"},"content":"        requireNonNull(dateRange);","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"JustinPeng13"},"content":"        checkArgument(isValidDateRange(dateRange), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"JustinPeng13"},"content":"        value \u003d dateRange;","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"JustinPeng13"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"JustinPeng13"},"content":"     * Returns true if a given string is a valid date range.","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"JustinPeng13"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"JustinPeng13"},"content":"    public static boolean isValidDateRange(String test) {","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"JustinPeng13"},"content":"        try {","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"JustinPeng13"},"content":"            String[] dates \u003d test.split(\" - \");","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"JustinPeng13"},"content":"            if (dates.length !\u003d 2) {","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"JustinPeng13"},"content":"                return false;","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"JustinPeng13"},"content":"            }","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"JustinPeng13"},"content":"            LocalDate checkInDate \u003d LocalDate.parse(dates[0], DATE_TIME_FORMATTER);","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"JustinPeng13"},"content":"            LocalDate checkOutDate \u003d LocalDate.parse(dates[1], DATE_TIME_FORMATTER);","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"JustinPeng13"},"content":"            return checkOutDate.isAfter(checkInDate);","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"JustinPeng13"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"JustinPeng13"},"content":"            return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"JustinPeng13"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"JustinPeng13"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"JustinPeng13"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"JustinPeng13"},"content":"        return value;","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"JustinPeng13"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"JustinPeng13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"JustinPeng13"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"JustinPeng13"},"content":"                || (other instanceof DateRange // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"JustinPeng13"},"content":"                \u0026\u0026 value.equals(((DateRange) other).value)); // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"JustinPeng13"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"JustinPeng13"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"JustinPeng13"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"JustinPeng13"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"JustinPeng13":70}},{"path":"src/main/java/seedu/guest/model/guest/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":" * Represents a Guest\u0027s email in the guest book.","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"JustinPeng13"},"content":"    // length constraints","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"JustinPeng13"},"content":"    private static final int MAX_LOCAL_LENGTH \u003d 64;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"JustinPeng13"},"content":"    private static final int MAX_DOMAIN_LENGTH \u003d 255;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"JustinPeng13"},"content":"    private static final int MIN_END_DOMAIN_LABEL_LENGTH \u003d 2;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"JustinPeng13"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"JustinPeng13"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"JustinPeng13"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"JustinPeng13"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"JustinPeng13"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"JustinPeng13"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"JustinPeng13"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"JustinPeng13"},"content":"            \"(\" + DOMAIN_PART_REGEX + \"){\" + MIN_END_DOMAIN_LABEL_LENGTH + \",}$\"; // At least two chars","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"JustinPeng13"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"JustinPeng13"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"JustinPeng13"},"content":"            + \"characters and must be at most \" + MAX_LOCAL_LENGTH + \" characters long.\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":37,"author":{"gitId":"JustinPeng13"},"content":"            + \"    - end with a domain label at least \" + MIN_END_DOMAIN_LABEL_LENGTH + \" characters long\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":39,"author":{"gitId":"JustinPeng13"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"JustinPeng13"},"content":"            + \"    - be at most \" + MAX_DOMAIN_LENGTH + \" characters long.\";","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"JustinPeng13"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"JustinPeng13"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.split(\"@\")[0].length() \u003c\u003d MAX_LOCAL_LENGTH","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"JustinPeng13"},"content":"                \u0026\u0026 test.split(\"@\")[1].length() \u003c\u003d MAX_DOMAIN_LENGTH;","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bryanhce":3,"-":54,"JustinPeng13":23}},{"path":"src/main/java/seedu/guest/model/guest/Guest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":" * Represents a Guest in the guest book.","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"public class Guest {","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"    private final Room room;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"JustinPeng13"},"content":"    private final DateRange dateRange;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"jehousoh"},"content":"    private final NumberOfGuests numberOfGuests;","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"    private final IsRoomClean isRoomClean;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinPeng13"},"content":"    private final Bill bill;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"Lan-Jingbo"},"content":"    private final Request request;","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"    public Guest(Name name, Phone phone, Email email, Room room, DateRange dateRange,","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Lan-Jingbo"},"content":"                 NumberOfGuests numberOfGuests, IsRoomClean isRoomClean, Bill bill, Request request) {","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"Lan-Jingbo"},"content":"        requireAllNonNull(name, phone, email, dateRange, numberOfGuests, isRoomClean, bill, request);","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"        this.room \u003d room;","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"JustinPeng13"},"content":"        this.dateRange \u003d dateRange;","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"jehousoh"},"content":"        this.numberOfGuests \u003d numberOfGuests;","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"        this.isRoomClean \u003d isRoomClean;","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinPeng13"},"content":"        this.bill \u003d bill;","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"Lan-Jingbo"},"content":"        this.request \u003d request;","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"kangzongxian"},"content":"    public Room getRoom() {","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"kangzongxian"},"content":"        return room;","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"JustinPeng13"},"content":"    public DateRange getDateRange() {","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"JustinPeng13"},"content":"        return dateRange;","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"jehousoh"},"content":"    public NumberOfGuests getNumberOfGuests() {","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"jehousoh"},"content":"        return numberOfGuests;","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"bryanhce"},"content":"    public IsRoomClean getIsRoomClean() {","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"bryanhce"},"content":"        return isRoomClean;","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"JustinPeng13"},"content":"    public Bill getBill() {","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"JustinPeng13"},"content":"        return bill;","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"Lan-Jingbo"},"content":"    public Request getRequest() {","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"Lan-Jingbo"},"content":"        return request;","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"Lan-Jingbo"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":78,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"bryanhce"},"content":"     * Returns true if both guests have the same name.","lastModifiedDate":"2022-10-01"},{"lineNumber":81,"author":{"gitId":"bryanhce"},"content":"     * This defines a weaker notion of equality between two guests.","lastModifiedDate":"2022-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"bryanhce"},"content":"    public boolean isSameGuest(Guest otherGuest) {","lastModifiedDate":"2022-10-01"},{"lineNumber":84,"author":{"gitId":"bryanhce"},"content":"        if (otherGuest \u003d\u003d this) {","lastModifiedDate":"2022-10-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"bryanhce"},"content":"        return otherGuest !\u003d null","lastModifiedDate":"2022-10-01"},{"lineNumber":89,"author":{"gitId":"bryanhce"},"content":"                \u0026\u0026 otherGuest.getName().equals(getName());","lastModifiedDate":"2022-10-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"kangzongxian"},"content":"     * Returns true if both guests have the same room.","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"kangzongxian"},"content":"     * This defines a weaker notion of equality between two guests.","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"kangzongxian"},"content":"    public boolean isSameRoom(Guest otherGuest) {","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"kangzongxian"},"content":"        if (otherGuest \u003d\u003d this) {","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"kangzongxian"},"content":"            return true;","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"kangzongxian"},"content":"        return otherGuest !\u003d null","lastModifiedDate":"2022-10-25"},{"lineNumber":102,"author":{"gitId":"kangzongxian"},"content":"                \u0026\u0026 otherGuest.getRoom().equals(getRoom());","lastModifiedDate":"2022-10-25"},{"lineNumber":103,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"bryanhce"},"content":"     * Returns true if both guests have the same identity and data fields.","lastModifiedDate":"2022-10-01"},{"lineNumber":107,"author":{"gitId":"bryanhce"},"content":"     * This defines a stronger notion of equality between two guests.","lastModifiedDate":"2022-10-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"bryanhce"},"content":"        if (!(other instanceof Guest)) {","lastModifiedDate":"2022-10-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"bryanhce"},"content":"        Guest otherGuest \u003d (Guest) other;","lastModifiedDate":"2022-10-01"},{"lineNumber":121,"author":{"gitId":"bryanhce"},"content":"        return otherGuest.getName().equals(getName())","lastModifiedDate":"2022-10-01"},{"lineNumber":122,"author":{"gitId":"bryanhce"},"content":"                \u0026\u0026 otherGuest.getPhone().equals(getPhone())","lastModifiedDate":"2022-10-01"},{"lineNumber":123,"author":{"gitId":"bryanhce"},"content":"                \u0026\u0026 otherGuest.getEmail().equals(getEmail())","lastModifiedDate":"2022-10-01"},{"lineNumber":124,"author":{"gitId":"kangzongxian"},"content":"                \u0026\u0026 otherGuest.getRoom().equals(getRoom())","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"JustinPeng13"},"content":"                \u0026\u0026 otherGuest.getDateRange().equals(getDateRange())","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"bryanhce"},"content":"                \u0026\u0026 otherGuest.getNumberOfGuests().equals(getNumberOfGuests())","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"JustinPeng13"},"content":"                \u0026\u0026 otherGuest.getIsRoomClean().equals(getIsRoomClean())","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"Lan-Jingbo"},"content":"                \u0026\u0026 otherGuest.getBill().equals(getBill())","lastModifiedDate":"2022-10-18"},{"lineNumber":129,"author":{"gitId":"Lan-Jingbo"},"content":"                \u0026\u0026 otherGuest.getRequest().equals(getRequest());","lastModifiedDate":"2022-10-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"Lan-Jingbo"},"content":"        return Objects.hash(name, phone, email, dateRange, numberOfGuests, isRoomClean, bill, request);","lastModifiedDate":"2022-10-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"kangzongxian"},"content":"                .append(\"; Room: \")","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"kangzongxian"},"content":"                .append(getRoom())","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"JustinPeng13"},"content":"                .append(\"; Date Range: \")","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"JustinPeng13"},"content":"                .append(getDateRange())","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"jehousoh"},"content":"                .append(\"; No. of Guests: \")","lastModifiedDate":"2022-10-04"},{"lineNumber":151,"author":{"gitId":"bryanhce"},"content":"                .append(getNumberOfGuests())","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"bryanhce"},"content":"                .append(\"; Is Room Clean: \")","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"JustinPeng13"},"content":"                .append(getIsRoomClean())","lastModifiedDate":"2022-10-15"},{"lineNumber":154,"author":{"gitId":"JustinPeng13"},"content":"                .append(\"; Bill: \")","lastModifiedDate":"2022-10-15"},{"lineNumber":155,"author":{"gitId":"Lan-Jingbo"},"content":"                .append(getBill())","lastModifiedDate":"2022-10-18"},{"lineNumber":156,"author":{"gitId":"Lan-Jingbo"},"content":"                .append(\"; Request: \")","lastModifiedDate":"2022-10-18"},{"lineNumber":157,"author":{"gitId":"Lan-Jingbo"},"content":"                .append(getRequest());","lastModifiedDate":"2022-10-18"},{"lineNumber":158,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kangzongxian":24,"jehousoh":8,"Lan-Jingbo":14,"bryanhce":26,"-":71,"JustinPeng13":18}},{"path":"src/main/java/seedu/guest/model/guest/GuestContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jehousoh"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"jehousoh"},"content":"import java.util.List;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"jehousoh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.commons.util.StringUtil;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"jehousoh"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"jehousoh"},"content":" * Tests that a {@code Guest}\u0027s details matches any of the keywords given.","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"jehousoh"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"jehousoh"},"content":"public class GuestContainsKeywordsPredicate implements Predicate\u003cGuest\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"jehousoh"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"jehousoh"},"content":"    public GuestContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"jehousoh"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"jehousoh"},"content":"    private boolean compareWord(String sentence) {","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"jehousoh"},"content":"        return keywords.stream().anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(sentence, keyword));","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"jehousoh"},"content":"    private boolean compareDate(String sentence) {","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"jehousoh"},"content":"        return keywords.stream().anyMatch(keyword -\u003e StringUtil.containsDateIgnoreHyphenIgnoreSpace(sentence,","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"jehousoh"},"content":"                keyword));","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"jehousoh"},"content":"    private boolean compareIsRoomClean(String sentence) {","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"jehousoh"},"content":"        return keywords.stream().anyMatch(keyword -\u003e StringUtil.containsIsRoomCleanIgnoreCase(sentence,","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"jehousoh"},"content":"                keyword));","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"jehousoh"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"jehousoh"},"content":"    public boolean test(Guest guest) {","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"jehousoh"},"content":"        return compareWord(guest.getName().fullName)","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"jehousoh"},"content":"                || compareWord(guest.getPhone().toString())","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"jehousoh"},"content":"                || compareWord(guest.getEmail().toString())","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"jehousoh"},"content":"                || compareWord(guest.getRoom().toString())","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"jehousoh"},"content":"                || compareWord(guest.getNumberOfGuests().toString())","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"jehousoh"},"content":"                || compareWord(guest.getBill().toString())","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"jehousoh"},"content":"                || compareWord(guest.getRequest().toString())","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"jehousoh"},"content":"                || compareIsRoomClean(guest.getIsRoomClean().toString())","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"jehousoh"},"content":"                || compareDate(guest.getDateRange().toString());","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"jehousoh"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"jehousoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"jehousoh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"jehousoh"},"content":"                || (other instanceof GuestContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"jehousoh"},"content":"                \u0026\u0026 keywords.equals(((GuestContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"jehousoh"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jehousoh":52}},{"path":"src/main/java/seedu/guest/model/guest/IsRoomClean.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":" * Represents the boolean status if the guest\u0027s room is cleaned.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidIsRoomClean(String)}","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"public class IsRoomClean {","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"            \"IsRoomClean field should only contain any case-insensitive versions of the strings\"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"                    + \"\\\"yes\\\", \\\"no\\\", \\\"y\\\" or \\\"n\\\".\";","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"    public static final String VALIDATION_REGEX \u003d \"^yes$|^no$|^y$|^n$\";","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"    public static final String DEFAULT_IS_ROOM_CLEAN \u003d \"yes\";","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"    public final String value;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"     * Constructs a {@code IsRoomClean}.","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"     * @param isRoomClean A valid isRoomClean.","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"    public IsRoomClean(String isRoomClean) {","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(isRoomClean);","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"        checkArgument(isValidIsRoomClean(isRoomClean), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"        value \u003d standardiseIsRoomClean(isRoomClean);","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"     * Returns true if a given string is a valid isRoomClean.","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"bryanhce"},"content":"    public static boolean isValidIsRoomClean(String test) {","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"        String testToLower \u003d test.toLowerCase();","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"bryanhce"},"content":"        return testToLower.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"bryanhce"},"content":"     * Returns standardised notation of the isRoomClean field.","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"bryanhce"},"content":"     * @param status a valid isRoomClean.","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"bryanhce"},"content":"    private String standardiseIsRoomClean(String status) {","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(status);","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"        assert isValidIsRoomClean(status);","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"bryanhce"},"content":"        String statusToLower \u003d status.toLowerCase();","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"bryanhce"},"content":"        String standardisedRoomUnclean \u003d \"no\";","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"bryanhce"},"content":"        String standardisedRoomClean \u003d \"yes\";","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"bryanhce"},"content":"        String abbreviatedRoomUnclean \u003d \"n\";","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"bryanhce"},"content":"        if (statusToLower.equals(abbreviatedRoomUnclean) || statusToLower.equals(standardisedRoomUnclean)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"bryanhce"},"content":"            return standardisedRoomUnclean;","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"bryanhce"},"content":"        } else {","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"bryanhce"},"content":"            return standardisedRoomClean;","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"bryanhce"},"content":"    public String toString() {","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"bryanhce"},"content":"        return value;","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"bryanhce"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"bryanhce"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"bryanhce"},"content":"                || (other instanceof IsRoomClean // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"bryanhce"},"content":"                \u0026\u0026 value.equals(((IsRoomClean) other).value)); // state check","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"bryanhce"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"bryanhce"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"bryanhce":76}},{"path":"src/main/java/seedu/guest/model/guest/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":" * Represents a Guest\u0027s name in the guest book.","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"JustinPeng13"},"content":"            \"Names should only contain alphanumeric characters and spaces, apostrophes (\u0027), hyphens (-), periods (.), \"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"JustinPeng13"},"content":"                    + \"and commas.\\nThey must start with an alphanumeric character, and cannot be blank.\";","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"JustinPeng13"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[\\\\p{Alnum}]([\\\\p{Alnum}\u0027,. -])*$\";","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bryanhce":3,"-":54,"JustinPeng13":3}},{"path":"src/main/java/seedu/guest/model/guest/NumberOfGuests.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jehousoh"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"jehousoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"jehousoh"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"jehousoh"},"content":" * Represents the total number of guests a Guest has in the guest book.","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"jehousoh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNumberOfGuests(String)}","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"jehousoh"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"jehousoh"},"content":"public class NumberOfGuests {","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"JustinPeng13"},"content":"    // value constraints","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"JustinPeng13"},"content":"    private static final int MIN_NUM_GUESTS \u003d 1;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"JustinPeng13"},"content":"    private static final int MAX_NUM_GUESTS \u003d 4;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"jehousoh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"JustinPeng13"},"content":"            \"NumberOfGuests should only contain 1 numeric character from \" + MIN_NUM_GUESTS + \" to \"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"JustinPeng13"},"content":"                    + MAX_NUM_GUESTS + \".\";","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"JustinPeng13"},"content":"    public static final String VALIDATION_REGEX \u003d String.format(\"^[%d-%d]$\", MIN_NUM_GUESTS, MAX_NUM_GUESTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"jehousoh"},"content":"    public final String value;","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"jehousoh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"jehousoh"},"content":"     * Constructs a {@code NumberOfGuests}.","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"jehousoh"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"jehousoh"},"content":"     * @param number A valid number of guests.","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"jehousoh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"jehousoh"},"content":"    public NumberOfGuests(String number) {","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"jehousoh"},"content":"        requireNonNull(number);","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"jehousoh"},"content":"        checkArgument(isValidNumberOfGuests(number), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"jehousoh"},"content":"        value \u003d number;","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"jehousoh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"jehousoh"},"content":"     * Returns true if a given string is a valid number of guests.","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"jehousoh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"jehousoh"},"content":"    public static boolean isValidNumberOfGuests(String test) {","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"JustinPeng13"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"jehousoh"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"jehousoh"},"content":"    public String toString() {","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"jehousoh"},"content":"        return value;","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"jehousoh"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"jehousoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"jehousoh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"jehousoh"},"content":"                || (other instanceof NumberOfGuests // instanceof handles nulls","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"jehousoh"},"content":"                \u0026\u0026 value.equals(((NumberOfGuests) other).value)); // state check","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"jehousoh"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"jehousoh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"jehousoh"},"content":"        return value.hashCode();","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"jehousoh"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"jehousoh":49,"JustinPeng13":8}},{"path":"src/main/java/seedu/guest/model/guest/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":" * Represents a Guest\u0027s phone number in the guest book.","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"JustinPeng13"},"content":"    // length constraints","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"JustinPeng13"},"content":"    private static final int MIN_LENGTH \u003d 3;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"JustinPeng13"},"content":"    private static final int MAX_LENGTH \u003d 15;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"JustinPeng13"},"content":"            \"Phone numbers should only contain numeric characters. They must be at least \" + MIN_LENGTH","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"JustinPeng13"},"content":"                    + \" digits and at most \" + MAX_LENGTH + \" digits long.\";","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"JustinPeng13"},"content":"    public static final String VALIDATION_REGEX \u003d String.format(\"\\\\d{%d,%d}\", MIN_LENGTH, MAX_LENGTH);","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bryanhce":3,"-":48,"JustinPeng13":7}},{"path":"src/main/java/seedu/guest/model/guest/Request.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Lan-Jingbo"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"Lan-Jingbo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"Lan-Jingbo"},"content":"import static seedu.guest.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"Lan-Jingbo"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"Lan-Jingbo"},"content":" * Represents the Request of a guest.","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"Lan-Jingbo"},"content":" * Guarantees:","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"Lan-Jingbo"},"content":" * Case 1: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"Lan-Jingbo"},"content":" * Case 2: there are no specific Request.","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"Lan-Jingbo"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"Lan-Jingbo"},"content":"public class Request {","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"JustinPeng13"},"content":"    // length constraints","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"JustinPeng13"},"content":"    private static final int MAX_LENGTH \u003d 500;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"JustinPeng13"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Requests must be at most \" + MAX_LENGTH + \" characters long\";","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"Lan-Jingbo"},"content":"    public final String value;","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"Lan-Jingbo"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"Lan-Jingbo"},"content":"     * Constructs a {@code Request}.","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"Lan-Jingbo"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"Lan-Jingbo"},"content":"    public Request() {","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"Lan-Jingbo"},"content":"        value \u003d \"-\";","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"Lan-Jingbo"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"Lan-Jingbo"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"Lan-Jingbo"},"content":"     * Constructs a {@code Request}.","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"Lan-Jingbo"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"Lan-Jingbo"},"content":"     * @param request the specific Request","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"Lan-Jingbo"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"Lan-Jingbo"},"content":"    public Request(String request) {","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"Lan-Jingbo"},"content":"        requireNonNull(request);","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"Lan-Jingbo"},"content":"        checkArgument(isValidRequest(request), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"Lan-Jingbo"},"content":"        value \u003d request;","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"Lan-Jingbo"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"Lan-Jingbo"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"Lan-Jingbo"},"content":"     * Returns true if a given string is a valid request.","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"Lan-Jingbo"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"Lan-Jingbo"},"content":"    public static boolean isValidRequest(String inputRequest) {","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"JustinPeng13"},"content":"        return (inputRequest.length() \u003c\u003d MAX_LENGTH);","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"Lan-Jingbo"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"Lan-Jingbo"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"Lan-Jingbo"},"content":"     * return the String representation of Request.","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"Lan-Jingbo"},"content":"     * @return String","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"Lan-Jingbo"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"Lan-Jingbo"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"Lan-Jingbo"},"content":"    public String toString() {","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"Lan-Jingbo"},"content":"        return value;","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"Lan-Jingbo"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"Lan-Jingbo"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"Lan-Jingbo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"Lan-Jingbo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"Lan-Jingbo"},"content":"                || (other instanceof Request // instanceof handles nulls","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"Lan-Jingbo"},"content":"                \u0026\u0026 value.equals(((Request) other).value)); // state check","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"Lan-Jingbo"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"Lan-Jingbo"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"Lan-Jingbo"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"Lan-Jingbo"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"Lan-Jingbo"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"Lan-Jingbo"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"Lan-Jingbo":59,"JustinPeng13":6}},{"path":"src/main/java/seedu/guest/model/guest/Room.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":" * Represents the Guest\u0027s room","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRoom(String)}","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"public class Room {","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"JustinPeng13"},"content":"            \"Rooms should only contain alphanumeric characters and hyphens (-). \"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"jehousoh"},"content":"            + \"They cannot start or end with a hyphen. \"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"jehousoh"},"content":"            + \"Hyphens can only be used between 2 alphanumeric characters.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"    // Room contains alphanumeric characters with an optional hyphen only in between, and don\u0027t start with a hyphen","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"    // It can also accept a hyphen as long as it is in between 2 alphanumeric characters","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"    // Solution below adapted from https://stackoverflow.com/questions/51063724/","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"JustinPeng13"},"content":"    private static final String VALIDATION_REGEX \u003d \"^[A-Za-z0-9]+(-?[A-Za-z0-9])+$\";","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"    public final String value;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"     * Constructs a {@code Room}.","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"     * @param roomNumberValue A valid room number.","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"    public Room(String roomNumberValue) {","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"kangzongxian"},"content":"        requireNonNull(roomNumberValue);","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"        checkArgument(isValidRoom(roomNumberValue), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"        value \u003d roomNumberValue;","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"kangzongxian"},"content":"     * Returns true if a given string is a valid room number.","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"kangzongxian"},"content":"    public static boolean isValidRoom(String test) {","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"kangzongxian"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"kangzongxian"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"kangzongxian"},"content":"    public String toString() {","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"kangzongxian"},"content":"        return value;","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"kangzongxian"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"kangzongxian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"kangzongxian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"kangzongxian"},"content":"                || (other instanceof Room // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"kangzongxian"},"content":"                \u0026\u0026 value.equals(((Room) other).value)); // state check","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"kangzongxian"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"kangzongxian"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"kangzongxian"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"kangzongxian":53,"jehousoh":2,"JustinPeng13":3}},{"path":"src/main/java/seedu/guest/model/guest/UniqueGuestList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import java.util.List;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.exceptions.DuplicateGuestException;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.exceptions.GuestNotFoundException;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.model.guest.exceptions.RoomOccupiedException;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"/**","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":" * A list of guests that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":" * A guest is considered unique by comparing using {@code Guest#isSameGuest(Guest)}. As such, adding and updating of","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":" * guests uses Guest#isSameGuest(Guest) for equality so as to ensure that the guest being added or updated is","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":" * unique in terms of identity in the UniqueGuestList. However, the removal of a guest uses Guest#equals(Object) so","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":" * as to ensure that the guest with exactly the same fields will be removed.","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":" *","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":" *","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":" * @see Guest#isSameGuest(Guest)","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":" */","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"public class UniqueGuestList implements Iterable\u003cGuest\u003e {","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"    private final ObservableList\u003cGuest\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"    private final ObservableList\u003cGuest\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"bryanhce"},"content":"     * Returns true if the list contains an equivalent guest as the given argument.","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"bryanhce"},"content":"    public boolean contains(Guest toCheck) {","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"        return internalList.stream().anyMatch(toCheck::isSameGuest);","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":39,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"kangzongxian"},"content":"     * Returns true if the list contains an equivalent guest with the same room as the given argument.","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"kangzongxian"},"content":"    public boolean hasSameRoom(Guest toCheck) {","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"kangzongxian"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"kangzongxian"},"content":"        return internalList.stream().anyMatch(toCheck::isSameRoom);","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":49,"author":{"gitId":"bryanhce"},"content":"     * Adds a guest to the list.","lastModifiedDate":"2022-10-01"},{"lineNumber":50,"author":{"gitId":"bryanhce"},"content":"     * The guest must not already exist in the list.","lastModifiedDate":"2022-10-01"},{"lineNumber":51,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":52,"author":{"gitId":"bryanhce"},"content":"    public void add(Guest toAdd) {","lastModifiedDate":"2022-10-01"},{"lineNumber":53,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-01"},{"lineNumber":54,"author":{"gitId":"bryanhce"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-01"},{"lineNumber":55,"author":{"gitId":"bryanhce"},"content":"            throw new DuplicateGuestException();","lastModifiedDate":"2022-10-01"},{"lineNumber":56,"author":{"gitId":"kangzongxian"},"content":"        } else if (hasSameRoom(toAdd)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"kangzongxian"},"content":"            throw new RoomOccupiedException();","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-01"},{"lineNumber":59,"author":{"gitId":"bryanhce"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-01"},{"lineNumber":60,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":61,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":62,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":63,"author":{"gitId":"bryanhce"},"content":"     * Replaces the guest {@code target} in the list with {@code editedGuest}.","lastModifiedDate":"2022-10-01"},{"lineNumber":64,"author":{"gitId":"bryanhce"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-01"},{"lineNumber":65,"author":{"gitId":"bryanhce"},"content":"     * The guest identity of {@code editedGuest} must not be the same as another existing guest in the list.","lastModifiedDate":"2022-10-01"},{"lineNumber":66,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":67,"author":{"gitId":"bryanhce"},"content":"    public void setGuest(Guest target, Guest editedGuest) {","lastModifiedDate":"2022-10-01"},{"lineNumber":68,"author":{"gitId":"bryanhce"},"content":"        requireAllNonNull(target, editedGuest);","lastModifiedDate":"2022-10-01"},{"lineNumber":69,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":70,"author":{"gitId":"bryanhce"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-01"},{"lineNumber":71,"author":{"gitId":"bryanhce"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-01"},{"lineNumber":72,"author":{"gitId":"bryanhce"},"content":"            throw new GuestNotFoundException();","lastModifiedDate":"2022-10-01"},{"lineNumber":73,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-01"},{"lineNumber":74,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":75,"author":{"gitId":"bryanhce"},"content":"        if (!target.isSameGuest(editedGuest) \u0026\u0026 contains(editedGuest)) {","lastModifiedDate":"2022-10-01"},{"lineNumber":76,"author":{"gitId":"bryanhce"},"content":"            throw new DuplicateGuestException();","lastModifiedDate":"2022-10-01"},{"lineNumber":77,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"kangzongxian"},"content":"        } else if (!target.getRoom().equals(editedGuest.getRoom()) \u0026\u0026 hasSameRoom(editedGuest)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"kangzongxian"},"content":"            // Only check for room equality if the guest\u0027s room has been edited","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"kangzongxian"},"content":"            throw new RoomOccupiedException();","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-01"},{"lineNumber":82,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":83,"author":{"gitId":"bryanhce"},"content":"        internalList.set(index, editedGuest);","lastModifiedDate":"2022-10-01"},{"lineNumber":84,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":85,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":86,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":87,"author":{"gitId":"bryanhce"},"content":"     * Removes the equivalent guest from the list.","lastModifiedDate":"2022-10-01"},{"lineNumber":88,"author":{"gitId":"bryanhce"},"content":"     * The guest must exist in the list.","lastModifiedDate":"2022-10-01"},{"lineNumber":89,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":90,"author":{"gitId":"bryanhce"},"content":"    public void remove(Guest toRemove) {","lastModifiedDate":"2022-10-01"},{"lineNumber":91,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-01"},{"lineNumber":92,"author":{"gitId":"bryanhce"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-01"},{"lineNumber":93,"author":{"gitId":"bryanhce"},"content":"            throw new GuestNotFoundException();","lastModifiedDate":"2022-10-01"},{"lineNumber":94,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-01"},{"lineNumber":95,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":96,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":97,"author":{"gitId":"bryanhce"},"content":"    public void setGuests(UniqueGuestList replacement) {","lastModifiedDate":"2022-10-01"},{"lineNumber":98,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-01"},{"lineNumber":99,"author":{"gitId":"bryanhce"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-01"},{"lineNumber":100,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":101,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":102,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":103,"author":{"gitId":"bryanhce"},"content":"     * Replaces the contents of this list with {@code guests}.","lastModifiedDate":"2022-10-01"},{"lineNumber":104,"author":{"gitId":"bryanhce"},"content":"     * {@code guests} must not contain duplicate guests.","lastModifiedDate":"2022-10-01"},{"lineNumber":105,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":106,"author":{"gitId":"bryanhce"},"content":"    public void setGuests(List\u003cGuest\u003e guests) {","lastModifiedDate":"2022-10-01"},{"lineNumber":107,"author":{"gitId":"bryanhce"},"content":"        requireAllNonNull(guests);","lastModifiedDate":"2022-10-01"},{"lineNumber":108,"author":{"gitId":"bryanhce"},"content":"        if (!guestsAreUnique(guests)) {","lastModifiedDate":"2022-10-01"},{"lineNumber":109,"author":{"gitId":"bryanhce"},"content":"            throw new DuplicateGuestException();","lastModifiedDate":"2022-10-01"},{"lineNumber":110,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-01"},{"lineNumber":111,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":112,"author":{"gitId":"bryanhce"},"content":"        internalList.setAll(guests);","lastModifiedDate":"2022-10-01"},{"lineNumber":113,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":114,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":115,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":116,"author":{"gitId":"bryanhce"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-01"},{"lineNumber":117,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":118,"author":{"gitId":"bryanhce"},"content":"    public ObservableList\u003cGuest\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-01"},{"lineNumber":119,"author":{"gitId":"bryanhce"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-01"},{"lineNumber":120,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":121,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":122,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":123,"author":{"gitId":"bryanhce"},"content":"    public Iterator\u003cGuest\u003e iterator() {","lastModifiedDate":"2022-10-01"},{"lineNumber":124,"author":{"gitId":"bryanhce"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-01"},{"lineNumber":125,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":126,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":127,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":128,"author":{"gitId":"bryanhce"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-01"},{"lineNumber":129,"author":{"gitId":"bryanhce"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-01"},{"lineNumber":130,"author":{"gitId":"bryanhce"},"content":"                || (other instanceof UniqueGuestList // instanceof handles nulls","lastModifiedDate":"2022-10-01"},{"lineNumber":131,"author":{"gitId":"bryanhce"},"content":"                        \u0026\u0026 internalList.equals(((UniqueGuestList) other).internalList));","lastModifiedDate":"2022-10-01"},{"lineNumber":132,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":133,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":134,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":135,"author":{"gitId":"bryanhce"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-01"},{"lineNumber":136,"author":{"gitId":"bryanhce"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-01"},{"lineNumber":137,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":138,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":139,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":140,"author":{"gitId":"bryanhce"},"content":"     * Returns true if {@code guests} contains only unique guests.","lastModifiedDate":"2022-10-01"},{"lineNumber":141,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":142,"author":{"gitId":"bryanhce"},"content":"    private boolean guestsAreUnique(List\u003cGuest\u003e guests) {","lastModifiedDate":"2022-10-01"},{"lineNumber":143,"author":{"gitId":"bryanhce"},"content":"        for (int i \u003d 0; i \u003c guests.size() - 1; i++) {","lastModifiedDate":"2022-10-01"},{"lineNumber":144,"author":{"gitId":"bryanhce"},"content":"            for (int j \u003d i + 1; j \u003c guests.size(); j++) {","lastModifiedDate":"2022-10-01"},{"lineNumber":145,"author":{"gitId":"bryanhce"},"content":"                if (guests.get(i).isSameGuest(guests.get(j))) {","lastModifiedDate":"2022-10-01"},{"lineNumber":146,"author":{"gitId":"bryanhce"},"content":"                    return false;","lastModifiedDate":"2022-10-01"},{"lineNumber":147,"author":{"gitId":"bryanhce"},"content":"                }","lastModifiedDate":"2022-10-01"},{"lineNumber":148,"author":{"gitId":"bryanhce"},"content":"            }","lastModifiedDate":"2022-10-01"},{"lineNumber":149,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-01"},{"lineNumber":150,"author":{"gitId":"bryanhce"},"content":"        return true;","lastModifiedDate":"2022-10-01"},{"lineNumber":151,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":152,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"kangzongxian":15,"bryanhce":137}},{"path":"src/main/java/seedu/guest/model/guest/exceptions/DuplicateGuestException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model.guest.exceptions;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"/**","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":" * Signals that the operation will result in duplicate Guests (Guests are considered duplicates if they have the same","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":" * identity).","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":" */","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"public class DuplicateGuestException extends RuntimeException {","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"    public DuplicateGuestException() {","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"        super(\"Operation would result in duplicate guests\");","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"bryanhce":11}},{"path":"src/main/java/seedu/guest/model/guest/exceptions/GuestNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model.guest.exceptions;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"/**","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":" * Signals that the operation is unable to find the specified guest.","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":" */","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"public class GuestNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"bryanhce":6}},{"path":"src/main/java/seedu/guest/model/guest/exceptions/RoomOccupiedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"package seedu.guest.model.guest.exceptions;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":" * Signals that the operation will result in duplicate guest rooms (rooms are considered duplicates","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":" * if they have the same identity).","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"public class RoomOccupiedException extends RuntimeException {","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"    public RoomOccupiedException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"        super(\"Operation would result in guests occupying the same room.\");","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"kangzongxian":12}},{"path":"src/main/java/seedu/guest/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.GuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ReadOnlyGuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.Bill;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.DateRange;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Email;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.IsRoomClean;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Name;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.model.guest.NumberOfGuests;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"Lan-Jingbo"},"content":"import seedu.guest.model.guest.Request;","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.model.guest.Room;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"/**","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":" * Contains utility methods for populating {@code GuestBook} with sample data.","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":" */","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"public class SampleDataUtil {","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"    public static Guest[] getSampleGuests() {","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"        return new Guest[]{","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"            new Guest(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"                    new Room(\"05-73\"), new DateRange(\"13/09/22 - 15/09/22\"), new NumberOfGuests(\"1\"),","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Lan-Jingbo"},"content":"                    new IsRoomClean(\"yes\"), new Bill(), new Request()),","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"            new Guest(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"                    new Room(\"06-84\"), new DateRange(\"01/01/23 - 07/01/23\"), new NumberOfGuests(\"4\"),","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"jehousoh"},"content":"                    new IsRoomClean(\"no\"), new Bill(\"10\"), new Request(\"Change bed\")),","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"            new Guest(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"                    new Room(\"03-68\"), new DateRange(\"21/10/22 - 22/10/22\"), new NumberOfGuests(\"2\"),","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Lan-Jingbo"},"content":"                    new IsRoomClean(\"no\"), new Bill(\"19.99\"), new Request(\"Room service\")),","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"            new Guest(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"                    new Room(\"02-50\"), new DateRange(\"08/04/23 - 22/04/23\"), new NumberOfGuests(\"3\"),","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"jehousoh"},"content":"                    new IsRoomClean(\"yes\"), new Bill(\"50.50\"), new Request(\"Extra pillow\")),","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"            new Guest(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"                    new Room(\"09-72\"), new DateRange(\"29/05/23 - 03/06/23\"), new NumberOfGuests(\"1\"),","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"jehousoh"},"content":"                    new IsRoomClean(\"no\"), new Bill(\"100\"), new Request(\"Late checkout\")),","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"            new Guest(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"kangzongxian"},"content":"                    new Room(\"04-23\"), new DateRange(\"30/12/22 - 02/01/23\"), new NumberOfGuests(\"4\"),","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"jehousoh"},"content":"                    new IsRoomClean(\"yes\"), new Bill(\"1000.01\"), new Request(\"Unclog toilet\"))","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"        };","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"bryanhce"},"content":"    public static ReadOnlyGuestBook getSampleGuestBook() {","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"jehousoh"},"content":"        GuestBook sampleGb \u003d new GuestBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"        for (Guest sampleGuest : getSampleGuests()) {","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"jehousoh"},"content":"            sampleGb.addGuest(sampleGuest);","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-01"},{"lineNumber":48,"author":{"gitId":"jehousoh"},"content":"        return sampleGb;","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":50,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"kangzongxian":8,"jehousoh":8,"Lan-Jingbo":3,"bryanhce":29,"JustinPeng13":2}},{"path":"src/main/java/seedu/guest/storage/GuestBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.GuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ReadOnlyGuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"/**","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":" * Represents a storage for {@link GuestBook}.","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":" */","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"public interface GuestBookStorage {","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"    Path getGuestBookFilePath();","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"     * Returns GuestBook data as a {@link ReadOnlyGuestBook}.","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"    Optional\u003cReadOnlyGuestBook\u003e readGuestBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"     * @see #getGuestBookFilePath()","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"    Optional\u003cReadOnlyGuestBook\u003e readGuestBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"bryanhce"},"content":"     * Saves the given {@link ReadOnlyGuestBook} to the storage.","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"     * @param guestBook cannot be null.","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":39,"author":{"gitId":"bryanhce"},"content":"    void saveGuestBook(ReadOnlyGuestBook guestBook) throws IOException;","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"     * @see #saveGuestBook(ReadOnlyGuestBook)","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"bryanhce"},"content":"    void saveGuestBook(ReadOnlyGuestBook guestBook, Path filePath) throws IOException;","lastModifiedDate":"2022-10-01"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"bryanhce":46}},{"path":"src/main/java/seedu/guest/storage/JsonAdaptedGuest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.Bill;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.DateRange;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Email;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.IsRoomClean;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Name;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.model.guest.NumberOfGuests;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"Lan-Jingbo"},"content":"import seedu.guest.model.guest.Request;","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.model.guest.Room;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":" * Jackson-friendly version of {@link Guest}.","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"class JsonAdaptedGuest {","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Guest\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"    private final String room;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"JustinPeng13"},"content":"    private final String dateRange;","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"jehousoh"},"content":"    private final String numberOfGuests;","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"    private final String isRoomClean;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinPeng13"},"content":"    private final String bill;","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"Lan-Jingbo"},"content":"    private final String request;","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"     * Constructs a {@code JsonAdaptedGuest} with the given guest details.","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"bryanhce"},"content":"    public JsonAdaptedGuest(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"kangzongxian"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"room\") String room,","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"kangzongxian"},"content":"            @JsonProperty(\"dateRange\") String dateRange,","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"            @JsonProperty(\"numberOfGuests\") String numberOfGuests,","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"Lan-Jingbo"},"content":"            @JsonProperty(\"isRoomClean\") String isRoomClean, @JsonProperty(\"bill\") String bill,","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"Lan-Jingbo"},"content":"            @JsonProperty(\"request\") String request) {","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"kangzongxian"},"content":"        this.room \u003d room;","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"JustinPeng13"},"content":"        this.dateRange \u003d dateRange;","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"jehousoh"},"content":"        this.numberOfGuests \u003d numberOfGuests;","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"bryanhce"},"content":"        this.isRoomClean \u003d isRoomClean;","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"JustinPeng13"},"content":"        this.bill \u003d bill;","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"Lan-Jingbo"},"content":"        this.request \u003d request;","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"bryanhce"},"content":"     * Converts a given {@code Guest} into this class for Jackson use.","lastModifiedDate":"2022-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"bryanhce"},"content":"    public JsonAdaptedGuest(Guest source) {","lastModifiedDate":"2022-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"kangzongxian"},"content":"        room \u003d source.getRoom().value;","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"JustinPeng13"},"content":"        dateRange \u003d source.getDateRange().value;","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"jehousoh"},"content":"        numberOfGuests \u003d source.getNumberOfGuests().value;","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"bryanhce"},"content":"        isRoomClean \u003d source.getIsRoomClean().value;","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"JustinPeng13"},"content":"        bill \u003d source.getBill().value;","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"Lan-Jingbo"},"content":"        request \u003d source.getRequest().value;","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"bryanhce"},"content":"     * Converts this Jackson-friendly adapted guest object into the model\u0027s {@code Guest} object.","lastModifiedDate":"2022-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"bryanhce"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted guest.","lastModifiedDate":"2022-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"bryanhce"},"content":"    public Guest toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-01"},{"lineNumber":77,"author":{"gitId":"JustinPeng13"},"content":"        // Name","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"JustinPeng13"},"content":"        // Phone","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"JustinPeng13"},"content":"        // Email","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"kangzongxian"},"content":"        // Room","lastModifiedDate":"2022-10-18"},{"lineNumber":105,"author":{"gitId":"kangzongxian"},"content":"        if (room \u003d\u003d null) {","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"kangzongxian"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Room.class.getSimpleName()));","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"kangzongxian"},"content":"        if (!Room.isValidRoom(room)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"kangzongxian"},"content":"            throw new IllegalValueException(Room.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"kangzongxian"},"content":"        final Room modelRoom \u003d new Room(room);","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"JustinPeng13"},"content":"        // Date Range","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"JustinPeng13"},"content":"        if (dateRange \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"JustinPeng13"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"JustinPeng13"},"content":"                    DateRange.class.getSimpleName()));","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"JustinPeng13"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"JustinPeng13"},"content":"        if (!DateRange.isValidDateRange(dateRange)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"JustinPeng13"},"content":"            throw new IllegalValueException(DateRange.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"JustinPeng13"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"JustinPeng13"},"content":"        final DateRange modelDateRange \u003d new DateRange(dateRange);","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"JustinPeng13"},"content":"        // Number Of Guests","lastModifiedDate":"2022-10-15"},{"lineNumber":124,"author":{"gitId":"jehousoh"},"content":"        if (numberOfGuests \u003d\u003d null) {","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"jehousoh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"jehousoh"},"content":"                    NumberOfGuests.class.getSimpleName()));","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"jehousoh"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"jehousoh"},"content":"        if (!NumberOfGuests.isValidNumberOfGuests(numberOfGuests)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"jehousoh"},"content":"            throw new IllegalValueException(NumberOfGuests.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"jehousoh"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"jehousoh"},"content":"        final NumberOfGuests modelNumberOfGuests \u003d new NumberOfGuests(numberOfGuests);","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":133,"author":{"gitId":"JustinPeng13"},"content":"        // Is Room Clean","lastModifiedDate":"2022-10-15"},{"lineNumber":134,"author":{"gitId":"bryanhce"},"content":"        if (isRoomClean \u003d\u003d null) {","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"bryanhce"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"bryanhce"},"content":"                    IsRoomClean.class.getSimpleName()));","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"bryanhce"},"content":"        if (!IsRoomClean.isValidIsRoomClean(isRoomClean)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"bryanhce"},"content":"            throw new IllegalValueException(IsRoomClean.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"bryanhce"},"content":"        final IsRoomClean modelIsRoomClean \u003d new IsRoomClean(isRoomClean);","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"JustinPeng13"},"content":"        // Bill","lastModifiedDate":"2022-10-15"},{"lineNumber":144,"author":{"gitId":"JustinPeng13"},"content":"        if (bill \u003d\u003d null) {","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"JustinPeng13"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"JustinPeng13"},"content":"                    Bill.class.getSimpleName()));","lastModifiedDate":"2022-10-15"},{"lineNumber":147,"author":{"gitId":"JustinPeng13"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":148,"author":{"gitId":"JustinPeng13"},"content":"        if (!Bill.isValidBill(bill)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":149,"author":{"gitId":"JustinPeng13"},"content":"            throw new IllegalValueException(Bill.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":150,"author":{"gitId":"JustinPeng13"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":151,"author":{"gitId":"JustinPeng13"},"content":"        final Bill modelBill \u003d new Bill(bill);","lastModifiedDate":"2022-10-15"},{"lineNumber":152,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":153,"author":{"gitId":"Lan-Jingbo"},"content":"        // Request","lastModifiedDate":"2022-10-18"},{"lineNumber":154,"author":{"gitId":"Lan-Jingbo"},"content":"        if (request \u003d\u003d null) {","lastModifiedDate":"2022-10-18"},{"lineNumber":155,"author":{"gitId":"Lan-Jingbo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-18"},{"lineNumber":156,"author":{"gitId":"Lan-Jingbo"},"content":"                    Request.class.getSimpleName()));","lastModifiedDate":"2022-10-18"},{"lineNumber":157,"author":{"gitId":"Lan-Jingbo"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":158,"author":{"gitId":"Lan-Jingbo"},"content":"        if (!Request.isValidRequest(request)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":159,"author":{"gitId":"Lan-Jingbo"},"content":"            throw new IllegalValueException(Request.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-18"},{"lineNumber":160,"author":{"gitId":"Lan-Jingbo"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":161,"author":{"gitId":"Lan-Jingbo"},"content":"        final Request modelRequest \u003d new Request(request);","lastModifiedDate":"2022-10-18"},{"lineNumber":162,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":163,"author":{"gitId":"kangzongxian"},"content":"        return new Guest(modelName, modelPhone, modelEmail, modelRoom,","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"Lan-Jingbo"},"content":"                modelDateRange, modelNumberOfGuests, modelIsRoomClean,","lastModifiedDate":"2022-10-19"},{"lineNumber":165,"author":{"gitId":"Lan-Jingbo"},"content":"                modelBill, modelRequest);","lastModifiedDate":"2022-10-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kangzongxian":16,"jehousoh":13,"Lan-Jingbo":18,"bryanhce":30,"-":57,"JustinPeng13":33}},{"path":"src/main/java/seedu/guest/storage/JsonGuestBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.LogsCenter;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.util.FileUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.util.JsonUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ReadOnlyGuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"/**","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":" * A class to access GuestBook data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":" */","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"public class JsonGuestBookStorage implements GuestBookStorage {","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonGuestBookStorage.class);","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"    private Path filePath;","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"    public JsonGuestBookStorage(Path filePath) {","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"    public Path getGuestBookFilePath() {","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"        return filePath;","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"bryanhce"},"content":"    public Optional\u003cReadOnlyGuestBook\u003e readGuestBook() throws DataConversionException {","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"        return readGuestBook(filePath);","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":39,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"     * Similar to {@link #readGuestBook()}.","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"bryanhce"},"content":"     *","lastModifiedDate":"2022-10-01"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"bryanhce"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"    public Optional\u003cReadOnlyGuestBook\u003e readGuestBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-01"},{"lineNumber":47,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":48,"author":{"gitId":"bryanhce"},"content":"        Optional\u003cJsonSerializableGuestBook\u003e jsonGuestBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-01"},{"lineNumber":49,"author":{"gitId":"bryanhce"},"content":"                filePath, JsonSerializableGuestBook.class);","lastModifiedDate":"2022-10-01"},{"lineNumber":50,"author":{"gitId":"bryanhce"},"content":"        if (!jsonGuestBook.isPresent()) {","lastModifiedDate":"2022-10-01"},{"lineNumber":51,"author":{"gitId":"bryanhce"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-01"},{"lineNumber":52,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-01"},{"lineNumber":53,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":54,"author":{"gitId":"bryanhce"},"content":"        try {","lastModifiedDate":"2022-10-01"},{"lineNumber":55,"author":{"gitId":"bryanhce"},"content":"            return Optional.of(jsonGuestBook.get().toModelType());","lastModifiedDate":"2022-10-01"},{"lineNumber":56,"author":{"gitId":"bryanhce"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-01"},{"lineNumber":57,"author":{"gitId":"bryanhce"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-10-01"},{"lineNumber":58,"author":{"gitId":"bryanhce"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-10-01"},{"lineNumber":59,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-01"},{"lineNumber":60,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":61,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":62,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":63,"author":{"gitId":"bryanhce"},"content":"    public void saveGuestBook(ReadOnlyGuestBook guestBook) throws IOException {","lastModifiedDate":"2022-10-01"},{"lineNumber":64,"author":{"gitId":"bryanhce"},"content":"        saveGuestBook(guestBook, filePath);","lastModifiedDate":"2022-10-01"},{"lineNumber":65,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":66,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":67,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":68,"author":{"gitId":"bryanhce"},"content":"     * Similar to {@link #saveGuestBook(ReadOnlyGuestBook)}.","lastModifiedDate":"2022-10-01"},{"lineNumber":69,"author":{"gitId":"bryanhce"},"content":"     *","lastModifiedDate":"2022-10-01"},{"lineNumber":70,"author":{"gitId":"bryanhce"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-01"},{"lineNumber":71,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":72,"author":{"gitId":"bryanhce"},"content":"    public void saveGuestBook(ReadOnlyGuestBook guestBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-01"},{"lineNumber":73,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(guestBook);","lastModifiedDate":"2022-10-01"},{"lineNumber":74,"author":{"gitId":"bryanhce"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-01"},{"lineNumber":75,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":76,"author":{"gitId":"bryanhce"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-10-01"},{"lineNumber":77,"author":{"gitId":"bryanhce"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableGuestBook(guestBook), filePath);","lastModifiedDate":"2022-10-01"},{"lineNumber":78,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":79,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":80,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"bryanhce":80}},{"path":"src/main/java/seedu/guest/storage/JsonSerializableGuestBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import java.util.List;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.GuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ReadOnlyGuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"/**","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":" * An Immutable GuestList that is serializable to JSON format.","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":" */","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"@JsonRootName(value \u003d \"guestbook\")","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"class JsonSerializableGuestBook {","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"    public static final String MESSAGE_DUPLICATE_GUEST \u003d \"Guests list contains duplicate guest(s).\";","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"    public static final String MESSAGE_DUPLICATE_ROOM \u003d \"Guests list contains two or more guests with the same room.\";","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"    private final List\u003cJsonAdaptedGuest\u003e guests \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"     * Constructs a {@code JsonSerializableGuestList} with the given guests.","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"    public JsonSerializableGuestBook(@JsonProperty(\"guests\") List\u003cJsonAdaptedGuest\u003e guests) {","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"        this.guests.addAll(guests);","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"     * Converts a given {@code ReadOnlyGuestBook} into this class for Jackson use.","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"     *","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableGuestBook}.","lastModifiedDate":"2022-10-01"},{"lineNumber":39,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"    public JsonSerializableGuestBook(ReadOnlyGuestBook source) {","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"bryanhce"},"content":"        guests.addAll(source.getGuestList().stream().map(JsonAdaptedGuest::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-01"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"     * Converts this guest list into the model\u0027s {@code GuestList} object.","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"bryanhce"},"content":"     *","lastModifiedDate":"2022-10-01"},{"lineNumber":47,"author":{"gitId":"bryanhce"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-10-01"},{"lineNumber":48,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":49,"author":{"gitId":"bryanhce"},"content":"    public GuestBook toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-01"},{"lineNumber":50,"author":{"gitId":"bryanhce"},"content":"        GuestBook guestBook \u003d new GuestBook();","lastModifiedDate":"2022-10-01"},{"lineNumber":51,"author":{"gitId":"bryanhce"},"content":"        for (JsonAdaptedGuest jsonAdaptedGuest : guests) {","lastModifiedDate":"2022-10-01"},{"lineNumber":52,"author":{"gitId":"bryanhce"},"content":"            Guest guest \u003d jsonAdaptedGuest.toModelType();","lastModifiedDate":"2022-10-01"},{"lineNumber":53,"author":{"gitId":"bryanhce"},"content":"            if (guestBook.hasGuest(guest)) {","lastModifiedDate":"2022-10-01"},{"lineNumber":54,"author":{"gitId":"bryanhce"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_GUEST);","lastModifiedDate":"2022-10-01"},{"lineNumber":55,"author":{"gitId":"kangzongxian"},"content":"            } else if (guestBook.hasSameRoom(guest)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"kangzongxian"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ROOM);","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"bryanhce"},"content":"            }","lastModifiedDate":"2022-10-01"},{"lineNumber":58,"author":{"gitId":"bryanhce"},"content":"            guestBook.addGuest(guest);","lastModifiedDate":"2022-10-01"},{"lineNumber":59,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-01"},{"lineNumber":60,"author":{"gitId":"bryanhce"},"content":"        return guestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":61,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":62,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":63,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"kangzongxian":3,"bryanhce":60}},{"path":"src/main/java/seedu/guest/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.util.JsonUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"bryanhce":5,"-":42}},{"path":"src/main/java/seedu/guest/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ReadOnlyGuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"/**","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":" * API of the Storage component","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":" */","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"public interface Storage extends GuestBookStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"    Path getGuestBookFilePath();","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"    Optional\u003cReadOnlyGuestBook\u003e readGuestBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"    void saveGuestBook(ReadOnlyGuestBook addressBook) throws IOException;","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"bryanhce":32}},{"path":"src/main/java/seedu/guest/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.LogsCenter;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ReadOnlyGuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"/**","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":" * Manages storage of GuestBook data in local storage.","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":" */","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"    private GuestBookStorage guestBookStorage;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"     * Creates a {@code StorageManager} with the given {@code GuestBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"    public StorageManager(GuestBookStorage guestBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"        this.guestBookStorage \u003d guestBookStorage;","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"bryanhce"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":39,"author":{"gitId":"bryanhce"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"bryanhce"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2022-10-01"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":47,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":48,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":49,"author":{"gitId":"bryanhce"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d GuestBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-01"},{"lineNumber":50,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":51,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":52,"author":{"gitId":"bryanhce"},"content":"    public Path getGuestBookFilePath() {","lastModifiedDate":"2022-10-01"},{"lineNumber":53,"author":{"gitId":"bryanhce"},"content":"        return guestBookStorage.getGuestBookFilePath();","lastModifiedDate":"2022-10-01"},{"lineNumber":54,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":55,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":56,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":57,"author":{"gitId":"bryanhce"},"content":"    public Optional\u003cReadOnlyGuestBook\u003e readGuestBook() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-01"},{"lineNumber":58,"author":{"gitId":"bryanhce"},"content":"        return readGuestBook(guestBookStorage.getGuestBookFilePath());","lastModifiedDate":"2022-10-01"},{"lineNumber":59,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":60,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":61,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":62,"author":{"gitId":"bryanhce"},"content":"    public Optional\u003cReadOnlyGuestBook\u003e readGuestBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-01"},{"lineNumber":63,"author":{"gitId":"bryanhce"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-10-01"},{"lineNumber":64,"author":{"gitId":"bryanhce"},"content":"        return guestBookStorage.readGuestBook(filePath);","lastModifiedDate":"2022-10-01"},{"lineNumber":65,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":66,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":67,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":68,"author":{"gitId":"bryanhce"},"content":"    public void saveGuestBook(ReadOnlyGuestBook guestBook) throws IOException {","lastModifiedDate":"2022-10-01"},{"lineNumber":69,"author":{"gitId":"bryanhce"},"content":"        saveGuestBook(guestBook, guestBookStorage.getGuestBookFilePath());","lastModifiedDate":"2022-10-01"},{"lineNumber":70,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":71,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":72,"author":{"gitId":"bryanhce"},"content":"    @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":73,"author":{"gitId":"bryanhce"},"content":"    public void saveGuestBook(ReadOnlyGuestBook guestBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-01"},{"lineNumber":74,"author":{"gitId":"bryanhce"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-10-01"},{"lineNumber":75,"author":{"gitId":"bryanhce"},"content":"        guestBookStorage.saveGuestBook(guestBook, filePath);","lastModifiedDate":"2022-10-01"},{"lineNumber":76,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":77,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":78,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"bryanhce":78}},{"path":"src/main/java/seedu/guest/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":" * Represents a storage for {@link seedu.guest.model.UserPrefs}.","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"     * Saves the given {@link seedu.guest.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"bryanhce":6,"-":30}},{"path":"src/main/java/seedu/guest/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.CommandResult;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"bryanhce"},"content":"         * @see seedu.guest.logic.Logic#execute(String)","lastModifiedDate":"2022-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"bryanhce":5,"-":80}},{"path":"src/main/java/seedu/guest/ui/GuestCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"jehousoh"},"content":"import javafx.scene.control.Tooltip;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"jehousoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"jehousoh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":" * An UI component that displays information of a {@code Guest}.","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"public class GuestCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"    private static final String FXML \u003d \"GuestListCard.fxml\";","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"jehousoh"},"content":"    private static final double IMAGE_WIDTH \u003d 16;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"jehousoh"},"content":"    private static final double IMAGE_HEIGHT \u003d 16;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"jehousoh"},"content":"    private static final double IS_ROOM_CLEAN_STATUS_WIDTH \u003d 18;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"jehousoh"},"content":"    private static final double IS_ROOM_CLEAN_STATUS_HEIGHT \u003d 18;","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"jehousoh"},"content":"    private static final double TEXT_GRAPHIC_GAP \u003d 7;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"jehousoh"},"content":"    private static final String NAME_TOOLTIP \u003d \"Name\";","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"jehousoh"},"content":"    private static final String PHONE_TOOLTIP \u003d \"Phone Number\";","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"jehousoh"},"content":"    private static final String EMAIL_TOOLTIP \u003d \"Email\";","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"jehousoh"},"content":"    private static final String ROOM_TOOLTIP \u003d \"Room\";","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"jehousoh"},"content":"    private static final String DATE_RANGE_TOOLTIP \u003d \"Date of Stay\";","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"jehousoh"},"content":"    private static final String NUMBER_OF_GUESTS_TOOLTIP \u003d \"Number of Guests\";","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"jehousoh"},"content":"    private static final String IS_ROOM_CLEAN_TOOLTIP \u003d \"Room Cleaned\";","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"jehousoh"},"content":"    private static final String BILL_TOOLTIP \u003d \"Bill\";","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"jehousoh"},"content":"    private static final String REQUEST_TOOLTIP \u003d \"Request\";","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"    public final Guest guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"kangzongxian"},"content":"    private Label room;","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"kangzongxian"},"content":"    @FXML","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"JustinPeng13"},"content":"    private Label dateRange;","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"bryanhce"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"kangzongxian"},"content":"    private Label numberOfGuests;","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"kangzongxian"},"content":"    @FXML","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"bryanhce"},"content":"    private Label isRoomClean;","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"JustinPeng13"},"content":"    @FXML","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"jehousoh"},"content":"    private Label isRoomCleanStatus;","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"jehousoh"},"content":"    @FXML","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"JustinPeng13"},"content":"    private Label bill;","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"Lan-Jingbo"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"Lan-Jingbo"},"content":"    private Label request;","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":70,"author":{"gitId":"bryanhce"},"content":"     * Creates a {@code GuestCode} with the given {@code Guest} and index to display.","lastModifiedDate":"2022-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":72,"author":{"gitId":"bryanhce"},"content":"    public GuestCard(Guest guest, int displayedIndex) {","lastModifiedDate":"2022-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"bryanhce"},"content":"        this.guest \u003d guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"bryanhce"},"content":"        name.setText(guest.getName().fullName);","lastModifiedDate":"2022-10-01"},{"lineNumber":77,"author":{"gitId":"jehousoh"},"content":"        name.setWrapText(true);","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"jehousoh"},"content":"        Tooltip nameTooltip \u003d new Tooltip(NAME_TOOLTIP);","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"jehousoh"},"content":"        name.setTooltip(nameTooltip);","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"bryanhce"},"content":"        phone.setText(guest.getPhone().value);","lastModifiedDate":"2022-10-01"},{"lineNumber":82,"author":{"gitId":"jehousoh"},"content":"        Image phoneImage \u003d new Image(getClass().getResourceAsStream(\"/images/phone.png\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"jehousoh"},"content":"        setLabel(phone, phoneImage, PHONE_TOOLTIP);","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"bryanhce"},"content":"        email.setText(guest.getEmail().value);","lastModifiedDate":"2022-10-01"},{"lineNumber":86,"author":{"gitId":"jehousoh"},"content":"        Image emailImage \u003d new Image(getClass().getResourceAsStream(\"/images/email.png\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"jehousoh"},"content":"        setLabel(email, emailImage, EMAIL_TOOLTIP);","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"kangzongxian"},"content":"        room.setText(guest.getRoom().value);","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"jehousoh"},"content":"        Image roomImage \u003d new Image(getClass().getResourceAsStream(\"/images/room.png\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"jehousoh"},"content":"        setLabel(room, roomImage, ROOM_TOOLTIP);","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"JustinPeng13"},"content":"        dateRange.setText(guest.getDateRange().value);","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"jehousoh"},"content":"        Image dateRangeImage \u003d new Image(getClass().getResourceAsStream(\"/images/dateRange.png\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"jehousoh"},"content":"        setLabel(dateRange, dateRangeImage, DATE_RANGE_TOOLTIP);","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"jehousoh"},"content":"        numberOfGuests.setText(guest.getNumberOfGuests().value);","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"jehousoh"},"content":"        Image numberOfGuestsImage \u003d new Image(getClass().getResourceAsStream(\"/images/group.png\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"jehousoh"},"content":"        setLabel(numberOfGuests, numberOfGuestsImage, NUMBER_OF_GUESTS_TOOLTIP);","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"jehousoh"},"content":"        isRoomClean.setText(\"\");","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"jehousoh"},"content":"        isRoomCleanStatus.setText(\"\");","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"jehousoh"},"content":"        Image isRoomCleanImage \u003d new Image(getClass().getResourceAsStream(\"/images/isRoomClean.png\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"jehousoh"},"content":"        setLabel(isRoomClean, isRoomCleanImage, IS_ROOM_CLEAN_TOOLTIP);","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"jehousoh"},"content":"        // Set graphic based on status of isRoomClean","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"jehousoh"},"content":"        if (guest.getIsRoomClean().value.equals(\"yes\")) {","lastModifiedDate":"2022-10-18"},{"lineNumber":108,"author":{"gitId":"jehousoh"},"content":"            Image isRoomCleanStatusImage \u003d new Image(getClass().getResourceAsStream(\"/images/roomClean.png\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"jehousoh"},"content":"            ImageView setIsRoomCleanStatusImage \u003d new ImageView(isRoomCleanStatusImage);","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"jehousoh"},"content":"            setIsRoomCleanStatusImage.setFitWidth(IS_ROOM_CLEAN_STATUS_WIDTH);","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"jehousoh"},"content":"            setIsRoomCleanStatusImage.setFitHeight(IS_ROOM_CLEAN_STATUS_HEIGHT);","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"jehousoh"},"content":"            isRoomCleanStatus.setGraphic(setIsRoomCleanStatusImage);","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"jehousoh"},"content":"        } else {","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"jehousoh"},"content":"            Image image \u003d new Image(getClass().getResourceAsStream(\"/images/roomUnclean.png\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":115,"author":{"gitId":"jehousoh"},"content":"            ImageView setImage \u003d new ImageView(image);","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"jehousoh"},"content":"            setImage.setFitWidth(IS_ROOM_CLEAN_STATUS_WIDTH);","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"jehousoh"},"content":"            setImage.setFitHeight(IS_ROOM_CLEAN_STATUS_HEIGHT);","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"jehousoh"},"content":"            isRoomCleanStatus.setGraphic(setImage);","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"jehousoh"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"jehousoh"},"content":"        Tooltip isRoomCleanStatusTooltip \u003d new Tooltip(IS_ROOM_CLEAN_TOOLTIP);","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"jehousoh"},"content":"        isRoomCleanStatus.setTooltip(isRoomCleanStatusTooltip);","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":124,"author":{"gitId":"jehousoh"},"content":"        bill.setText(guest.getBill().value);","lastModifiedDate":"2022-10-21"},{"lineNumber":125,"author":{"gitId":"jehousoh"},"content":"        Image billImage \u003d new Image(getClass().getResourceAsStream(\"/images/bill.png\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":126,"author":{"gitId":"jehousoh"},"content":"        setLabel(bill, billImage, BILL_TOOLTIP);","lastModifiedDate":"2022-10-21"},{"lineNumber":127,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":128,"author":{"gitId":"jehousoh"},"content":"        request.setText(guest.getRequest().value);","lastModifiedDate":"2022-10-21"},{"lineNumber":129,"author":{"gitId":"jehousoh"},"content":"        Image requestImage \u003d new Image(getClass().getResourceAsStream(\"/images/request.png\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":130,"author":{"gitId":"jehousoh"},"content":"        setLabel(request, requestImage, REQUEST_TOOLTIP);","lastModifiedDate":"2022-10-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":133,"author":{"gitId":"jehousoh"},"content":"    private void setLabel(Label label, Image image, String text) {","lastModifiedDate":"2022-10-21"},{"lineNumber":134,"author":{"gitId":"jehousoh"},"content":"        ImageView setImage \u003d new ImageView(image);","lastModifiedDate":"2022-10-21"},{"lineNumber":135,"author":{"gitId":"jehousoh"},"content":"        setImage.setFitWidth(IMAGE_WIDTH);","lastModifiedDate":"2022-10-21"},{"lineNumber":136,"author":{"gitId":"jehousoh"},"content":"        setImage.setFitHeight(IMAGE_HEIGHT);","lastModifiedDate":"2022-10-21"},{"lineNumber":137,"author":{"gitId":"jehousoh"},"content":"        label.setGraphic(setImage);","lastModifiedDate":"2022-10-21"},{"lineNumber":138,"author":{"gitId":"jehousoh"},"content":"        label.setGraphicTextGap(TEXT_GRAPHIC_GAP);","lastModifiedDate":"2022-10-21"},{"lineNumber":139,"author":{"gitId":"jehousoh"},"content":"        label.setWrapText(true);","lastModifiedDate":"2022-10-21"},{"lineNumber":140,"author":{"gitId":"jehousoh"},"content":"        Tooltip tooltip \u003d new Tooltip(text);","lastModifiedDate":"2022-10-21"},{"lineNumber":141,"author":{"gitId":"jehousoh"},"content":"        label.setTooltip(tooltip);","lastModifiedDate":"2022-10-21"},{"lineNumber":142,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":151,"author":{"gitId":"bryanhce"},"content":"        if (!(other instanceof GuestCard)) {","lastModifiedDate":"2022-10-01"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":156,"author":{"gitId":"bryanhce"},"content":"        GuestCard card \u003d (GuestCard) other;","lastModifiedDate":"2022-10-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":158,"author":{"gitId":"bryanhce"},"content":"                \u0026\u0026 guest.equals(card.guest);","lastModifiedDate":"2022-10-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kangzongxian":5,"jehousoh":80,"Lan-Jingbo":2,"bryanhce":17,"-":52,"JustinPeng13":4}},{"path":"src/main/java/seedu/guest/ui/GuestListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.LogsCenter;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"/**","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":" * Panel containing the list of guests.","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":" */","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"public class GuestListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"    private static final String FXML \u003d \"GuestListPanel.fxml\";","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(GuestListPanel.class);","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"    @FXML","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"    private ListView\u003cGuest\u003e guestListView;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"     * Creates a {@code GuestListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"    public GuestListPanel(ObservableList\u003cGuest\u003e guestList) {","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"        super(FXML);","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"        guestListView.setItems(guestList);","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"        guestListView.setCellFactory(listView -\u003e new GuestListViewCell());","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"bryanhce"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Guest} using a {@code GuestCard}.","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"bryanhce"},"content":"    class GuestListViewCell extends ListCell\u003cGuest\u003e {","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"        @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"        protected void updateItem(Guest guest, boolean empty) {","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"            super.updateItem(guest, empty);","lastModifiedDate":"2022-10-01"},{"lineNumber":39,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"            if (empty || guest \u003d\u003d null) {","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"bryanhce"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-01"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"                setText(null);","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"bryanhce"},"content":"            } else {","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"bryanhce"},"content":"                setGraphic(new GuestCard(guest, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-01"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"            }","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-01"},{"lineNumber":47,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":48,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":49,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"bryanhce":49}},{"path":"src/main/java/seedu/guest/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.LogsCenter;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"    public static final String USERGUIDE_URL \u003d","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"jehousoh"},"content":"            \"https://ay2223s1-cs2103t-w16-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jehousoh":1,"bryanhce":3,"-":99}},{"path":"src/main/java/seedu/guest/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.GuiSettings;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.LogsCenter;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.Logic;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.CommandResult;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"    private GuestListPanel guestListPanel;","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"    private StackPane guestListPanelPlaceholder;","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"bryanhce"},"content":"        guestListPanel \u003d new GuestListPanel(logic.getFilteredGuestList());","lastModifiedDate":"2022-10-01"},{"lineNumber":114,"author":{"gitId":"bryanhce"},"content":"        guestListPanelPlaceholder.getChildren().add(guestListPanel.getRoot());","lastModifiedDate":"2022-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"bryanhce"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getGuestBookFilePath());","lastModifiedDate":"2022-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"bryanhce"},"content":"    public GuestListPanel getGuestListPanel() {","lastModifiedDate":"2022-10-01"},{"lineNumber":167,"author":{"gitId":"bryanhce"},"content":"        return guestListPanel;","lastModifiedDate":"2022-10-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"bryanhce"},"content":"     * @see seedu.guest.logic.Logic#execute(String)","lastModifiedDate":"2022-10-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"bryanhce":15,"-":181}},{"path":"src/main/java/seedu/guest/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"jehousoh"},"content":"        resultDisplay.setWrapText(true);","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jehousoh":1,"bryanhce":1,"-":27}},{"path":"src/main/java/seedu/guest/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanhce":1,"-":27}},{"path":"src/main/java/seedu/guest/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"bryanhce":1,"-":12}},{"path":"src/main/java/seedu/guest/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.MainApp;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.LogsCenter;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.util.StringUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.Logic;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"jehousoh"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/guest_book.png\";","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jehousoh":1,"bryanhce":5,"-":82}},{"path":"src/main/java/seedu/guest/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.MainApp;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"bryanhce":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":354,"author":{"gitId":"jehousoh"},"content":"#personalParticulars {","lastModifiedDate":"2022-10-12"},{"lineNumber":355,"author":{"gitId":"jehousoh"},"content":"    -fx-text-fill: #4ACFAC;","lastModifiedDate":"2022-10-12"},{"lineNumber":356,"author":{"gitId":"jehousoh"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-10-12"},{"lineNumber":357,"author":{"gitId":"jehousoh"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":358,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":359,"author":{"gitId":"jehousoh"},"content":"#roomDetails {","lastModifiedDate":"2022-10-12"},{"lineNumber":360,"author":{"gitId":"jehousoh"},"content":"    -fx-text-fill: #4ACFAC;","lastModifiedDate":"2022-10-12"},{"lineNumber":361,"author":{"gitId":"jehousoh"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-10-12"},{"lineNumber":362,"author":{"gitId":"jehousoh"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":363,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":364,"author":{"gitId":"jehousoh"},"content":"#roomStatus {","lastModifiedDate":"2022-10-12"},{"lineNumber":365,"author":{"gitId":"jehousoh"},"content":"    -fx-text-fill: #4ACFAC;","lastModifiedDate":"2022-10-12"},{"lineNumber":366,"author":{"gitId":"jehousoh"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-10-12"},{"lineNumber":367,"author":{"gitId":"jehousoh"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"jehousoh":15,"-":352}},{"path":"src/main/resources/view/GuestListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"jehousoh"},"content":"        \u003cRegion HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jehousoh"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"jehousoh"},"content":"        \u003cVBox id\u003d\"personalParticulars\" minWidth\u003d\"280\" prefWidth\u003d\"280\" maxWidth\u003d\"480\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"jehousoh"},"content":"          \u003cLabel fx:id\u003d\"personalParticulars\" text\u003d\"Personal Particulars\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jehousoh"},"content":"          \u003cHBox fx:id\u003d\"phoneBox\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"jehousoh"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jehousoh"},"content":"          \u003cRegion minHeight\u003d\"3\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"jehousoh"},"content":"          \u003cHBox fx:id\u003d\"emailBox\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"jehousoh"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jehousoh"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"jehousoh"},"content":"        \u003cRegion minWidth\u003d\"5\" HBox.hgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"jehousoh"},"content":"        \u003cVBox id\u003d\"roomDetails\" minWidth\u003d\"240\" prefWidth\u003d\"240\" maxWidth\u003d\"480\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"jehousoh"},"content":"          \u003cLabel fx:id\u003d\"roomDetails\" text\u003d\"Room Details\" /\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"jehousoh"},"content":"          \u003cHBox fx:id\u003d\"roomBox\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"kangzongxian"},"content":"            \u003cLabel fx:id\u003d\"room\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$room\" /\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"jehousoh"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"jehousoh"},"content":"          \u003cRegion minHeight\u003d\"3\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"jehousoh"},"content":"          \u003cHBox fx:id\u003d\"dateRangeBox\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"JustinPeng13"},"content":"            \u003cLabel fx:id\u003d\"dateRange\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dateRange\" /\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"jehousoh"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"jehousoh"},"content":"          \u003cRegion minHeight\u003d\"3\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"jehousoh"},"content":"          \u003cHBox fx:id\u003d\"numberOfGuestsBox\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"kangzongxian"},"content":"            \u003cLabel fx:id\u003d\"numberOfGuests\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$numberOfGuests\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"jehousoh"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"jehousoh"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"jehousoh"},"content":"        \u003cRegion minWidth\u003d\"10\" HBox.hgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"jehousoh"},"content":"        \u003cVBox id\u003d\"roomStatus\" minWidth\u003d\"195\" prefWidth\u003d\"195\" maxWidth\u003d\"480\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"jehousoh"},"content":"          \u003cLabel fx:id\u003d\"roomStatus\" text\u003d\"Room Status\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"jehousoh"},"content":"          \u003cHBox fx:id\u003d\"isRoomCleanBox\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"bryanhce"},"content":"            \u003cLabel fx:id\u003d\"isRoomClean\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$isRoomClean\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"jehousoh"},"content":"            \u003cRegion minWidth\u003d\"5\" HBox.hgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"jehousoh"},"content":"            \u003cLabel fx:id\u003d\"isRoomCleanStatus\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$isRoomCleanStatus\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"jehousoh"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"jehousoh"},"content":"          \u003cRegion minHeight\u003d\"3\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"jehousoh"},"content":"          \u003cHBox fx:id\u003d\"billBox\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"jehousoh"},"content":"            \u003cLabel fx:id\u003d\"bill\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$bill\" /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"jehousoh"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"jehousoh"},"content":"          \u003cRegion minHeight\u003d\"3\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"jehousoh"},"content":"          \u003cHBox fx:id\u003d\"requestBox\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"Lan-Jingbo"},"content":"            \u003cLabel fx:id\u003d\"request\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$request\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":91,"author":{"gitId":"jehousoh"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"jehousoh"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"jehousoh"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kangzongxian":2,"jehousoh":59,"Lan-Jingbo":1,"bryanhce":1,"-":33,"JustinPeng13":1}},{"path":"src/main/resources/view/GuestListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"  \u003cListView fx:id\u003d\"guestListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanhce":1,"-":7}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"jehousoh"},"content":"         title\u003d\"GuestBook App\" minWidth\u003d\"800\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"jehousoh"},"content":"    \u003cImage url\u003d\"@/images/guest_book.png\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"bryanhce"},"content":"        \u003cVBox fx:id\u003d\"guestBook\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"bryanhce"},"content":"          \u003cStackPane fx:id\u003d\"guestListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"jehousoh":2,"bryanhce":2,"-":56}},{"path":"src/test/java/seedu/guest/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"jehousoh"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"jehousoh"},"content":"        AppParameters testAppParameters \u003d new AppParameters();","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"jehousoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"jehousoh"},"content":"        assertTrue(expected.equals(testAppParameters));","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"jehousoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"jehousoh"},"content":"        assertTrue(expected.equals(expected));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"jehousoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"jehousoh"},"content":"        assertFalse(expected.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"jehousoh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"jehousoh"},"content":"        assertFalse(expected.equals(0.5f));","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"jehousoh"},"content":"        // different configPath -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"jehousoh"},"content":"        testAppParameters.setConfigPath(Paths.get(\"test.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"jehousoh"},"content":"        assertFalse(expected.equals(testAppParameters));","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"jehousoh":23,"bryanhce":1,"-":57}},{"path":"src/test/java/seedu/guest/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.core;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"bryanhce":1,"-":26}},{"path":"src/test/java/seedu/guest/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.core;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanhce":2,"-":133}},{"path":"src/test/java/seedu/guest/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.core.index;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"        final Index fifthGuestIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"        assertTrue(fifthGuestIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"bryanhce"},"content":"        assertTrue(fifthGuestIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"bryanhce"},"content":"        assertTrue(fifthGuestIndex.equals(fifthGuestIndex));","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"bryanhce"},"content":"        assertFalse(fifthGuestIndex.equals(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"bryanhce"},"content":"        assertFalse(fifthGuestIndex.equals(5.0f));","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"bryanhce"},"content":"        assertFalse(fifthGuestIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"bryanhce":9,"-":51}},{"path":"src/test/java/seedu/guest/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"bryanhce":2,"-":34}},{"path":"src/test/java/seedu/guest/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"bryanhce":3,"-":105}},{"path":"src/test/java/seedu/guest/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.Config;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"bryanhce":4,"-":112}},{"path":"src/test/java/seedu/guest/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanhce":2,"-":21}},{"path":"src/test/java/seedu/guest/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.testutil.TestUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanhce":3,"-":42}},{"path":"src/test/java/seedu/guest/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.commons.util;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"jehousoh"},"content":"    //---------------- Tests for containsDateIgnoreHyphenIgnoreSpace --------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"jehousoh"},"content":"    /*","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"jehousoh"},"content":"     * Invalid equivalence partitions for date: null, empty, multiple dates","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"jehousoh"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"jehousoh"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"jehousoh"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"jehousoh"},"content":"    public void containsDateIgnoreHyphenIgnoreSpace_nullDate_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"jehousoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsDateIgnoreHyphenIgnoreSpace(","lastModifiedDate":"2022-10-26"},{"lineNumber":138,"author":{"gitId":"jehousoh"},"content":"                \"13/03/22\", null));","lastModifiedDate":"2022-10-26"},{"lineNumber":139,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":140,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":141,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":142,"author":{"gitId":"jehousoh"},"content":"    public void containsDateIgnoreHyphenIgnoreSpace_emptyDate_returnsFalse() {","lastModifiedDate":"2022-10-26"},{"lineNumber":143,"author":{"gitId":"jehousoh"},"content":"        assertEquals(false, StringUtil.containsDateIgnoreHyphenIgnoreSpace(\"13/03/22\", \"  \"));","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":145,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":147,"author":{"gitId":"jehousoh"},"content":"    public void containsDateIgnoreHyphenIgnoreSpace_multipleDates_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"jehousoh"},"content":"        assertThrows(IllegalArgumentException.class, \"Date parameter should be a single date\", ()","lastModifiedDate":"2022-10-26"},{"lineNumber":149,"author":{"gitId":"jehousoh"},"content":"                -\u003e StringUtil.containsDateIgnoreHyphenIgnoreSpace(\"13/03/22\", \"13/03/22 14/03/22\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":153,"author":{"gitId":"jehousoh"},"content":"    public void containsDateIgnoreHyphenIgnoreSpace_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"jehousoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsDateIgnoreHyphenIgnoreSpace(","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"jehousoh"},"content":"                null, \"13/03/22\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":156,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":157,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":158,"author":{"gitId":"jehousoh"},"content":"    /*","lastModifiedDate":"2022-10-26"},{"lineNumber":159,"author":{"gitId":"jehousoh"},"content":"     * Valid equivalence partitions for date:","lastModifiedDate":"2022-10-26"},{"lineNumber":160,"author":{"gitId":"jehousoh"},"content":"     *   - valid date","lastModifiedDate":"2022-10-26"},{"lineNumber":161,"author":{"gitId":"jehousoh"},"content":"     *   - date with leading/trailing spaces","lastModifiedDate":"2022-10-26"},{"lineNumber":162,"author":{"gitId":"jehousoh"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":163,"author":{"gitId":"jehousoh"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2022-10-26"},{"lineNumber":164,"author":{"gitId":"jehousoh"},"content":"     *   - empty string","lastModifiedDate":"2022-10-26"},{"lineNumber":165,"author":{"gitId":"jehousoh"},"content":"     *   - one date","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"jehousoh"},"content":"     *   - multiple dates","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"jehousoh"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2022-10-26"},{"lineNumber":168,"author":{"gitId":"jehousoh"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":169,"author":{"gitId":"jehousoh"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2022-10-26"},{"lineNumber":170,"author":{"gitId":"jehousoh"},"content":"     *   - matches first date in sentence","lastModifiedDate":"2022-10-26"},{"lineNumber":171,"author":{"gitId":"jehousoh"},"content":"     *   - last date in sentence","lastModifiedDate":"2022-10-26"},{"lineNumber":172,"author":{"gitId":"jehousoh"},"content":"     *   - middle date in sentence","lastModifiedDate":"2022-10-26"},{"lineNumber":173,"author":{"gitId":"jehousoh"},"content":"     *   - matches multiple dates","lastModifiedDate":"2022-10-26"},{"lineNumber":174,"author":{"gitId":"jehousoh"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"jehousoh"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"jehousoh"},"content":"     *   - query date matches part of a sentence date","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"jehousoh"},"content":"     *   - sentence date matches part of the query date","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"jehousoh"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"jehousoh"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"jehousoh"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":181,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":182,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":183,"author":{"gitId":"jehousoh"},"content":"    public void containsDateIgnoreHyphenIgnoreSpace_validInputs_correctResult() {","lastModifiedDate":"2022-10-26"},{"lineNumber":184,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":185,"author":{"gitId":"jehousoh"},"content":"        // Empty sentence","lastModifiedDate":"2022-10-26"},{"lineNumber":186,"author":{"gitId":"jehousoh"},"content":"        assertFalse(StringUtil.containsDateIgnoreHyphenIgnoreSpace(\"\", \"13/03/22\")); // Boundary case","lastModifiedDate":"2022-10-26"},{"lineNumber":187,"author":{"gitId":"jehousoh"},"content":"        assertFalse(StringUtil.containsDateIgnoreHyphenIgnoreSpace(\"    \", \"13/03/22\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":188,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":189,"author":{"gitId":"jehousoh"},"content":"        // Sentence date bigger than query date","lastModifiedDate":"2022-10-26"},{"lineNumber":190,"author":{"gitId":"jehousoh"},"content":"        assertFalse(StringUtil.containsDateIgnoreHyphenIgnoreSpace(\"13/03/22\", \"13/03\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":191,"author":{"gitId":"jehousoh"},"content":"        // Query date bigger than sentence date","lastModifiedDate":"2022-10-26"},{"lineNumber":192,"author":{"gitId":"jehousoh"},"content":"        assertFalse(StringUtil.containsDateIgnoreHyphenIgnoreSpace(\"13/03/22\", \"13/03/2022\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":193,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":194,"author":{"gitId":"jehousoh"},"content":"        // Sentence has extra spaces","lastModifiedDate":"2022-10-26"},{"lineNumber":195,"author":{"gitId":"jehousoh"},"content":"        assertTrue(StringUtil.containsIsRoomCleanIgnoreCase(\"  13/03/22  14/03/22  \", \"13/03/22\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":196,"author":{"gitId":"jehousoh"},"content":"        // Only one isRoomClean in sentence","lastModifiedDate":"2022-10-26"},{"lineNumber":197,"author":{"gitId":"jehousoh"},"content":"        assertTrue(StringUtil.containsIsRoomCleanIgnoreCase(\"13/03/22\", \"13/03/22\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":198,"author":{"gitId":"jehousoh"},"content":"        // Leading/trailing spaces","lastModifiedDate":"2022-10-26"},{"lineNumber":199,"author":{"gitId":"jehousoh"},"content":"        assertTrue(StringUtil.containsDateIgnoreHyphenIgnoreSpace(\"13/03/22\", \"  13/03/22  \"));","lastModifiedDate":"2022-10-26"},{"lineNumber":200,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":201,"author":{"gitId":"jehousoh"},"content":"        // Matches dates in sentence with multiple dates","lastModifiedDate":"2022-10-26"},{"lineNumber":202,"author":{"gitId":"jehousoh"},"content":"        assertTrue(StringUtil.containsDateIgnoreHyphenIgnoreSpace(\"13/03/22 14/03/22 15/03/22\", \"13/03/22\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":203,"author":{"gitId":"jehousoh"},"content":"        assertTrue(StringUtil.containsDateIgnoreHyphenIgnoreSpace(\"13/03/22 14/03/22 15/03/22\", \"14/03/22\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":204,"author":{"gitId":"jehousoh"},"content":"        assertTrue(StringUtil.containsDateIgnoreHyphenIgnoreSpace(\"13/03/22 14/03/22 15/03/22\", \"15/03/22\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":205,"author":{"gitId":"jehousoh"},"content":"        assertTrue(StringUtil.containsDateIgnoreHyphenIgnoreSpace(\"13/03/22 13/03/22 13/03/22\", \"13/03/22\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":206,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":207,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":208,"author":{"gitId":"jehousoh"},"content":"    //---------------- Tests for containsIsRoomCleanIgnoreCase --------------------------------------","lastModifiedDate":"2022-10-26"},{"lineNumber":209,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":210,"author":{"gitId":"jehousoh"},"content":"    /*","lastModifiedDate":"2022-10-26"},{"lineNumber":211,"author":{"gitId":"jehousoh"},"content":"     * Invalid equivalence partitions for isRoomClean: null, empty, multiple isRoomCleans","lastModifiedDate":"2022-10-26"},{"lineNumber":212,"author":{"gitId":"jehousoh"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2022-10-26"},{"lineNumber":213,"author":{"gitId":"jehousoh"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2022-10-26"},{"lineNumber":214,"author":{"gitId":"jehousoh"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":215,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":216,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":217,"author":{"gitId":"jehousoh"},"content":"    public void containsIsRoomCleanIgnoreCase_nullIsRoomClean_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":218,"author":{"gitId":"jehousoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsIsRoomCleanIgnoreCase(\"yes\", null));","lastModifiedDate":"2022-10-26"},{"lineNumber":219,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":220,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":221,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":222,"author":{"gitId":"jehousoh"},"content":"    public void containsIsRoomCleanIgnoreCase_emptyIsRoomClean_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":223,"author":{"gitId":"jehousoh"},"content":"        assertThrows(IllegalArgumentException.class, \"IsRoomClean parameter cannot be empty\", ()","lastModifiedDate":"2022-10-26"},{"lineNumber":224,"author":{"gitId":"jehousoh"},"content":"                -\u003e StringUtil.containsIsRoomCleanIgnoreCase(\"yes\", \"  \"));","lastModifiedDate":"2022-10-26"},{"lineNumber":225,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":226,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":227,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":228,"author":{"gitId":"jehousoh"},"content":"    public void containsIsRoomCleanIgnoreCase_multipleIsRoomCleans_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":229,"author":{"gitId":"jehousoh"},"content":"        assertThrows(IllegalArgumentException.class, \"IsRoomClean parameter should be a single IsRoomClean\", ()","lastModifiedDate":"2022-10-26"},{"lineNumber":230,"author":{"gitId":"jehousoh"},"content":"                -\u003e StringUtil.containsIsRoomCleanIgnoreCase(\"yes\", \"yes no\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":231,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":232,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":233,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":234,"author":{"gitId":"jehousoh"},"content":"    public void containsIsRoomCleanIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":235,"author":{"gitId":"jehousoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsIsRoomCleanIgnoreCase(null, \"yes\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":236,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":237,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":238,"author":{"gitId":"jehousoh"},"content":"    /*","lastModifiedDate":"2022-10-26"},{"lineNumber":239,"author":{"gitId":"jehousoh"},"content":"     * Valid equivalence partitions for isRoomClean:","lastModifiedDate":"2022-10-26"},{"lineNumber":240,"author":{"gitId":"jehousoh"},"content":"     *   - valid isRoomClean","lastModifiedDate":"2022-10-26"},{"lineNumber":241,"author":{"gitId":"jehousoh"},"content":"     *   - isRoomClean with leading/trailing spaces","lastModifiedDate":"2022-10-26"},{"lineNumber":242,"author":{"gitId":"jehousoh"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":243,"author":{"gitId":"jehousoh"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2022-10-26"},{"lineNumber":244,"author":{"gitId":"jehousoh"},"content":"     *   - empty string","lastModifiedDate":"2022-10-26"},{"lineNumber":245,"author":{"gitId":"jehousoh"},"content":"     *   - one isRoomClean","lastModifiedDate":"2022-10-26"},{"lineNumber":246,"author":{"gitId":"jehousoh"},"content":"     *   - multiple isRoomCleans","lastModifiedDate":"2022-10-26"},{"lineNumber":247,"author":{"gitId":"jehousoh"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2022-10-26"},{"lineNumber":248,"author":{"gitId":"jehousoh"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":249,"author":{"gitId":"jehousoh"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2022-10-26"},{"lineNumber":250,"author":{"gitId":"jehousoh"},"content":"     *   - matches first isRoomClean in sentence","lastModifiedDate":"2022-10-26"},{"lineNumber":251,"author":{"gitId":"jehousoh"},"content":"     *   - last isRoomClean in sentence","lastModifiedDate":"2022-10-26"},{"lineNumber":252,"author":{"gitId":"jehousoh"},"content":"     *   - middle isRoomClean in sentence","lastModifiedDate":"2022-10-26"},{"lineNumber":253,"author":{"gitId":"jehousoh"},"content":"     *   - matches multiple isRoomCleans","lastModifiedDate":"2022-10-26"},{"lineNumber":254,"author":{"gitId":"jehousoh"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":255,"author":{"gitId":"jehousoh"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2022-10-26"},{"lineNumber":256,"author":{"gitId":"jehousoh"},"content":"     *   - query isRoomClean matches part of a sentence isRoomClean","lastModifiedDate":"2022-10-26"},{"lineNumber":257,"author":{"gitId":"jehousoh"},"content":"     *   - sentence isRoomClean matches part of the query isRoomClean","lastModifiedDate":"2022-10-26"},{"lineNumber":258,"author":{"gitId":"jehousoh"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":259,"author":{"gitId":"jehousoh"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2022-10-26"},{"lineNumber":260,"author":{"gitId":"jehousoh"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":261,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":262,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":263,"author":{"gitId":"jehousoh"},"content":"    public void containsIsRoomCleanIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2022-10-26"},{"lineNumber":264,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":265,"author":{"gitId":"jehousoh"},"content":"        // Empty sentence","lastModifiedDate":"2022-10-26"},{"lineNumber":266,"author":{"gitId":"jehousoh"},"content":"        assertFalse(StringUtil.containsIsRoomCleanIgnoreCase(\"\", \"yes\")); // Boundary case","lastModifiedDate":"2022-10-26"},{"lineNumber":267,"author":{"gitId":"jehousoh"},"content":"        assertFalse(StringUtil.containsIsRoomCleanIgnoreCase(\"    \", \"yes\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":268,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":269,"author":{"gitId":"jehousoh"},"content":"        // Sentence isRoomClean bigger than query isRoomClean","lastModifiedDate":"2022-10-26"},{"lineNumber":270,"author":{"gitId":"jehousoh"},"content":"        assertFalse(StringUtil.containsIsRoomCleanIgnoreCase(\"yes\", \"ye\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":271,"author":{"gitId":"jehousoh"},"content":"        // Query isRoomClean bigger than sentence isRoomClean","lastModifiedDate":"2022-10-26"},{"lineNumber":272,"author":{"gitId":"jehousoh"},"content":"        assertFalse(StringUtil.containsIsRoomCleanIgnoreCase(\"yes\", \"yess\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":273,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":274,"author":{"gitId":"jehousoh"},"content":"        // Matches isRoomClean in the sentence, different upper/lower case letters","lastModifiedDate":"2022-10-26"},{"lineNumber":275,"author":{"gitId":"jehousoh"},"content":"        assertTrue(StringUtil.containsIsRoomCleanIgnoreCase(\"yEs no no\", \"yes\")); // First isRoomClean (boundary case)","lastModifiedDate":"2022-10-26"},{"lineNumber":276,"author":{"gitId":"jehousoh"},"content":"        assertTrue(StringUtil.containsIsRoomCleanIgnoreCase(\"yes yes No\", \"no\")); // Last isRoomClean (boundary case)","lastModifiedDate":"2022-10-26"},{"lineNumber":277,"author":{"gitId":"jehousoh"},"content":"        assertTrue(StringUtil.containsIsRoomCleanIgnoreCase(\"  yes   yes   No  \", \"yes\")); // Sentence has extra spaces","lastModifiedDate":"2022-10-26"},{"lineNumber":278,"author":{"gitId":"jehousoh"},"content":"        assertTrue(StringUtil.containsIsRoomCleanIgnoreCase(\"Yes\", \"yes\")); // Only one isRoomClean in sentence","lastModifiedDate":"2022-10-26"},{"lineNumber":279,"author":{"gitId":"jehousoh"},"content":"        assertTrue(StringUtil.containsIsRoomCleanIgnoreCase(\"yes\", \"  yes  \")); // Leading/trailing spaces","lastModifiedDate":"2022-10-26"},{"lineNumber":280,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":281,"author":{"gitId":"jehousoh"},"content":"        // Matches multiple isRoomCleans in sentence","lastModifiedDate":"2022-10-26"},{"lineNumber":282,"author":{"gitId":"jehousoh"},"content":"        assertTrue(StringUtil.containsIsRoomCleanIgnoreCase(\"YES yES nO yeS\", \"Yes\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":283,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":284,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":288,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":289,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jehousoh":159,"bryanhce":2,"-":141}},{"path":"src/test/java/seedu/guest/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.core.Messages.MESSAGE_INVALID_GUEST_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.DATE_RANGE_DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.NUMBER_OF_GUESTS_DESC_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.ROOM_DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.AddCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.CommandResult;","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.ListCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ModelManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ReadOnlyGuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.storage.JsonGuestBookStorage;","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.storage.StorageManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.testutil.GuestBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"bryanhce"},"content":"        JsonGuestBookStorage guestBookStorage \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"bryanhce"},"content":"                new JsonGuestBookStorage(temporaryFolder.resolve(\"guestBook.json\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"bryanhce"},"content":"        StorageManager storage \u003d new StorageManager(guestBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"bryanhce"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_GUEST_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"bryanhce"},"content":"        // Setup LogicManager with JsonGuestBookIoExceptionThrowingStub","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"bryanhce"},"content":"        JsonGuestBookStorage guestBookStorage \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"bryanhce"},"content":"                new JsonGuestBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionGuestBook.json\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"bryanhce"},"content":"        StorageManager storage \u003d new StorageManager(guestBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"bryanhce"},"content":"                + ROOM_DESC_AMY + DATE_RANGE_DESC_AMY + NUMBER_OF_GUESTS_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"kangzongxian"},"content":"        Guest expectedGuest \u003d new GuestBuilder(AMY).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"bryanhce"},"content":"        expectedModel.addGuest(expectedGuest);","lastModifiedDate":"2022-10-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"jehousoh"},"content":"    public void getGuestBook_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"jehousoh"},"content":"        assertEquals(logic.getGuestBook(), model.getGuestBook());","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"jehousoh"},"content":"    public void getGuestBookFilePath_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"jehousoh"},"content":"        assertEquals(logic.getGuestBookFilePath(), model.getGuestBookFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"jehousoh"},"content":"    public void getGuiSettings_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"jehousoh"},"content":"        assertEquals(logic.getGuiSettings(), model.getGuiSettings());","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"jehousoh"},"content":"    public void setGuiSettings_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"jehousoh"},"content":"        GuiSettings temp \u003d new GuiSettings();","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"jehousoh"},"content":"        logic.setGuiSettings(temp);","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"jehousoh"},"content":"        assertEquals(logic.getGuiSettings(), temp);","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"jehousoh"},"content":"    public void getFilteredGuestList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"bryanhce"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredGuestList().remove(0));","lastModifiedDate":"2022-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":158,"author":{"gitId":"bryanhce"},"content":"        Model expectedModel \u003d new ModelManager(model.getGuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"bryanhce"},"content":"    private static class JsonGuestBookIoExceptionThrowingStub extends JsonGuestBookStorage {","lastModifiedDate":"2022-10-01"},{"lineNumber":179,"author":{"gitId":"bryanhce"},"content":"        private JsonGuestBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"bryanhce"},"content":"        public void saveGuestBook(ReadOnlyGuestBook guestBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kangzongxian":3,"jehousoh":26,"bryanhce":35,"-":123,"JustinPeng13":1}},{"path":"src/test/java/seedu/guest/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ModelManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.testutil.GuestBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"/**","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":" */","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"    private Model model;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"        model \u003d new ModelManager(getTypicalGuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"jehousoh"},"content":"    public void execute_newGuest_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"jehousoh"},"content":"        Guest validGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"        Model expectedModel \u003d new ModelManager(model.getGuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"        expectedModel.addGuest(validGuest);","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"        assertCommandSuccess(new AddCommand(validGuest), model,","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validGuest), expectedModel);","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":39,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"bryanhce"},"content":"    public void execute_duplicateGuest_throwsCommandException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"        Guest guestInList \u003d model.getGuestBook().getGuestList().get(0);","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"bryanhce"},"content":"        assertCommandFailure(new AddCommand(guestInList), model, AddCommand.MESSAGE_DUPLICATE_GUEST);","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"kangzongxian":3,"jehousoh":3,"bryanhce":40}},{"path":"src/test/java/seedu/guest/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.GuiSettings;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.GuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ReadOnlyGuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.testutil.GuestBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"    public void constructor_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"jehousoh"},"content":"    public void execute_guestAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jehousoh"},"content":"        ModelStubAcceptingGuestAdded modelStub \u003d new ModelStubAcceptingGuestAdded();","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"jehousoh"},"content":"        Guest validGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"        CommandResult commandResult \u003d new AddCommand(validGuest).execute(modelStub);","lastModifiedDate":"2022-10-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validGuest), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"bryanhce"},"content":"        assertEquals(Arrays.asList(validGuest), modelStub.guestsAdded);","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"jehousoh"},"content":"    public void execute_duplicateGuest_throwsCommandException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jehousoh"},"content":"        Guest validGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"bryanhce"},"content":"        AddCommand addCommand \u003d new AddCommand(validGuest);","lastModifiedDate":"2022-10-01"},{"lineNumber":48,"author":{"gitId":"bryanhce"},"content":"        ModelStub modelStub \u003d new ModelStubWithGuest(validGuest);","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"bryanhce"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_GUEST, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"kangzongxian"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"kangzongxian"},"content":"    public void execute_roomOccupied_throwsCommandException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"kangzongxian"},"content":"        Guest anotherGuest \u003d new GuestBuilder().withName(\"Anderson\").build();","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"kangzongxian"},"content":"        Guest validGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"kangzongxian"},"content":"        AddCommand addCommand \u003d new AddCommand(anotherGuest);","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"kangzongxian"},"content":"        ModelStub modelStub \u003d new ModelStubWithGuest(validGuest);","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"kangzongxian"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_ROOM_OCCUPIED, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"jehousoh"},"content":"        Guest alice \u003d new GuestBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"jehousoh"},"content":"        Guest bob \u003d new GuestBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"bryanhce"},"content":"        // different guest -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"bryanhce"},"content":"        public Path getGuestBookFilePath() {","lastModifiedDate":"2022-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"bryanhce"},"content":"        public void setGuestBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-10-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"bryanhce"},"content":"        public void addGuest(Guest guest) {","lastModifiedDate":"2022-10-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"bryanhce"},"content":"        public void setGuestBook(ReadOnlyGuestBook newData) {","lastModifiedDate":"2022-10-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"bryanhce"},"content":"        public ReadOnlyGuestBook getGuestBook() {","lastModifiedDate":"2022-10-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"bryanhce"},"content":"        public boolean hasGuest(Guest guest) {","lastModifiedDate":"2022-10-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"kangzongxian"},"content":"        @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":142,"author":{"gitId":"kangzongxian"},"content":"        public boolean hasSameRoom(Guest guest) {","lastModifiedDate":"2022-10-25"},{"lineNumber":143,"author":{"gitId":"kangzongxian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-25"},{"lineNumber":144,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":145,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"bryanhce"},"content":"        public void deleteGuest(Guest target) {","lastModifiedDate":"2022-10-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"bryanhce"},"content":"        public void setGuest(Guest target, Guest editedGuest) {","lastModifiedDate":"2022-10-01"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"bryanhce"},"content":"        public ObservableList\u003cGuest\u003e getFilteredGuestList() {","lastModifiedDate":"2022-10-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"bryanhce"},"content":"        public void updateFilteredGuestList(Predicate\u003cGuest\u003e predicate) {","lastModifiedDate":"2022-10-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"bryanhce"},"content":"     * A Model stub that contains a single guest.","lastModifiedDate":"2022-10-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"bryanhce"},"content":"    private class ModelStubWithGuest extends ModelStub {","lastModifiedDate":"2022-10-04"},{"lineNumber":171,"author":{"gitId":"bryanhce"},"content":"        private final Guest guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":173,"author":{"gitId":"bryanhce"},"content":"        ModelStubWithGuest(Guest guest) {","lastModifiedDate":"2022-10-04"},{"lineNumber":174,"author":{"gitId":"bryanhce"},"content":"            requireNonNull(guest);","lastModifiedDate":"2022-10-01"},{"lineNumber":175,"author":{"gitId":"bryanhce"},"content":"            this.guest \u003d guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"bryanhce"},"content":"        public boolean hasGuest(Guest guest) {","lastModifiedDate":"2022-10-01"},{"lineNumber":180,"author":{"gitId":"bryanhce"},"content":"            requireNonNull(guest);","lastModifiedDate":"2022-10-01"},{"lineNumber":181,"author":{"gitId":"bryanhce"},"content":"            return this.guest.isSameGuest(guest);","lastModifiedDate":"2022-10-01"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":184,"author":{"gitId":"kangzongxian"},"content":"        @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":185,"author":{"gitId":"kangzongxian"},"content":"        public boolean hasSameRoom(Guest guest) {","lastModifiedDate":"2022-10-25"},{"lineNumber":186,"author":{"gitId":"kangzongxian"},"content":"            requireNonNull(guest);","lastModifiedDate":"2022-10-25"},{"lineNumber":187,"author":{"gitId":"kangzongxian"},"content":"            return this.guest.isSameRoom(guest);","lastModifiedDate":"2022-10-25"},{"lineNumber":188,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"bryanhce"},"content":"     * A Model stub that always accept the guest being added.","lastModifiedDate":"2022-10-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"bryanhce"},"content":"    private class ModelStubAcceptingGuestAdded extends ModelStub {","lastModifiedDate":"2022-10-04"},{"lineNumber":195,"author":{"gitId":"bryanhce"},"content":"        final ArrayList\u003cGuest\u003e guestsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"bryanhce"},"content":"        public boolean hasGuest(Guest guest) {","lastModifiedDate":"2022-10-01"},{"lineNumber":199,"author":{"gitId":"bryanhce"},"content":"            requireNonNull(guest);","lastModifiedDate":"2022-10-01"},{"lineNumber":200,"author":{"gitId":"bryanhce"},"content":"            return guestsAdded.stream().anyMatch(guest::isSameGuest);","lastModifiedDate":"2022-10-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"kangzongxian"},"content":"        @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":204,"author":{"gitId":"kangzongxian"},"content":"        public boolean hasSameRoom(Guest guest) {","lastModifiedDate":"2022-10-25"},{"lineNumber":205,"author":{"gitId":"kangzongxian"},"content":"            requireNonNull(guest);","lastModifiedDate":"2022-10-25"},{"lineNumber":206,"author":{"gitId":"kangzongxian"},"content":"            return guestsAdded.stream().anyMatch(guest::isSameRoom);","lastModifiedDate":"2022-10-25"},{"lineNumber":207,"author":{"gitId":"kangzongxian"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":208,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"bryanhce"},"content":"        public void addGuest(Guest guest) {","lastModifiedDate":"2022-10-01"},{"lineNumber":211,"author":{"gitId":"bryanhce"},"content":"            requireNonNull(guest);","lastModifiedDate":"2022-10-01"},{"lineNumber":212,"author":{"gitId":"bryanhce"},"content":"            guestsAdded.add(guest);","lastModifiedDate":"2022-10-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"bryanhce"},"content":"        public ReadOnlyGuestBook getGuestBook() {","lastModifiedDate":"2022-10-01"},{"lineNumber":217,"author":{"gitId":"bryanhce"},"content":"            return new GuestBook();","lastModifiedDate":"2022-10-01"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"kangzongxian":27,"jehousoh":8,"bryanhce":47,"-":139}},{"path":"src/test/java/seedu/guest/logic/commands/BillCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinPeng13"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"JustinPeng13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"JustinPeng13"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"JustinPeng13"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_BILL_NEGATIVE;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_BILL_POSITIVE;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_BILL_ZERO;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.showGuestAtIndex;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.testutil.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.testutil.TypicalIndexes.INDEX_FIRST_GUEST;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.testutil.TypicalIndexes.INDEX_SECOND_GUEST;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"JustinPeng13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.commons.core.Messages;","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.ModelManager;","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.UserPrefs;","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.Bill;","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.testutil.GuestBuilder;","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"JustinPeng13"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"JustinPeng13"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"JustinPeng13"},"content":" * {@code BillCommand}.","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"JustinPeng13"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"JustinPeng13"},"content":"public class BillCommandTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"JustinPeng13"},"content":"    private Model model \u003d new ModelManager(getTypicalGuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"JustinPeng13"},"content":"    public void execute_addBillUnfilteredList_success() {","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"JustinPeng13"},"content":"        Guest guestToBill \u003d model.getFilteredGuestList().get(INDEX_FIRST_GUEST.getZeroBased()); // bill \u003d 0","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"JustinPeng13"},"content":"        BillCommand billCommand \u003d new BillCommand(INDEX_FIRST_GUEST, new Bill(VALID_BILL_POSITIVE)); // bill + 1 \u003d 1","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"JustinPeng13"},"content":"        GuestBuilder guestInList \u003d new GuestBuilder(guestToBill);","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"JustinPeng13"},"content":"        Guest billedGuest \u003d guestInList.withBill(VALID_BILL_POSITIVE).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"jehousoh"},"content":"        String expectedMessage \u003d String.format(BillCommand.MESSAGE_SUCCESS, billedGuest);","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"JustinPeng13"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getGuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"JustinPeng13"},"content":"        expectedModel.setGuest(guestToBill, billedGuest);","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"JustinPeng13"},"content":"        assertCommandSuccess(billCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"JustinPeng13"},"content":"    public void execute_subtractBillUnfilteredList_success() {","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"JustinPeng13"},"content":"        Guest guestToBill \u003d model.getFilteredGuestList().get(INDEX_SECOND_GUEST.getZeroBased()); // bill \u003d 1","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"JustinPeng13"},"content":"        BillCommand billCommand \u003d new BillCommand(INDEX_SECOND_GUEST, new Bill(VALID_BILL_NEGATIVE)); // bill - 1 \u003d 0","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"JustinPeng13"},"content":"        GuestBuilder guestInList \u003d new GuestBuilder(guestToBill);","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"JustinPeng13"},"content":"        Guest billedGuest \u003d guestInList.withBill(VALID_BILL_ZERO).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"jehousoh"},"content":"        String expectedMessage \u003d String.format(BillCommand.MESSAGE_SUCCESS, billedGuest);","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"JustinPeng13"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getGuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"JustinPeng13"},"content":"        expectedModel.setGuest(guestToBill, billedGuest);","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"JustinPeng13"},"content":"        assertCommandSuccess(billCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"JustinPeng13"},"content":"    public void execute_unchangedBillUnfilteredList_success() {","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"JustinPeng13"},"content":"        Guest guestToBill \u003d model.getFilteredGuestList().get(INDEX_SECOND_GUEST.getZeroBased()); // bill \u003d 1","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"JustinPeng13"},"content":"        BillCommand billCommand \u003d new BillCommand(INDEX_SECOND_GUEST, new Bill()); // bill + 0 \u003d 1","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"JustinPeng13"},"content":"        GuestBuilder guestInList \u003d new GuestBuilder(guestToBill);","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"JustinPeng13"},"content":"        Guest billedGuest \u003d guestInList.withBill(VALID_BILL_POSITIVE).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"jehousoh"},"content":"        String expectedMessage \u003d String.format(BillCommand.MESSAGE_SUCCESS, billedGuest);","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"JustinPeng13"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getGuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"JustinPeng13"},"content":"        expectedModel.setGuest(guestToBill, billedGuest);","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"JustinPeng13"},"content":"        assertCommandSuccess(billCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"JustinPeng13"},"content":"    public void execute_addBillFilteredList_success() {","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"JustinPeng13"},"content":"        showGuestAtIndex(model, INDEX_FIRST_GUEST);","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"JustinPeng13"},"content":"        Guest guestToBill \u003d model.getFilteredGuestList().get(INDEX_FIRST_GUEST.getZeroBased()); // bill \u003d 0","lastModifiedDate":"2022-10-18"},{"lineNumber":88,"author":{"gitId":"JustinPeng13"},"content":"        BillCommand billCommand \u003d new BillCommand(INDEX_FIRST_GUEST, new Bill(VALID_BILL_POSITIVE)); // bill + 1 \u003d 1","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"JustinPeng13"},"content":"        GuestBuilder guestInList \u003d new GuestBuilder(guestToBill);","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"JustinPeng13"},"content":"        Guest billedGuest \u003d guestInList.withBill(VALID_BILL_POSITIVE).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"jehousoh"},"content":"        String expectedMessage \u003d String.format(BillCommand.MESSAGE_SUCCESS, billedGuest);","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"JustinPeng13"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getGuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":96,"author":{"gitId":"JustinPeng13"},"content":"        expectedModel.setGuest(guestToBill, billedGuest);","lastModifiedDate":"2022-10-17"},{"lineNumber":97,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"JustinPeng13"},"content":"        assertCommandSuccess(billCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":99,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":100,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":101,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":102,"author":{"gitId":"JustinPeng13"},"content":"    public void execute_subtractBillFilteredList_success() {","lastModifiedDate":"2022-10-17"},{"lineNumber":103,"author":{"gitId":"JustinPeng13"},"content":"        showGuestAtIndex(model, INDEX_SECOND_GUEST);","lastModifiedDate":"2022-10-17"},{"lineNumber":104,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":105,"author":{"gitId":"JustinPeng13"},"content":"        Guest guestToBill \u003d model.getFilteredGuestList().get(INDEX_FIRST_GUEST.getZeroBased()); // bill \u003d 1","lastModifiedDate":"2022-10-17"},{"lineNumber":106,"author":{"gitId":"JustinPeng13"},"content":"        BillCommand billCommand \u003d new BillCommand(INDEX_FIRST_GUEST, new Bill(VALID_BILL_NEGATIVE)); // bill - 1 \u003d 0","lastModifiedDate":"2022-10-18"},{"lineNumber":107,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":108,"author":{"gitId":"JustinPeng13"},"content":"        GuestBuilder guestInList \u003d new GuestBuilder(guestToBill);","lastModifiedDate":"2022-10-17"},{"lineNumber":109,"author":{"gitId":"JustinPeng13"},"content":"        Guest billedGuest \u003d guestInList.withBill(VALID_BILL_ZERO).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":110,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":111,"author":{"gitId":"jehousoh"},"content":"        String expectedMessage \u003d String.format(BillCommand.MESSAGE_SUCCESS, billedGuest);","lastModifiedDate":"2022-10-26"},{"lineNumber":112,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":113,"author":{"gitId":"JustinPeng13"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getGuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"JustinPeng13"},"content":"        expectedModel.setGuest(guestToBill, billedGuest);","lastModifiedDate":"2022-10-17"},{"lineNumber":115,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":116,"author":{"gitId":"JustinPeng13"},"content":"        assertCommandSuccess(billCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":117,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":118,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":119,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":120,"author":{"gitId":"JustinPeng13"},"content":"    public void execute_unchangedBillFilteredList_success() {","lastModifiedDate":"2022-10-17"},{"lineNumber":121,"author":{"gitId":"JustinPeng13"},"content":"        showGuestAtIndex(model, INDEX_SECOND_GUEST);","lastModifiedDate":"2022-10-17"},{"lineNumber":122,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":123,"author":{"gitId":"JustinPeng13"},"content":"        Guest guestToBill \u003d model.getFilteredGuestList().get(INDEX_FIRST_GUEST.getZeroBased()); // bill \u003d 1","lastModifiedDate":"2022-10-17"},{"lineNumber":124,"author":{"gitId":"JustinPeng13"},"content":"        BillCommand billCommand \u003d new BillCommand(INDEX_FIRST_GUEST, new Bill()); // bill + 0 \u003d 1","lastModifiedDate":"2022-10-18"},{"lineNumber":125,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":126,"author":{"gitId":"JustinPeng13"},"content":"        GuestBuilder guestInList \u003d new GuestBuilder(guestToBill);","lastModifiedDate":"2022-10-17"},{"lineNumber":127,"author":{"gitId":"JustinPeng13"},"content":"        Guest billedGuest \u003d guestInList.withBill(VALID_BILL_POSITIVE).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":128,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":129,"author":{"gitId":"jehousoh"},"content":"        String expectedMessage \u003d String.format(BillCommand.MESSAGE_SUCCESS, billedGuest);","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":131,"author":{"gitId":"JustinPeng13"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getGuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":132,"author":{"gitId":"JustinPeng13"},"content":"        expectedModel.setGuest(guestToBill, billedGuest);","lastModifiedDate":"2022-10-17"},{"lineNumber":133,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":134,"author":{"gitId":"JustinPeng13"},"content":"        assertCommandSuccess(billCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":135,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":136,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":137,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":138,"author":{"gitId":"JustinPeng13"},"content":"    public void execute_negativeBillUnfilteredList_failure() {","lastModifiedDate":"2022-10-18"},{"lineNumber":139,"author":{"gitId":"JustinPeng13"},"content":"        Guest guestToBill \u003d model.getFilteredGuestList().get(INDEX_FIRST_GUEST.getZeroBased()); // bill \u003d 0","lastModifiedDate":"2022-10-18"},{"lineNumber":140,"author":{"gitId":"JustinPeng13"},"content":"        BillCommand billCommand \u003d new BillCommand(INDEX_FIRST_GUEST, new Bill(VALID_BILL_NEGATIVE)); // bill - 1 \u003d -1","lastModifiedDate":"2022-10-18"},{"lineNumber":141,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":142,"author":{"gitId":"JustinPeng13"},"content":"        assertCommandFailure(billCommand, model, BillCommand.MESSAGE_NEGATIVE_BILL);","lastModifiedDate":"2022-10-18"},{"lineNumber":143,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":144,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":145,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":146,"author":{"gitId":"JustinPeng13"},"content":"    public void execute_negativeBillFilteredList_success() {","lastModifiedDate":"2022-10-18"},{"lineNumber":147,"author":{"gitId":"JustinPeng13"},"content":"        showGuestAtIndex(model, INDEX_SECOND_GUEST);","lastModifiedDate":"2022-10-18"},{"lineNumber":148,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":149,"author":{"gitId":"JustinPeng13"},"content":"        Guest guestToBill \u003d model.getFilteredGuestList().get(INDEX_FIRST_GUEST.getZeroBased()); // bill \u003d 1","lastModifiedDate":"2022-10-18"},{"lineNumber":150,"author":{"gitId":"JustinPeng13"},"content":"        BillCommand billCommand \u003d new BillCommand(INDEX_FIRST_GUEST, new Bill(\"-1.01\")); // bill - 1.01 \u003d -0.01","lastModifiedDate":"2022-10-18"},{"lineNumber":151,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":152,"author":{"gitId":"JustinPeng13"},"content":"        assertCommandFailure(billCommand, model, BillCommand.MESSAGE_NEGATIVE_BILL);","lastModifiedDate":"2022-10-18"},{"lineNumber":153,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":154,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":155,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":156,"author":{"gitId":"JustinPeng13"},"content":"    public void execute_invalidGuestIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-17"},{"lineNumber":157,"author":{"gitId":"JustinPeng13"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredGuestList().size() + 1);","lastModifiedDate":"2022-10-17"},{"lineNumber":158,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":159,"author":{"gitId":"JustinPeng13"},"content":"        BillCommand billCommand \u003d new BillCommand(outOfBoundIndex, new Bill());","lastModifiedDate":"2022-10-17"},{"lineNumber":160,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":161,"author":{"gitId":"JustinPeng13"},"content":"        assertCommandFailure(billCommand, model, Messages.MESSAGE_INVALID_GUEST_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":162,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":163,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":164,"author":{"gitId":"JustinPeng13"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":165,"author":{"gitId":"JustinPeng13"},"content":"     * Bill from filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-10-17"},{"lineNumber":166,"author":{"gitId":"JustinPeng13"},"content":"     * but smaller than size of guest book","lastModifiedDate":"2022-10-17"},{"lineNumber":167,"author":{"gitId":"JustinPeng13"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":168,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":169,"author":{"gitId":"JustinPeng13"},"content":"    public void execute_invalidGuestIndexFilteredList_failure() {","lastModifiedDate":"2022-10-17"},{"lineNumber":170,"author":{"gitId":"JustinPeng13"},"content":"        showGuestAtIndex(model, INDEX_FIRST_GUEST);","lastModifiedDate":"2022-10-17"},{"lineNumber":171,"author":{"gitId":"JustinPeng13"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_GUEST;","lastModifiedDate":"2022-10-17"},{"lineNumber":172,"author":{"gitId":"JustinPeng13"},"content":"        // ensures that outOfBoundIndex is still in bounds of guest book list","lastModifiedDate":"2022-10-17"},{"lineNumber":173,"author":{"gitId":"JustinPeng13"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getGuestBook().getGuestList().size());","lastModifiedDate":"2022-10-17"},{"lineNumber":174,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":175,"author":{"gitId":"JustinPeng13"},"content":"        BillCommand billCommand \u003d new BillCommand(outOfBoundIndex, new Bill());","lastModifiedDate":"2022-10-17"},{"lineNumber":176,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":177,"author":{"gitId":"JustinPeng13"},"content":"        assertCommandFailure(billCommand, model, Messages.MESSAGE_INVALID_GUEST_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":178,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":179,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":180,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":181,"author":{"gitId":"JustinPeng13"},"content":"    public void equals() {","lastModifiedDate":"2022-10-17"},{"lineNumber":182,"author":{"gitId":"JustinPeng13"},"content":"        final BillCommand standardCommand \u003d new BillCommand(INDEX_FIRST_GUEST, new Bill(VALID_BILL_POSITIVE));","lastModifiedDate":"2022-10-17"},{"lineNumber":183,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":184,"author":{"gitId":"JustinPeng13"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":185,"author":{"gitId":"JustinPeng13"},"content":"        BillCommand commandWithSameValues \u003d new BillCommand(INDEX_FIRST_GUEST, new Bill(VALID_BILL_POSITIVE));","lastModifiedDate":"2022-10-17"},{"lineNumber":186,"author":{"gitId":"JustinPeng13"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2022-10-17"},{"lineNumber":187,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":188,"author":{"gitId":"JustinPeng13"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":189,"author":{"gitId":"JustinPeng13"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2022-10-17"},{"lineNumber":190,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":191,"author":{"gitId":"JustinPeng13"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":192,"author":{"gitId":"JustinPeng13"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2022-10-17"},{"lineNumber":193,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":194,"author":{"gitId":"JustinPeng13"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":195,"author":{"gitId":"JustinPeng13"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2022-10-17"},{"lineNumber":196,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":197,"author":{"gitId":"JustinPeng13"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":198,"author":{"gitId":"JustinPeng13"},"content":"        assertNotEquals(standardCommand, new BillCommand(INDEX_SECOND_GUEST, new Bill(VALID_BILL_POSITIVE)));","lastModifiedDate":"2022-10-17"},{"lineNumber":199,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":200,"author":{"gitId":"JustinPeng13"},"content":"        // different value -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":201,"author":{"gitId":"JustinPeng13"},"content":"        assertNotEquals(standardCommand, new BillCommand(INDEX_FIRST_GUEST, new Bill(VALID_BILL_NEGATIVE)));","lastModifiedDate":"2022-10-17"},{"lineNumber":202,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":203,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":204,"author":{"gitId":"JustinPeng13"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"jehousoh":6,"JustinPeng13":198}},{"path":"src/test/java/seedu/guest/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.GuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ModelManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"    public void execute_emptyGuestBook_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"    public void execute_nonEmptyGuestBook_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"        Model model \u003d new ModelManager(getTypicalGuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalGuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"        expectedModel.setGuestBook(new GuestBook());","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"kangzongxian":3,"bryanhce":9,"-":20}},{"path":"src/test/java/seedu/guest/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"jehousoh"},"content":"    public void getShowHelpFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"jehousoh"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"jehousoh"},"content":"        assertEquals(commandResult.isShowHelp(), false);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"jehousoh"},"content":"    public void getShowHelpTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"jehousoh"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", true, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"jehousoh"},"content":"        assertEquals(commandResult.isShowHelp(), true);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"jehousoh"},"content":"    public void getExitFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"jehousoh"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"jehousoh"},"content":"        assertEquals(commandResult.isExit(), false);","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"jehousoh"},"content":"    public void getExitTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"jehousoh"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", true, true);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"jehousoh"},"content":"        assertEquals(commandResult.isExit(), true);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"jehousoh":24,"bryanhce":1,"-":53}},{"path":"src/test/java/seedu/guest/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_BILL;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_DATE_RANGE;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_IS_ROOM_CLEAN;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_NUMBER_OF_GUESTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"Lan-Jingbo"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_ROOM;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.index.Index;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.GuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.model.guest.GuestContainsKeywordsPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.testutil.EditGuestDescriptorBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"kangzongxian"},"content":"    public static final String VALID_ROOM_AMY \u003d \"05-73\";","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"kangzongxian"},"content":"    public static final String VALID_ROOM_BOB \u003d \"07-77\";","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"JustinPeng13"},"content":"    public static final String VALID_DATE_RANGE_AMY \u003d \"13/09/22 - 15/09/22\";","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"JustinPeng13"},"content":"    public static final String VALID_DATE_RANGE_BOB \u003d \"29/05/23 - 03/06/23\";","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"jehousoh"},"content":"    public static final String VALID_NUMBER_OF_GUESTS_AMY \u003d \"1\";","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"jehousoh"},"content":"    public static final String VALID_NUMBER_OF_GUESTS_BOB \u003d \"2\";","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"bryanhce"},"content":"    public static final String VALID_IS_ROOM_CLEAN_AMY \u003d \"yes\";","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"    public static final String VALID_IS_ROOM_CLEAN_BOB \u003d \"no\";","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"Lan-Jingbo"},"content":"    public static final String VALID_REQUEST_AMY \u003d \"Fix television\";","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"Lan-Jingbo"},"content":"    public static final String VALID_REQUEST_BOB \u003d \"Fix room circuit\";","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"JustinPeng13"},"content":"    public static final String VALID_BILL_POSITIVE \u003d \"1\";","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"JustinPeng13"},"content":"    public static final String VALID_BILL_ZERO \u003d \"0\";","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"JustinPeng13"},"content":"    public static final String VALID_BILL_NEGATIVE \u003d \"-1\";","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"kangzongxian"},"content":"    public static final String ROOM_DESC_AMY \u003d \" \" + PREFIX_ROOM + VALID_ROOM_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"kangzongxian"},"content":"    public static final String ROOM_DESC_BOB \u003d \" \" + PREFIX_ROOM + VALID_ROOM_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"JustinPeng13"},"content":"    public static final String DATE_RANGE_DESC_AMY \u003d \" \" + PREFIX_DATE_RANGE + VALID_DATE_RANGE_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"JustinPeng13"},"content":"    public static final String DATE_RANGE_DESC_BOB \u003d \" \" + PREFIX_DATE_RANGE + VALID_DATE_RANGE_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"jehousoh"},"content":"    public static final String NUMBER_OF_GUESTS_DESC_AMY \u003d \" \" + PREFIX_NUMBER_OF_GUESTS + VALID_NUMBER_OF_GUESTS_AMY;","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"jehousoh"},"content":"    public static final String NUMBER_OF_GUESTS_DESC_BOB \u003d \" \" + PREFIX_NUMBER_OF_GUESTS + VALID_NUMBER_OF_GUESTS_BOB;","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"bryanhce"},"content":"    public static final String IS_ROOM_CLEAN_DESC_AMY \u003d \" \" + PREFIX_IS_ROOM_CLEAN + VALID_IS_ROOM_CLEAN_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"bryanhce"},"content":"    public static final String IS_ROOM_CLEAN_DESC_BOB \u003d \" \" + PREFIX_IS_ROOM_CLEAN + VALID_IS_ROOM_CLEAN_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"Lan-Jingbo"},"content":"    public static final String REQUEST_DESC_AMY \u003d \" \" + PREFIX_REQUEST + VALID_REQUEST_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"Lan-Jingbo"},"content":"    public static final String REQUEST_DESC_BOB \u003d \" \" + PREFIX_REQUEST + VALID_REQUEST_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"JustinPeng13"},"content":"    public static final String BILL_DESC_POSITIVE \u003d \" \" + PREFIX_BILL + VALID_BILL_POSITIVE;","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"JustinPeng13"},"content":"    public static final String BILL_DESC_ZERO \u003d \" \" + PREFIX_BILL + VALID_BILL_ZERO;","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"JustinPeng13"},"content":"    public static final String BILL_DESC_NEGATIVE \u003d \" \" + PREFIX_BILL + VALID_BILL_NEGATIVE;","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"kangzongxian"},"content":"    public static final String INVALID_ROOM_DESC \u003d \" \" + PREFIX_ROOM + \"06-23!\"; // \u0027!\u0027 not allowed in room numbers","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"bryanhce"},"content":"    public static final String INVALID_DATE_RANGE_DESC \u003d \" \" + PREFIX_DATE_RANGE","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"bryanhce"},"content":"            + \"13/09/22 - 13/09/22\"; // end date is not later than start date","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"bryanhce"},"content":"    public static final String INVALID_NUMBER_OF_GUESTS_DESC \u003d \" \"","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"bryanhce"},"content":"            + PREFIX_NUMBER_OF_GUESTS + \"-1\"; // \u0027-1\u0027 not allowed as numbers of guests","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"bryanhce"},"content":"    public static final String INVALID_IS_ROOM_CLEAN_DESC \u003d \" \"","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"bryanhce"},"content":"            + PREFIX_IS_ROOM_CLEAN + \"true\"; // \u0027true\u0027 not allowed as is room clean","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"JustinPeng13"},"content":"    public static final String INVALID_BILL_DESC \u003d \" \" + PREFIX_BILL + \"1?0\"; // \u0027?\u0027 not allowed in bills","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"Lan-Jingbo"},"content":"    public static final String INVALID_REQUEST \u003d \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"Lan-Jingbo"},"content":"            + PREFIX_REQUEST + (\"hi\").repeat(300); // over 500 characters","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"bryanhce"},"content":"    public static final EditCommand.EditGuestDescriptor DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":90,"author":{"gitId":"bryanhce"},"content":"    public static final EditCommand.EditGuestDescriptor DESC_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"kangzongxian"},"content":"        DESC_AMY \u003d new EditGuestDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"kangzongxian"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withRoom(VALID_ROOM_AMY)","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"kangzongxian"},"content":"                .withDateRange(VALID_DATE_RANGE_AMY)","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"bryanhce"},"content":"                .withNumberOfGuests(VALID_NUMBER_OF_GUESTS_AMY).withIsRoomClean(VALID_IS_ROOM_CLEAN_AMY).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"kangzongxian"},"content":"        DESC_BOB \u003d new EditGuestDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"kangzongxian"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withRoom(VALID_ROOM_BOB)","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"kangzongxian"},"content":"                .withDateRange(VALID_DATE_RANGE_BOB)","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"bryanhce"},"content":"                .withNumberOfGuests(VALID_NUMBER_OF_GUESTS_BOB).withIsRoomClean(VALID_IS_ROOM_CLEAN_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"bryanhce"},"content":"     * - the guest book, filtered guest list and selected guest in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"bryanhce"},"content":"        GuestBook expectedGuestBook \u003d new GuestBook(actualModel.getGuestBook());","lastModifiedDate":"2022-10-01"},{"lineNumber":139,"author":{"gitId":"bryanhce"},"content":"        List\u003cGuest\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredGuestList());","lastModifiedDate":"2022-10-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":142,"author":{"gitId":"bryanhce"},"content":"        assertEquals(expectedGuestBook, actualModel.getGuestBook());","lastModifiedDate":"2022-10-01"},{"lineNumber":143,"author":{"gitId":"bryanhce"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredGuestList());","lastModifiedDate":"2022-10-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"bryanhce"},"content":"     * Updates {@code model}\u0027s filtered list to show only the guest at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-04"},{"lineNumber":147,"author":{"gitId":"bryanhce"},"content":"     * {@code model}\u0027s guest book.","lastModifiedDate":"2022-10-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"bryanhce"},"content":"    public static void showGuestAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-04"},{"lineNumber":150,"author":{"gitId":"bryanhce"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredGuestList().size());","lastModifiedDate":"2022-10-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"bryanhce"},"content":"        Guest guest \u003d model.getFilteredGuestList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-01"},{"lineNumber":153,"author":{"gitId":"bryanhce"},"content":"        final String[] splitName \u003d guest.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-01"},{"lineNumber":154,"author":{"gitId":"jehousoh"},"content":"        model.updateFilteredGuestList(new GuestContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"bryanhce"},"content":"        assertEquals(1, model.getFilteredGuestList().size());","lastModifiedDate":"2022-10-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kangzongxian":13,"jehousoh":7,"Lan-Jingbo":7,"bryanhce":37,"-":82,"JustinPeng13":13}},{"path":"src/test/java/seedu/guest/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.showGuestAtIndex;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalIndexes.INDEX_FIRST_GUEST;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalIndexes.INDEX_SECOND_GUEST;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.Messages;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.index.Index;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ModelManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"    private Model model \u003d new ModelManager(getTypicalGuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"        Guest guestToDelete \u003d model.getFilteredGuestList().get(INDEX_FIRST_GUEST.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_GUEST);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_GUEST_SUCCESS, guestToDelete);","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getGuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"        expectedModel.deleteGuest(guestToDelete);","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"bryanhce"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredGuestList().size() + 1);","lastModifiedDate":"2022-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"bryanhce"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_GUEST_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"kangzongxian"},"content":"        showGuestAtIndex(model, INDEX_FIRST_GUEST);","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"kangzongxian"},"content":"        Guest guestToDelete \u003d model.getFilteredGuestList().get(INDEX_FIRST_GUEST.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"kangzongxian"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_GUEST);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"bryanhce"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_GUEST_SUCCESS, guestToDelete);","lastModifiedDate":"2022-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"bryanhce"},"content":"        Model expectedModel \u003d new ModelManager(model.getGuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-01"},{"lineNumber":60,"author":{"gitId":"bryanhce"},"content":"        expectedModel.deleteGuest(guestToDelete);","lastModifiedDate":"2022-10-01"},{"lineNumber":61,"author":{"gitId":"bryanhce"},"content":"        showNoGuest(expectedModel);","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"kangzongxian"},"content":"        showGuestAtIndex(model, INDEX_FIRST_GUEST);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"kangzongxian"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_GUEST;","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"bryanhce"},"content":"        // ensures that outOfBoundIndex is still in bounds of guest book list","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"bryanhce"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getGuestBook().getGuestList().size());","lastModifiedDate":"2022-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"bryanhce"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_GUEST_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"kangzongxian"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_GUEST);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"kangzongxian"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_GUEST);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"kangzongxian"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_GUEST);","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"bryanhce"},"content":"        // different guest -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"bryanhce"},"content":"    private void showNoGuest(Model model) {","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"bryanhce"},"content":"        model.updateFilteredGuestList(p -\u003e false);","lastModifiedDate":"2022-10-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"bryanhce"},"content":"        assertTrue(model.getFilteredGuestList().isEmpty());","lastModifiedDate":"2022-10-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kangzongxian":14,"bryanhce":26,"-":69}},{"path":"src/test/java/seedu/guest/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_ROOM_BOB;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.showGuestAtIndex;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalIndexes.INDEX_FIRST_GUEST;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalIndexes.INDEX_SECOND_GUEST;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.Messages;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.index.Index;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.EditCommand.EditGuestDescriptor;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.GuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ModelManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.testutil.EditGuestDescriptorBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.testutil.GuestBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"    private Model model \u003d new ModelManager(getTypicalGuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"jehousoh"},"content":"        Guest editedGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"kangzongxian"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder(editedGuest).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"kangzongxian"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_GUEST, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"bryanhce"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_GUEST_SUCCESS, editedGuest);","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"        Model expectedModel \u003d new ModelManager(new GuestBook(model.getGuestBook()), new UserPrefs());","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"bryanhce"},"content":"        expectedModel.setGuest(model.getFilteredGuestList().get(0), editedGuest);","lastModifiedDate":"2022-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"bryanhce"},"content":"        Index indexLastGuest \u003d Index.fromOneBased(model.getFilteredGuestList().size());","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"bryanhce"},"content":"        Guest lastGuest \u003d model.getFilteredGuestList().get(indexLastGuest.getZeroBased());","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"jehousoh"},"content":"        GuestBuilder guestInList \u003d new GuestBuilder(lastGuest);","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"kangzongxian"},"content":"        Guest editedGuest \u003d guestInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).withRoom(VALID_ROOM_BOB)","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"kangzongxian"},"content":"                .build();","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"kangzongxian"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"kangzongxian"},"content":"                .withPhone(VALID_PHONE_BOB).withRoom(VALID_ROOM_BOB).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"bryanhce"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastGuest, descriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"bryanhce"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_GUEST_SUCCESS, editedGuest);","lastModifiedDate":"2022-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"bryanhce"},"content":"        Model expectedModel \u003d new ModelManager(new GuestBook(model.getGuestBook()), new UserPrefs());","lastModifiedDate":"2022-10-01"},{"lineNumber":67,"author":{"gitId":"bryanhce"},"content":"        expectedModel.setGuest(lastGuest, editedGuest);","lastModifiedDate":"2022-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"kangzongxian"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_GUEST, new EditGuestDescriptor());","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"kangzongxian"},"content":"        Guest editedGuest \u003d model.getFilteredGuestList().get(INDEX_FIRST_GUEST.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"bryanhce"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_GUEST_SUCCESS, editedGuest);","lastModifiedDate":"2022-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"bryanhce"},"content":"        Model expectedModel \u003d new ModelManager(new GuestBook(model.getGuestBook()), new UserPrefs());","lastModifiedDate":"2022-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"kangzongxian"},"content":"        showGuestAtIndex(model, INDEX_FIRST_GUEST);","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"kangzongxian"},"content":"        Guest guestInFilteredList \u003d model.getFilteredGuestList().get(INDEX_FIRST_GUEST.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"kangzongxian"},"content":"        Guest editedGuest \u003d new GuestBuilder(guestInFilteredList).withName(VALID_NAME_BOB).withRoom(VALID_ROOM_BOB)","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"kangzongxian"},"content":"                .build();","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"kangzongxian"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_GUEST,","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"kangzongxian"},"content":"                new EditGuestDescriptorBuilder().withName(VALID_NAME_BOB).withRoom(VALID_ROOM_BOB)","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"kangzongxian"},"content":"                        .build());","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"bryanhce"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_GUEST_SUCCESS, editedGuest);","lastModifiedDate":"2022-10-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"bryanhce"},"content":"        Model expectedModel \u003d new ModelManager(new GuestBook(model.getGuestBook()), new UserPrefs());","lastModifiedDate":"2022-10-01"},{"lineNumber":98,"author":{"gitId":"bryanhce"},"content":"        expectedModel.setGuest(model.getFilteredGuestList().get(0), editedGuest);","lastModifiedDate":"2022-10-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"bryanhce"},"content":"    public void execute_duplicateGuestUnfilteredList_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"kangzongxian"},"content":"        Guest firstGuest \u003d model.getFilteredGuestList().get(INDEX_FIRST_GUEST.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"kangzongxian"},"content":"        EditCommand.EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder(firstGuest).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"kangzongxian"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_GUEST, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"bryanhce"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_GUEST);","lastModifiedDate":"2022-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"bryanhce"},"content":"    public void execute_duplicateGuestFilteredList_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"kangzongxian"},"content":"        showGuestAtIndex(model, INDEX_FIRST_GUEST);","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"bryanhce"},"content":"        // edit guest in filtered list into a duplicate in guest book","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"kangzongxian"},"content":"        Guest guestInList \u003d model.getGuestBook().getGuestList().get(INDEX_SECOND_GUEST.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"kangzongxian"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_GUEST,","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"kangzongxian"},"content":"                new EditGuestDescriptorBuilder(guestInList).build());","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"bryanhce"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_GUEST);","lastModifiedDate":"2022-10-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"kangzongxian"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":125,"author":{"gitId":"kangzongxian"},"content":"    public void execute_roomOccupiedFilteredList_failure() {","lastModifiedDate":"2022-10-25"},{"lineNumber":126,"author":{"gitId":"kangzongxian"},"content":"        showGuestAtIndex(model, INDEX_FIRST_GUEST);","lastModifiedDate":"2022-10-25"},{"lineNumber":127,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":128,"author":{"gitId":"kangzongxian"},"content":"        // edit guest in filtered list into a duplicate in guest book","lastModifiedDate":"2022-10-25"},{"lineNumber":129,"author":{"gitId":"kangzongxian"},"content":"        Guest guestInList \u003d model.getGuestBook().getGuestList().get(INDEX_SECOND_GUEST.getZeroBased());","lastModifiedDate":"2022-10-25"},{"lineNumber":130,"author":{"gitId":"kangzongxian"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_GUEST,","lastModifiedDate":"2022-10-25"},{"lineNumber":131,"author":{"gitId":"kangzongxian"},"content":"                new EditGuestDescriptorBuilder(guestInList).withName(\"Anderson\").build());","lastModifiedDate":"2022-10-25"},{"lineNumber":132,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":133,"author":{"gitId":"kangzongxian"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_ROOM_OCCUPIED);","lastModifiedDate":"2022-10-25"},{"lineNumber":134,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":135,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"bryanhce"},"content":"    public void execute_invalidGuestIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"bryanhce"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredGuestList().size() + 1);","lastModifiedDate":"2022-10-01"},{"lineNumber":139,"author":{"gitId":"kangzongxian"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"bryanhce"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_GUEST_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"bryanhce"},"content":"     * but smaller than size of guest book","lastModifiedDate":"2022-10-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"bryanhce"},"content":"    public void execute_invalidGuestIndexFilteredList_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":151,"author":{"gitId":"kangzongxian"},"content":"        showGuestAtIndex(model, INDEX_FIRST_GUEST);","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"kangzongxian"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_GUEST;","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"bryanhce"},"content":"        // ensures that outOfBoundIndex is still in bounds of guest book list","lastModifiedDate":"2022-10-04"},{"lineNumber":154,"author":{"gitId":"bryanhce"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getGuestBook().getGuestList().size());","lastModifiedDate":"2022-10-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"kangzongxian"},"content":"                new EditGuestDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"bryanhce"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_GUEST_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"kangzongxian"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_GUEST, DESC_AMY);","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"bryanhce"},"content":"        EditGuestDescriptor copyDescriptor \u003d new EditCommand.EditGuestDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-01"},{"lineNumber":168,"author":{"gitId":"kangzongxian"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_GUEST, copyDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"kangzongxian"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_GUEST, DESC_AMY)));","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"kangzongxian"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_GUEST, DESC_BOB)));","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"kangzongxian":48,"jehousoh":3,"bryanhce":44,"-":92}},{"path":"src/test/java/seedu/guest/logic/commands/EditGuestDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_DATE_RANGE_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_IS_ROOM_CLEAN_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_NUMBER_OF_GUESTS_BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_ROOM_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.EditCommand.EditGuestDescriptor;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.testutil.EditGuestDescriptorBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"public class EditGuestDescriptorTest {","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"        EditGuestDescriptor descriptorWithSameValues \u003d new EditCommand.EditGuestDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"kangzongxian"},"content":"        EditGuestDescriptor editedAmy \u003d new EditGuestDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"kangzongxian"},"content":"        editedAmy \u003d new EditGuestDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"kangzongxian"},"content":"        editedAmy \u003d new EditGuestDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"kangzongxian"},"content":"        // different room -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"kangzongxian"},"content":"        editedAmy \u003d new EditGuestDescriptorBuilder(DESC_AMY).withRoom(VALID_ROOM_BOB).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"kangzongxian"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"JustinPeng13"},"content":"        // different date range -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"kangzongxian"},"content":"        editedAmy \u003d new EditGuestDescriptorBuilder(DESC_AMY).withDateRange(VALID_DATE_RANGE_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"jehousoh"},"content":"        // different number of guests -\u003e returns false","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"kangzongxian"},"content":"        editedAmy \u003d new EditGuestDescriptorBuilder(DESC_AMY).withNumberOfGuests(VALID_NUMBER_OF_GUESTS_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"jehousoh"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"bryanhce"},"content":"        // different is room clean -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"bryanhce"},"content":"        editedAmy \u003d new EditGuestDescriptorBuilder(DESC_AMY).withIsRoomClean(VALID_IS_ROOM_CLEAN_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"bryanhce"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kangzongxian":11,"jehousoh":3,"bryanhce":14,"-":36,"JustinPeng13":4}},{"path":"src/test/java/seedu/guest/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ModelManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"bryanhce":5,"-":15}},{"path":"src/test/java/seedu/guest/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.core.Messages.MESSAGE_GUESTS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.CARL;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.ELLE;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.FIONA;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ModelManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.model.guest.GuestContainsKeywordsPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"    private Model model \u003d new ModelManager(getTypicalGuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalGuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"jehousoh"},"content":"                new GuestContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"jehousoh"},"content":"                new GuestContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"bryanhce"},"content":"        // different guest -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"bryanhce"},"content":"    public void execute_zeroKeywords_noGuestFound() {","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"bryanhce"},"content":"        String expectedMessage \u003d String.format(MESSAGE_GUESTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-01"},{"lineNumber":60,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"bryanhce"},"content":"        expectedModel.updateFilteredGuestList(predicate);","lastModifiedDate":"2022-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"bryanhce"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredGuestList());","lastModifiedDate":"2022-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"bryanhce"},"content":"    public void execute_multipleKeywords_multipleGuestsFound() {","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"bryanhce"},"content":"        String expectedMessage \u003d String.format(MESSAGE_GUESTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-01"},{"lineNumber":70,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"bryanhce"},"content":"        expectedModel.updateFilteredGuestList(predicate);","lastModifiedDate":"2022-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"bryanhce"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredGuestList());","lastModifiedDate":"2022-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"jehousoh"},"content":"    private GuestContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"jehousoh"},"content":"        return new GuestContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kangzongxian":6,"jehousoh":9,"bryanhce":15,"-":53}},{"path":"src/test/java/seedu/guest/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ModelManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"bryanhce":5,"-":15}},{"path":"src/test/java/seedu/guest/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.showGuestAtIndex;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalIndexes.INDEX_FIRST_GUEST;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ModelManager;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"        model \u003d new ModelManager(getTypicalGuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"        expectedModel \u003d new ModelManager(model.getGuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"kangzongxian"},"content":"        showGuestAtIndex(model, INDEX_FIRST_GUEST);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kangzongxian":4,"bryanhce":7,"-":28}},{"path":"src/test/java/seedu/guest/logic/commands/MarkRoomsUncleanCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.commands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ModelManager;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.UserPrefs;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.testutil.GuestBuilder;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":" * Contains integration tests (interaction with the Model) and unit tests for MarkRoomsUncleanCommand.","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"public class MarkRoomsUncleanCommandTest {","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"    private Model model \u003d new ModelManager(getTypicalGuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"    public void execute_markRoomsUncleanCommand_success() {","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"        String validIsRoomUnclean \u003d \"no\";","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"        Guest guestInFilteredList0 \u003d model.getFilteredGuestList().get(0);","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"        Guest guestInFilteredList1 \u003d model.getFilteredGuestList().get(1);","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"        Guest guestInFilteredList2 \u003d model.getFilteredGuestList().get(2);","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"        Guest guestInFilteredList3 \u003d model.getFilteredGuestList().get(3);","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"        Guest guestInFilteredList4 \u003d model.getFilteredGuestList().get(4);","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"        Guest guestInFilteredList5 \u003d model.getFilteredGuestList().get(5);","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"bryanhce"},"content":"        Guest guestInFilteredList6 \u003d model.getFilteredGuestList().get(6);","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"bryanhce"},"content":"        Guest editedGuest0 \u003d new GuestBuilder(guestInFilteredList0).withIsRoomClean(validIsRoomUnclean).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"        Guest editedGuest1 \u003d new GuestBuilder(guestInFilteredList1).withIsRoomClean(validIsRoomUnclean).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"        Guest editedGuest2 \u003d new GuestBuilder(guestInFilteredList2).withIsRoomClean(validIsRoomUnclean).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"        Guest editedGuest3 \u003d new GuestBuilder(guestInFilteredList3).withIsRoomClean(validIsRoomUnclean).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"bryanhce"},"content":"        Guest editedGuest4 \u003d new GuestBuilder(guestInFilteredList4).withIsRoomClean(validIsRoomUnclean).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"        Guest editedGuest5 \u003d new GuestBuilder(guestInFilteredList5).withIsRoomClean(validIsRoomUnclean).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"bryanhce"},"content":"        Guest editedGuest6 \u003d new GuestBuilder(guestInFilteredList6).withIsRoomClean(validIsRoomUnclean).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"bryanhce"},"content":"        MarkRoomsUncleanCommand markRoomsUncleanCommand \u003d new MarkRoomsUncleanCommand();","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"        String expectedMessage \u003d String.format(MarkRoomsUncleanCommand.MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"bryanhce"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalGuestBook(), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"bryanhce"},"content":"        expectedModel.setGuest(guestInFilteredList0, editedGuest0);","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"bryanhce"},"content":"        expectedModel.setGuest(guestInFilteredList1, editedGuest1);","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"bryanhce"},"content":"        expectedModel.setGuest(guestInFilteredList2, editedGuest2);","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"bryanhce"},"content":"        expectedModel.setGuest(guestInFilteredList3, editedGuest3);","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"bryanhce"},"content":"        expectedModel.setGuest(guestInFilteredList4, editedGuest4);","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"bryanhce"},"content":"        expectedModel.setGuest(guestInFilteredList5, editedGuest5);","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"bryanhce"},"content":"        expectedModel.setGuest(guestInFilteredList6, editedGuest6);","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"bryanhce"},"content":"        assertCommandSuccess(markRoomsUncleanCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"bryanhce"},"content":"    public void equals() {","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"bryanhce"},"content":"        MarkRoomsUncleanCommand markRoomsUncleanCommand \u003d new MarkRoomsUncleanCommand();","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"bryanhce"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"bryanhce"},"content":"        assertTrue(markRoomsUncleanCommand.equals(markRoomsUncleanCommand));","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"bryanhce"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"bryanhce"},"content":"        assertFalse(markRoomsUncleanCommand.equals(1));","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"bryanhce"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"bryanhce"},"content":"        assertFalse(markRoomsUncleanCommand.equals(null));","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"bryanhce":73}},{"path":"src/test/java/seedu/guest/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.DATE_RANGE_DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.DATE_RANGE_DESC_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.INVALID_DATE_RANGE_DESC;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.INVALID_NUMBER_OF_GUESTS_DESC;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.INVALID_ROOM_DESC;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.NUMBER_OF_GUESTS_DESC_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.NUMBER_OF_GUESTS_DESC_BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.ROOM_DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.ROOM_DESC_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_DATE_RANGE_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_NUMBER_OF_GUESTS_BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_ROOM_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.AddCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.DateRange;","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Email;","lastModifiedDate":"2022-10-01"},{"lineNumber":39,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Name;","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.model.guest.NumberOfGuests;","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.model.guest.Room;","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.testutil.GuestBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"kangzongxian"},"content":"        Guest expectedGuest \u003d new GuestBuilder(BOB).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"bryanhce"},"content":"                + ROOM_DESC_BOB + DATE_RANGE_DESC_BOB + NUMBER_OF_GUESTS_DESC_BOB,","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"bryanhce"},"content":"                new AddCommand(expectedGuest));","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"bryanhce"},"content":"                + ROOM_DESC_BOB + DATE_RANGE_DESC_BOB + NUMBER_OF_GUESTS_DESC_BOB,","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"bryanhce"},"content":"                new AddCommand(expectedGuest));","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"bryanhce"},"content":"                + ROOM_DESC_BOB + DATE_RANGE_DESC_BOB + NUMBER_OF_GUESTS_DESC_BOB,","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"bryanhce"},"content":"                new AddCommand(expectedGuest));","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"bryanhce"},"content":"                + ROOM_DESC_BOB + DATE_RANGE_DESC_BOB + NUMBER_OF_GUESTS_DESC_BOB,","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"kangzongxian"},"content":"                new AddCommand(expectedGuest));","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"kangzongxian"},"content":"        // multiple rooms - last room accepted","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"kangzongxian"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"kangzongxian"},"content":"                        + ROOM_DESC_AMY + ROOM_DESC_BOB + DATE_RANGE_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"bryanhce"},"content":"                        + NUMBER_OF_GUESTS_DESC_BOB,","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"bryanhce"},"content":"                new AddCommand(expectedGuest));","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"JustinPeng13"},"content":"        // multiple date ranges - last date range accepted","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"JustinPeng13"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + DATE_RANGE_DESC_AMY","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"kangzongxian"},"content":"                + ROOM_DESC_BOB + DATE_RANGE_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"bryanhce"},"content":"                + NUMBER_OF_GUESTS_DESC_BOB,","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"JustinPeng13"},"content":"                new AddCommand(expectedGuest));","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"jehousoh"},"content":"        // multiple numbers of guests - last number of guests accepted","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"kangzongxian"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"kangzongxian"},"content":"                + ROOM_DESC_BOB + DATE_RANGE_DESC_BOB + NUMBER_OF_GUESTS_DESC_AMY","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"bryanhce"},"content":"                + NUMBER_OF_GUESTS_DESC_BOB, new AddCommand(expectedGuest));","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"kangzongxian"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"kangzongxian"},"content":"                + ROOM_DESC_BOB + DATE_RANGE_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"bryanhce"},"content":"                + NUMBER_OF_GUESTS_DESC_BOB,","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"kangzongxian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"kangzongxian"},"content":"                + ROOM_DESC_BOB + DATE_RANGE_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"bryanhce"},"content":"                + NUMBER_OF_GUESTS_DESC_BOB,","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"kangzongxian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"kangzongxian"},"content":"                + ROOM_DESC_BOB + DATE_RANGE_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"bryanhce"},"content":"                + NUMBER_OF_GUESTS_DESC_BOB,","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"kangzongxian"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"kangzongxian"},"content":"        // missing room prefix","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"kangzongxian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"kangzongxian"},"content":"                + VALID_ROOM_BOB + DATE_RANGE_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"bryanhce"},"content":"                + NUMBER_OF_GUESTS_DESC_BOB,","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"jehousoh"},"content":"                expectedMessage);","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"JustinPeng13"},"content":"        // missing date range prefix","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"kangzongxian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"kangzongxian"},"content":"                + ROOM_DESC_BOB + VALID_DATE_RANGE_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"bryanhce"},"content":"                + NUMBER_OF_GUESTS_DESC_BOB,","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"bryanhce"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"jehousoh"},"content":"        // missing number of guests prefix","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"kangzongxian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"kangzongxian"},"content":"                + ROOM_DESC_BOB + DATE_RANGE_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"bryanhce"},"content":"                + VALID_NUMBER_OF_GUESTS_BOB,","lastModifiedDate":"2022-10-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"kangzongxian"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"kangzongxian"},"content":"                + VALID_ROOM_BOB + VALID_DATE_RANGE_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"bryanhce"},"content":"                + VALID_NUMBER_OF_GUESTS_BOB,","lastModifiedDate":"2022-10-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"kangzongxian"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"kangzongxian"},"content":"                + ROOM_DESC_BOB + DATE_RANGE_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"bryanhce"},"content":"                + NUMBER_OF_GUESTS_DESC_BOB,","lastModifiedDate":"2022-10-20"},{"lineNumber":144,"author":{"gitId":"jehousoh"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"kangzongxian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"kangzongxian"},"content":"                + ROOM_DESC_BOB + DATE_RANGE_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"bryanhce"},"content":"                + NUMBER_OF_GUESTS_DESC_BOB,","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"jehousoh"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"kangzongxian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"kangzongxian"},"content":"                + ROOM_DESC_BOB + DATE_RANGE_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"bryanhce"},"content":"                + NUMBER_OF_GUESTS_DESC_BOB,","lastModifiedDate":"2022-10-20"},{"lineNumber":156,"author":{"gitId":"jehousoh"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-30"},{"lineNumber":157,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"kangzongxian"},"content":"        // invalid room","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"kangzongxian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"kangzongxian"},"content":"                + INVALID_ROOM_DESC + DATE_RANGE_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"bryanhce"},"content":"                + NUMBER_OF_GUESTS_DESC_BOB,","lastModifiedDate":"2022-10-20"},{"lineNumber":162,"author":{"gitId":"kangzongxian"},"content":"                Room.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"JustinPeng13"},"content":"        // invalid date range","lastModifiedDate":"2022-10-05"},{"lineNumber":165,"author":{"gitId":"kangzongxian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"kangzongxian"},"content":"                + ROOM_DESC_BOB + INVALID_DATE_RANGE_DESC","lastModifiedDate":"2022-10-16"},{"lineNumber":167,"author":{"gitId":"bryanhce"},"content":"                + NUMBER_OF_GUESTS_DESC_BOB,","lastModifiedDate":"2022-10-20"},{"lineNumber":168,"author":{"gitId":"JustinPeng13"},"content":"                DateRange.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":169,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":170,"author":{"gitId":"jehousoh"},"content":"        // invalid number of guests","lastModifiedDate":"2022-09-30"},{"lineNumber":171,"author":{"gitId":"kangzongxian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"kangzongxian"},"content":"                + ROOM_DESC_BOB + DATE_RANGE_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"bryanhce"},"content":"                + INVALID_NUMBER_OF_GUESTS_DESC,","lastModifiedDate":"2022-10-20"},{"lineNumber":174,"author":{"gitId":"jehousoh"},"content":"                NumberOfGuests.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"kangzongxian"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"bryanhce"},"content":"                + ROOM_DESC_BOB + INVALID_DATE_RANGE_DESC","lastModifiedDate":"2022-10-20"},{"lineNumber":179,"author":{"gitId":"bryanhce"},"content":"                + NUMBER_OF_GUESTS_DESC_BOB,","lastModifiedDate":"2022-10-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":184,"author":{"gitId":"kangzongxian"},"content":"                + ROOM_DESC_BOB + DATE_RANGE_DESC_BOB","lastModifiedDate":"2022-10-17"},{"lineNumber":185,"author":{"gitId":"bryanhce"},"content":"                + NUMBER_OF_GUESTS_DESC_BOB,","lastModifiedDate":"2022-10-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"kangzongxian":49,"jehousoh":17,"bryanhce":52,"-":57,"JustinPeng13":13}},{"path":"src/test/java/seedu/guest/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"bryanhce":1,"-":149}},{"path":"src/test/java/seedu/guest/logic/parser/BillCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinPeng13"},"content":"package seedu.guest.logic.parser;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.BILL_DESC_NEGATIVE;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.BILL_DESC_POSITIVE;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.BILL_DESC_ZERO;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.INVALID_BILL_DESC;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_BILL_NEGATIVE;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_BILL_POSITIVE;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_BILL_ZERO;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.testutil.TypicalIndexes.INDEX_FIRST_GUEST;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.testutil.TypicalIndexes.INDEX_SECOND_GUEST;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"JustinPeng13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.logic.commands.BillCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.Bill;","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"JustinPeng13"},"content":"public class BillCommandParserTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"JustinPeng13"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"JustinPeng13"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, BillCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"JustinPeng13"},"content":"    private BillCommandParser parser \u003d new BillCommandParser();","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"JustinPeng13"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"JustinPeng13"},"content":"        // no index specified","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"JustinPeng13"},"content":"        assertParseFailure(parser, BILL_DESC_POSITIVE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"JustinPeng13"},"content":"        // no value specified","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"JustinPeng13"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"JustinPeng13"},"content":"        // no index and no value specified","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"JustinPeng13"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"JustinPeng13"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"JustinPeng13"},"content":"        // negative index","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"JustinPeng13"},"content":"        assertParseFailure(parser, \"-5\" + BILL_DESC_POSITIVE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"JustinPeng13"},"content":"        // zero index","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"JustinPeng13"},"content":"        assertParseFailure(parser, \"0\" + BILL_DESC_POSITIVE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"JustinPeng13"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"JustinPeng13"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"JustinPeng13"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"JustinPeng13"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"JustinPeng13"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"JustinPeng13"},"content":"        assertParseFailure(parser, \"1\" + INVALID_BILL_DESC, Bill.MESSAGE_CONSTRAINTS); // invalid bill","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"JustinPeng13"},"content":"        // valid bill followed by invalid bill. The test case for invalid bill followed by valid bill","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"JustinPeng13"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"JustinPeng13"},"content":"        assertParseFailure(parser, \"1\" + BILL_DESC_POSITIVE + INVALID_BILL_DESC, Bill.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"JustinPeng13"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"JustinPeng13"},"content":"        Index targetIndex \u003d INDEX_SECOND_GUEST;","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"JustinPeng13"},"content":"        String userInput \u003d targetIndex.getOneBased() + BILL_DESC_NEGATIVE;","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"JustinPeng13"},"content":"        BillCommand expectedCommand \u003d new BillCommand(targetIndex, new Bill(VALID_BILL_NEGATIVE));","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"JustinPeng13"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"JustinPeng13"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"JustinPeng13"},"content":"        Index targetIndex \u003d INDEX_FIRST_GUEST;","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"JustinPeng13"},"content":"        String userInput \u003d targetIndex.getOneBased() + BILL_DESC_NEGATIVE + BILL_DESC_ZERO + BILL_DESC_POSITIVE;","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"JustinPeng13"},"content":"        BillCommand expectedCommand \u003d new BillCommand(targetIndex, new Bill(VALID_BILL_POSITIVE));","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"JustinPeng13"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"JustinPeng13"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"JustinPeng13"},"content":"        // no other valid values specified","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"JustinPeng13"},"content":"        Index targetIndex \u003d INDEX_FIRST_GUEST;","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"JustinPeng13"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_BILL_DESC + BILL_DESC_NEGATIVE;","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"JustinPeng13"},"content":"        BillCommand expectedCommand \u003d new BillCommand(targetIndex, new Bill(VALID_BILL_NEGATIVE));","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"JustinPeng13"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"JustinPeng13"},"content":"        // multiple invalid and valid values specified","lastModifiedDate":"2022-10-17"},{"lineNumber":96,"author":{"gitId":"JustinPeng13"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_BILL_DESC + BILL_DESC_NEGATIVE + INVALID_BILL_DESC","lastModifiedDate":"2022-10-17"},{"lineNumber":97,"author":{"gitId":"JustinPeng13"},"content":"                + BILL_DESC_ZERO;","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":99,"author":{"gitId":"JustinPeng13"},"content":"        expectedCommand \u003d new BillCommand(targetIndex, new Bill(VALID_BILL_ZERO));","lastModifiedDate":"2022-10-17"},{"lineNumber":100,"author":{"gitId":"JustinPeng13"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-17"},{"lineNumber":101,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":102,"author":{"gitId":"JustinPeng13"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"JustinPeng13":102}},{"path":"src/test/java/seedu/guest/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.Command;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"bryanhce":3,"-":36}},{"path":"src/test/java/seedu/guest/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalIndexes.INDEX_FIRST_GUEST;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_GUEST));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"kangzongxian":2,"bryanhce":5,"-":25}},{"path":"src/test/java/seedu/guest/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.DATE_RANGE_DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.DATE_RANGE_DESC_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.INVALID_DATE_RANGE_DESC;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.INVALID_IS_ROOM_CLEAN_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.INVALID_NUMBER_OF_GUESTS_DESC;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"Lan-Jingbo"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.INVALID_REQUEST;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.INVALID_ROOM_DESC;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.IS_ROOM_CLEAN_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.IS_ROOM_CLEAN_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.NUMBER_OF_GUESTS_DESC_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.NUMBER_OF_GUESTS_DESC_BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"Lan-Jingbo"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.REQUEST_DESC_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Lan-Jingbo"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.REQUEST_DESC_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.ROOM_DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.ROOM_DESC_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_DATE_RANGE_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_DATE_RANGE_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_IS_ROOM_CLEAN_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_IS_ROOM_CLEAN_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_NUMBER_OF_GUESTS_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_NUMBER_OF_GUESTS_BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"Lan-Jingbo"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_REQUEST_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"Lan-Jingbo"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_REQUEST_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_ROOM_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_ROOM_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalIndexes.INDEX_FIRST_GUEST;","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalIndexes.INDEX_SECOND_GUEST;","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalIndexes.INDEX_THIRD_GUEST;","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.index.Index;","lastModifiedDate":"2022-10-01"},{"lineNumber":51,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.EditCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":52,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.EditCommand.EditGuestDescriptor;","lastModifiedDate":"2022-10-01"},{"lineNumber":53,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.DateRange;","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Email;","lastModifiedDate":"2022-10-01"},{"lineNumber":55,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.IsRoomClean;","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Name;","lastModifiedDate":"2022-10-01"},{"lineNumber":57,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.model.guest.NumberOfGuests;","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":59,"author":{"gitId":"Lan-Jingbo"},"content":"import seedu.guest.model.guest.Request;","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.model.guest.Room;","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.testutil.EditGuestDescriptorBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"JustinPeng13"},"content":"        assertParseFailure(parser, NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"kangzongxian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ROOM_DESC, Room.MESSAGE_CONSTRAINTS); // invalid room","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"bryanhce"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DATE_RANGE_DESC,","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"bryanhce"},"content":"                DateRange.MESSAGE_CONSTRAINTS); // invalid date range","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"jehousoh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NUMBER_OF_GUESTS_DESC,","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"jehousoh"},"content":"                NumberOfGuests.MESSAGE_CONSTRAINTS); // invalid number of guests","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"bryanhce"},"content":"        assertParseFailure(parser, \"1\" + INVALID_IS_ROOM_CLEAN_DESC,","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"bryanhce"},"content":"                IsRoomClean.MESSAGE_CONSTRAINTS); // invalid is room clean","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"Lan-Jingbo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_REQUEST,","lastModifiedDate":"2022-10-24"},{"lineNumber":110,"author":{"gitId":"Lan-Jingbo"},"content":"                Request.MESSAGE_CONSTRAINTS); // invalid request","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"kangzongxian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"kangzongxian"},"content":"                + VALID_ROOM_AMY + VALID_DATE_RANGE_AMY","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"kangzongxian"},"content":"                + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"kangzongxian"},"content":"        Index targetIndex \u003d INDEX_SECOND_GUEST;","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"kangzongxian"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY + ROOM_DESC_AMY","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"bryanhce"},"content":"                + DATE_RANGE_DESC_AMY + NUMBER_OF_GUESTS_DESC_AMY + NAME_DESC_AMY + IS_ROOM_CLEAN_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"kangzongxian"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"kangzongxian"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withRoom(VALID_ROOM_AMY)","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"kangzongxian"},"content":"                .withDateRange(VALID_DATE_RANGE_AMY)","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"bryanhce"},"content":"                .withNumberOfGuests(VALID_NUMBER_OF_GUESTS_AMY).withIsRoomClean(VALID_IS_ROOM_CLEAN_AMY)","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"kangzongxian"},"content":"                .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":144,"author":{"gitId":"kangzongxian"},"content":"        Index targetIndex \u003d INDEX_FIRST_GUEST;","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"kangzongxian"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"kangzongxian"},"content":"        Index targetIndex \u003d INDEX_THIRD_GUEST;","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":159,"author":{"gitId":"kangzongxian"},"content":"        EditCommand.EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":165,"author":{"gitId":"kangzongxian"},"content":"        descriptor \u003d new EditGuestDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"kangzongxian"},"content":"        descriptor \u003d new EditGuestDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"kangzongxian"},"content":"        // room","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"kangzongxian"},"content":"        userInput \u003d targetIndex.getOneBased() + ROOM_DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":177,"author":{"gitId":"kangzongxian"},"content":"        descriptor \u003d new EditGuestDescriptorBuilder().withRoom(VALID_ROOM_AMY).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"kangzongxian"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":179,"author":{"gitId":"kangzongxian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-16"},{"lineNumber":180,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":181,"author":{"gitId":"JustinPeng13"},"content":"        // date range","lastModifiedDate":"2022-10-05"},{"lineNumber":182,"author":{"gitId":"JustinPeng13"},"content":"        userInput \u003d targetIndex.getOneBased() + DATE_RANGE_DESC_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":183,"author":{"gitId":"kangzongxian"},"content":"        descriptor \u003d new EditGuestDescriptorBuilder().withDateRange(VALID_DATE_RANGE_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"JustinPeng13"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":185,"author":{"gitId":"JustinPeng13"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":186,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":187,"author":{"gitId":"jehousoh"},"content":"        // number of guests","lastModifiedDate":"2022-09-30"},{"lineNumber":188,"author":{"gitId":"jehousoh"},"content":"        userInput \u003d targetIndex.getOneBased() + NUMBER_OF_GUESTS_DESC_AMY;","lastModifiedDate":"2022-09-30"},{"lineNumber":189,"author":{"gitId":"kangzongxian"},"content":"        descriptor \u003d new EditGuestDescriptorBuilder().withNumberOfGuests(VALID_NUMBER_OF_GUESTS_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"jehousoh"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-09-30"},{"lineNumber":191,"author":{"gitId":"jehousoh"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":192,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":193,"author":{"gitId":"bryanhce"},"content":"        // is room clean","lastModifiedDate":"2022-10-13"},{"lineNumber":194,"author":{"gitId":"bryanhce"},"content":"        userInput \u003d targetIndex.getOneBased() + IS_ROOM_CLEAN_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":195,"author":{"gitId":"bryanhce"},"content":"        descriptor \u003d new EditGuestDescriptorBuilder().withIsRoomClean(VALID_IS_ROOM_CLEAN_AMY).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":196,"author":{"gitId":"bryanhce"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":197,"author":{"gitId":"bryanhce"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":198,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":199,"author":{"gitId":"Lan-Jingbo"},"content":"        // request","lastModifiedDate":"2022-10-24"},{"lineNumber":200,"author":{"gitId":"Lan-Jingbo"},"content":"        userInput \u003d targetIndex.getOneBased() + REQUEST_DESC_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":201,"author":{"gitId":"Lan-Jingbo"},"content":"        descriptor \u003d new EditGuestDescriptorBuilder().withRequest(VALID_REQUEST_AMY).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":202,"author":{"gitId":"Lan-Jingbo"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-24"},{"lineNumber":203,"author":{"gitId":"Lan-Jingbo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":208,"author":{"gitId":"kangzongxian"},"content":"        Index targetIndex \u003d INDEX_FIRST_GUEST;","lastModifiedDate":"2022-10-10"},{"lineNumber":209,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":210,"author":{"gitId":"kangzongxian"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY + ROOM_DESC_AMY","lastModifiedDate":"2022-10-16"},{"lineNumber":211,"author":{"gitId":"bryanhce"},"content":"                + DATE_RANGE_DESC_AMY + NUMBER_OF_GUESTS_DESC_AMY + IS_ROOM_CLEAN_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-10-13"},{"lineNumber":212,"author":{"gitId":"bryanhce"},"content":"                + EMAIL_DESC_AMY + DATE_RANGE_DESC_AMY + NUMBER_OF_GUESTS_DESC_AMY + IS_ROOM_CLEAN_DESC_AMY","lastModifiedDate":"2022-10-13"},{"lineNumber":213,"author":{"gitId":"kangzongxian"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROOM_DESC_BOB + DATE_RANGE_DESC_BOB","lastModifiedDate":"2022-10-16"},{"lineNumber":214,"author":{"gitId":"Lan-Jingbo"},"content":"                + NUMBER_OF_GUESTS_DESC_BOB + IS_ROOM_CLEAN_DESC_BOB + REQUEST_DESC_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"kangzongxian"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":217,"author":{"gitId":"kangzongxian"},"content":"                .withEmail(VALID_EMAIL_BOB).withRoom(VALID_ROOM_BOB).withDateRange(VALID_DATE_RANGE_BOB)","lastModifiedDate":"2022-10-16"},{"lineNumber":218,"author":{"gitId":"bryanhce"},"content":"                .withNumberOfGuests(VALID_NUMBER_OF_GUESTS_BOB).withIsRoomClean(VALID_IS_ROOM_CLEAN_BOB)","lastModifiedDate":"2022-10-13"},{"lineNumber":219,"author":{"gitId":"Lan-Jingbo"},"content":"                .withRequest(VALID_REQUEST_BOB)","lastModifiedDate":"2022-10-24"},{"lineNumber":220,"author":{"gitId":"kangzongxian"},"content":"                .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"kangzongxian"},"content":"        Index targetIndex \u003d INDEX_FIRST_GUEST;","lastModifiedDate":"2022-10-10"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":232,"author":{"gitId":"kangzongxian"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"JustinPeng13"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + DATE_RANGE_DESC_BOB","lastModifiedDate":"2022-10-07"},{"lineNumber":238,"author":{"gitId":"kangzongxian"},"content":"                 + PHONE_DESC_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":239,"author":{"gitId":"kangzongxian"},"content":"        descriptor \u003d new EditGuestDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":240,"author":{"gitId":"kangzongxian"},"content":"                .withDateRange(VALID_DATE_RANGE_BOB).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"kangzongxian":47,"jehousoh":12,"Lan-Jingbo":16,"bryanhce":45,"-":112,"JustinPeng13":13}},{"path":"src/test/java/seedu/guest/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.FindCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.model.guest.GuestContainsKeywordsPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"jehousoh"},"content":"                new FindCommand(new GuestContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"jehousoh":2,"bryanhce":5,"-":27}},{"path":"src/test/java/seedu/guest/logic/parser/GuestBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalIndexes.INDEX_FIRST_GUEST;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.AddCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.EditCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.FindCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.ListCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.MarkRoomsUncleanCommand;","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.model.guest.GuestContainsKeywordsPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.testutil.EditGuestDescriptorBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.testutil.GuestBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.testutil.GuestUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"public class GuestBookParserTest {","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"    private final GuestBookParser parser \u003d new GuestBookParser();","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"jehousoh"},"content":"        Guest guest \u003d new GuestBuilder().build();","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"kangzongxian"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(GuestUtil.getAddCommand(guest));","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"        assertEquals(new AddCommand(guest), command);","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"kangzongxian"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_GUEST.getOneBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"kangzongxian"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_GUEST), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"jehousoh"},"content":"        Guest guest \u003d new GuestBuilder().build();","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"kangzongxian"},"content":"        EditCommand.EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder(guest).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"kangzongxian"},"content":"                + INDEX_FIRST_GUEST.getOneBased() + \" \" + GuestUtil.getEditGuestDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"kangzongxian"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_GUEST, descriptor), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"jehousoh"},"content":"        assertEquals(new FindCommand(new GuestContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"bryanhce"},"content":"    public void parseCommand_resetRoomClean() throws Exception {","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"bryanhce"},"content":"        assertTrue(parser.parseCommand(MarkRoomsUncleanCommand.COMMAND_WORD) instanceof MarkRoomsUncleanCommand);","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"bryanhce"},"content":"        assertTrue(parser.parseCommand(MarkRoomsUncleanCommand.COMMAND_WORD + \" 3\")","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"bryanhce"},"content":"                instanceof MarkRoomsUncleanCommand);","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":97,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"bryanhce"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2022-10-17"},{"lineNumber":107,"author":{"gitId":"bryanhce"},"content":"                MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"kangzongxian":9,"jehousoh":5,"bryanhce":27,"-":68}},{"path":"src/test/java/seedu/guest/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.logic.parser;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalIndexes.INDEX_FIRST_GUEST;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.Bill;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.DateRange;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Email;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.IsRoomClean;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Name;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.model.guest.NumberOfGuests;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"Lan-Jingbo"},"content":"import seedu.guest.model.guest.Request;","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.model.guest.Room;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"    private static final String INVALID_ROOM \u003d \"!06-73\";","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"JustinPeng13"},"content":"    private static final String INVALID_DATE_RANGE \u003d \"13/09/22 - 13/09/22\";","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"jehousoh"},"content":"    private static final String INVALID_NUMBER_OF_GUESTS \u003d \"5\";","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"    private static final String INVALID_IS_ROOM_CLEAN \u003d \"false\";","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Lan-Jingbo"},"content":"    private static final String INVALID_REQUEST \u003d (\"hi\").repeat(300);","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"JustinPeng13"},"content":"    private static final String INVALID_BILL \u003d \"1.000\";","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"    private static final String VALID_ROOM \u003d \"05-73\";","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"JustinPeng13"},"content":"    private static final String VALID_DATE_RANGE \u003d \"13/09/22 - 15/09/22\";","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"jehousoh"},"content":"    private static final String VALID_NUMBER_OF_GUESTS \u003d \"4\";","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"    private static final String VALID_IS_ROOM_CLEAN \u003d \"yes\";","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinPeng13"},"content":"    private static final String VALID_BILL \u003d \"10.00\";","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"Lan-Jingbo"},"content":"    private static final String VALID_REQUEST \u003d \"May I have a room service\";","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"kangzongxian"},"content":"        assertEquals(INDEX_FIRST_GUEST, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"kangzongxian"},"content":"        assertEquals(INDEX_FIRST_GUEST, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"kangzongxian"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"kangzongxian"},"content":"    public void parseRoom_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"kangzongxian"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRoom((String) null));","lastModifiedDate":"2022-10-16"},{"lineNumber":136,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":138,"author":{"gitId":"kangzongxian"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":139,"author":{"gitId":"kangzongxian"},"content":"    public void parseRoom_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":140,"author":{"gitId":"kangzongxian"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRoom(INVALID_ROOM));","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"kangzongxian"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"kangzongxian"},"content":"    public void parseRoom_validValueWithoutWhitespace_returnsRoom() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"kangzongxian"},"content":"        Room expectedRoom \u003d new Room(VALID_ROOM);","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"kangzongxian"},"content":"        assertEquals(expectedRoom, ParserUtil.parseRoom(VALID_ROOM));","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"kangzongxian"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"kangzongxian"},"content":"    public void parseRoom_validValueWithWhitespace_returnsTrimmedRoom() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"kangzongxian"},"content":"        String roomWithWhitespace \u003d WHITESPACE + VALID_ROOM + WHITESPACE;","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"kangzongxian"},"content":"        Room expectedRoom \u003d new Room(VALID_ROOM);","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"kangzongxian"},"content":"        assertEquals(expectedRoom, ParserUtil.parseRoom(roomWithWhitespace));","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"JustinPeng13"},"content":"    public void parseDateRange_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"JustinPeng13"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDateRange((String) null));","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":161,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"JustinPeng13"},"content":"    public void parseDateRange_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":163,"author":{"gitId":"JustinPeng13"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDateRange(INVALID_DATE_RANGE));","lastModifiedDate":"2022-10-05"},{"lineNumber":164,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":165,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":166,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":167,"author":{"gitId":"JustinPeng13"},"content":"    public void parseDateRange_validValueWithoutWhitespace_returnsDateRange() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"JustinPeng13"},"content":"        DateRange expectedDateRange \u003d new DateRange(VALID_DATE_RANGE);","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"JustinPeng13"},"content":"        assertEquals(expectedDateRange, ParserUtil.parseDateRange(VALID_DATE_RANGE));","lastModifiedDate":"2022-10-05"},{"lineNumber":170,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":172,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"JustinPeng13"},"content":"    public void parseDateRange_validValueWithWhitespace_returnsTrimmedDateRange() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":174,"author":{"gitId":"JustinPeng13"},"content":"        String dateRangeWithWhitespace \u003d WHITESPACE + VALID_DATE_RANGE + WHITESPACE;","lastModifiedDate":"2022-10-05"},{"lineNumber":175,"author":{"gitId":"JustinPeng13"},"content":"        DateRange expectedDateRange \u003d new DateRange(VALID_DATE_RANGE);","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"JustinPeng13"},"content":"        assertEquals(expectedDateRange, ParserUtil.parseDateRange(dateRangeWithWhitespace));","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":178,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":179,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-09-30"},{"lineNumber":180,"author":{"gitId":"jehousoh"},"content":"    public void parseNumberOfGuests_null_throwsNullPointerException() {","lastModifiedDate":"2022-09-30"},{"lineNumber":181,"author":{"gitId":"jehousoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseNumberOfGuests((String) null));","lastModifiedDate":"2022-09-30"},{"lineNumber":182,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":183,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":184,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-09-30"},{"lineNumber":185,"author":{"gitId":"jehousoh"},"content":"    public void parseNumberOfGuests_invalidValue_throwsParseException() {","lastModifiedDate":"2022-09-30"},{"lineNumber":186,"author":{"gitId":"jehousoh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseNumberOfGuests(INVALID_NUMBER_OF_GUESTS));","lastModifiedDate":"2022-09-30"},{"lineNumber":187,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":188,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":189,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-09-30"},{"lineNumber":190,"author":{"gitId":"jehousoh"},"content":"    public void parseNumberOfGuests_validValueWithoutWhitespace_returnsNumberOfGuests() throws Exception {","lastModifiedDate":"2022-09-30"},{"lineNumber":191,"author":{"gitId":"jehousoh"},"content":"        NumberOfGuests expectedNumberOfGuests \u003d new NumberOfGuests(VALID_NUMBER_OF_GUESTS);","lastModifiedDate":"2022-09-30"},{"lineNumber":192,"author":{"gitId":"jehousoh"},"content":"        assertEquals(expectedNumberOfGuests, ParserUtil.parseNumberOfGuests(VALID_NUMBER_OF_GUESTS));","lastModifiedDate":"2022-09-30"},{"lineNumber":193,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":194,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":195,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-09-30"},{"lineNumber":196,"author":{"gitId":"jehousoh"},"content":"    public void parseNumberOfGuests_validValueWithWhitespace_returnsTrimmedNumberOfGuests() throws Exception {","lastModifiedDate":"2022-09-30"},{"lineNumber":197,"author":{"gitId":"jehousoh"},"content":"        String numberOfGuestsWithWhitespace \u003d WHITESPACE + VALID_NUMBER_OF_GUESTS + WHITESPACE;","lastModifiedDate":"2022-09-30"},{"lineNumber":198,"author":{"gitId":"jehousoh"},"content":"        NumberOfGuests expectedNumberOfGuests \u003d new NumberOfGuests(VALID_NUMBER_OF_GUESTS);","lastModifiedDate":"2022-09-30"},{"lineNumber":199,"author":{"gitId":"jehousoh"},"content":"        assertEquals(expectedNumberOfGuests, ParserUtil.parseNumberOfGuests(numberOfGuestsWithWhitespace));","lastModifiedDate":"2022-09-30"},{"lineNumber":200,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":201,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":202,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":203,"author":{"gitId":"bryanhce"},"content":"    public void parseIsRoomClean_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":204,"author":{"gitId":"bryanhce"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseIsRoomClean((String) null));","lastModifiedDate":"2022-10-13"},{"lineNumber":205,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":206,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":207,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":208,"author":{"gitId":"bryanhce"},"content":"    public void parseIsRoomClean_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":209,"author":{"gitId":"JustinPeng13"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIsRoomClean(INVALID_IS_ROOM_CLEAN));","lastModifiedDate":"2022-10-15"},{"lineNumber":210,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":211,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":212,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":213,"author":{"gitId":"bryanhce"},"content":"    public void parseIsRoomClean_validValueWithoutWhitespace_returnsIsRoomClean() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":214,"author":{"gitId":"bryanhce"},"content":"        IsRoomClean expectedIsRoomClean \u003d new IsRoomClean(VALID_IS_ROOM_CLEAN);","lastModifiedDate":"2022-10-13"},{"lineNumber":215,"author":{"gitId":"bryanhce"},"content":"        assertEquals(expectedIsRoomClean, ParserUtil.parseIsRoomClean(VALID_IS_ROOM_CLEAN));","lastModifiedDate":"2022-10-13"},{"lineNumber":216,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":217,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":218,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":219,"author":{"gitId":"bryanhce"},"content":"    public void parseIsRoomClean_validValueWithWhitespace_returnsTrimmedIsRoomClean() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":220,"author":{"gitId":"bryanhce"},"content":"        String isRoomCleanWithWhitespace \u003d WHITESPACE + VALID_IS_ROOM_CLEAN + WHITESPACE;","lastModifiedDate":"2022-10-13"},{"lineNumber":221,"author":{"gitId":"bryanhce"},"content":"        IsRoomClean expectedIsRoomClean \u003d new IsRoomClean(VALID_IS_ROOM_CLEAN);","lastModifiedDate":"2022-10-13"},{"lineNumber":222,"author":{"gitId":"bryanhce"},"content":"        assertEquals(expectedIsRoomClean, ParserUtil.parseIsRoomClean(isRoomCleanWithWhitespace));","lastModifiedDate":"2022-10-13"},{"lineNumber":223,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":224,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":225,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":226,"author":{"gitId":"JustinPeng13"},"content":"    public void parseBill_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":227,"author":{"gitId":"JustinPeng13"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseBill((String) null));","lastModifiedDate":"2022-10-15"},{"lineNumber":228,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":229,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":230,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":231,"author":{"gitId":"JustinPeng13"},"content":"    public void parseBill_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":232,"author":{"gitId":"JustinPeng13"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBill(INVALID_BILL));","lastModifiedDate":"2022-10-15"},{"lineNumber":233,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":234,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":235,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":236,"author":{"gitId":"JustinPeng13"},"content":"    public void parseBill_validValueWithoutWhitespace_returnsBill() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":237,"author":{"gitId":"JustinPeng13"},"content":"        Bill expectedBill \u003d new Bill(VALID_BILL);","lastModifiedDate":"2022-10-15"},{"lineNumber":238,"author":{"gitId":"JustinPeng13"},"content":"        assertEquals(expectedBill, ParserUtil.parseBill(VALID_BILL));","lastModifiedDate":"2022-10-15"},{"lineNumber":239,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":240,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":241,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":242,"author":{"gitId":"JustinPeng13"},"content":"    public void parseBill_validValueWithWhitespace_returnsTrimmedBill() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":243,"author":{"gitId":"JustinPeng13"},"content":"        String billWithWhitespace \u003d WHITESPACE + VALID_BILL + WHITESPACE;","lastModifiedDate":"2022-10-15"},{"lineNumber":244,"author":{"gitId":"JustinPeng13"},"content":"        Bill expectedBill \u003d new Bill(VALID_BILL);","lastModifiedDate":"2022-10-15"},{"lineNumber":245,"author":{"gitId":"JustinPeng13"},"content":"        assertEquals(expectedBill, ParserUtil.parseBill(billWithWhitespace));","lastModifiedDate":"2022-10-15"},{"lineNumber":246,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":247,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":248,"author":{"gitId":"Lan-Jingbo"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":249,"author":{"gitId":"Lan-Jingbo"},"content":"    public void parseRequest_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":250,"author":{"gitId":"Lan-Jingbo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRequest((String) null));","lastModifiedDate":"2022-10-18"},{"lineNumber":251,"author":{"gitId":"Lan-Jingbo"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":252,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":253,"author":{"gitId":"Lan-Jingbo"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":254,"author":{"gitId":"Lan-Jingbo"},"content":"    public void parseRequest_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":255,"author":{"gitId":"Lan-Jingbo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRequest(INVALID_REQUEST));","lastModifiedDate":"2022-10-18"},{"lineNumber":256,"author":{"gitId":"Lan-Jingbo"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":257,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":258,"author":{"gitId":"Lan-Jingbo"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":259,"author":{"gitId":"Lan-Jingbo"},"content":"    public void parseRequest_validValueWithoutWhitespace_returnsBill() throws Exception {","lastModifiedDate":"2022-10-18"},{"lineNumber":260,"author":{"gitId":"Lan-Jingbo"},"content":"        Request expectedRequest \u003d new Request(VALID_REQUEST);","lastModifiedDate":"2022-10-18"},{"lineNumber":261,"author":{"gitId":"Lan-Jingbo"},"content":"        assertEquals(expectedRequest, ParserUtil.parseRequest(VALID_REQUEST));","lastModifiedDate":"2022-10-18"},{"lineNumber":262,"author":{"gitId":"Lan-Jingbo"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":263,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":264,"author":{"gitId":"Lan-Jingbo"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":265,"author":{"gitId":"Lan-Jingbo"},"content":"    public void parseRequest_validValueWithWhitespace_returnsTrimmedRequest() throws Exception {","lastModifiedDate":"2022-10-18"},{"lineNumber":266,"author":{"gitId":"Lan-Jingbo"},"content":"        String requestWithWhitespace \u003d WHITESPACE + VALID_REQUEST + WHITESPACE;","lastModifiedDate":"2022-10-18"},{"lineNumber":267,"author":{"gitId":"Lan-Jingbo"},"content":"        Request expectedRequest \u003d new Request(VALID_REQUEST);","lastModifiedDate":"2022-10-18"},{"lineNumber":268,"author":{"gitId":"Lan-Jingbo"},"content":"        assertEquals(expectedRequest, ParserUtil.parseRequest(requestWithWhitespace));","lastModifiedDate":"2022-10-18"},{"lineNumber":269,"author":{"gitId":"Lan-Jingbo"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"kangzongxian":29,"jehousoh":25,"Lan-Jingbo":26,"bryanhce":32,"-":105,"JustinPeng13":53}},{"path":"src/test/java/seedu/guest/model/GuestBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.ALICE;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"import java.util.List;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.exceptions.DuplicateGuestException;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.testutil.GuestBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"public class GuestBookTest {","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"    private final GuestBook guestBook \u003d new GuestBook();","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"        assertEquals(Collections.emptyList(), guestBook.getGuestList());","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"bryanhce"},"content":"        assertThrows(NullPointerException.class, () -\u003e guestBook.resetData(null));","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":39,"author":{"gitId":"jehousoh"},"content":"    public void resetData_withValidReadOnlyGuestBook_replacesData() {","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"kangzongxian"},"content":"        GuestBook newData \u003d getTypicalGuestBook();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"bryanhce"},"content":"        guestBook.resetData(newData);","lastModifiedDate":"2022-10-01"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"        assertEquals(newData, guestBook);","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"jehousoh"},"content":"    public void resetData_withDuplicateGuests_throwsDuplicateGuestException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"bryanhce"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2022-10-01"},{"lineNumber":48,"author":{"gitId":"kangzongxian"},"content":"        Guest editedAlice \u003d new GuestBuilder(ALICE).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"bryanhce"},"content":"        List\u003cGuest\u003e newGuests \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-10-01"},{"lineNumber":50,"author":{"gitId":"bryanhce"},"content":"        GuestBookStub newData \u003d new GuestBookStub(newGuests);","lastModifiedDate":"2022-10-01"},{"lineNumber":51,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":52,"author":{"gitId":"bryanhce"},"content":"        assertThrows(DuplicateGuestException.class, () -\u003e guestBook.resetData(newData));","lastModifiedDate":"2022-10-01"},{"lineNumber":53,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":54,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":55,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":56,"author":{"gitId":"jehousoh"},"content":"    public void hasGuest_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"bryanhce"},"content":"        assertThrows(NullPointerException.class, () -\u003e guestBook.hasGuest(null));","lastModifiedDate":"2022-10-01"},{"lineNumber":58,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":59,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":60,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":61,"author":{"gitId":"jehousoh"},"content":"    public void hasGuest_guestNotInGuestBook_returnsFalse() {","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"bryanhce"},"content":"        assertFalse(guestBook.hasGuest(ALICE));","lastModifiedDate":"2022-10-01"},{"lineNumber":63,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":64,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":65,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":66,"author":{"gitId":"jehousoh"},"content":"    public void hasGuest_guestInGuestBook_returnsTrue() {","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"bryanhce"},"content":"        guestBook.addGuest(ALICE);","lastModifiedDate":"2022-10-01"},{"lineNumber":68,"author":{"gitId":"bryanhce"},"content":"        assertTrue(guestBook.hasGuest(ALICE));","lastModifiedDate":"2022-10-01"},{"lineNumber":69,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":70,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":71,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":72,"author":{"gitId":"jehousoh"},"content":"    public void hasGuest_guestWithSameIdentityFieldsInGuestBook_returnsTrue() {","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"bryanhce"},"content":"        guestBook.addGuest(ALICE);","lastModifiedDate":"2022-10-01"},{"lineNumber":74,"author":{"gitId":"kangzongxian"},"content":"        Guest editedAlice \u003d new GuestBuilder(ALICE).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"bryanhce"},"content":"        assertTrue(guestBook.hasGuest(editedAlice));","lastModifiedDate":"2022-10-01"},{"lineNumber":76,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":77,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":78,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":79,"author":{"gitId":"jehousoh"},"content":"    public void getGuestList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"bryanhce"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e guestBook.getGuestList().remove(0));","lastModifiedDate":"2022-10-01"},{"lineNumber":81,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":82,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":83,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":84,"author":{"gitId":"bryanhce"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2022-10-01"},{"lineNumber":85,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":86,"author":{"gitId":"bryanhce"},"content":"    private static class GuestBookStub implements ReadOnlyGuestBook {","lastModifiedDate":"2022-10-01"},{"lineNumber":87,"author":{"gitId":"bryanhce"},"content":"        private final ObservableList\u003cGuest\u003e guests \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-01"},{"lineNumber":88,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":89,"author":{"gitId":"bryanhce"},"content":"        GuestBookStub(Collection\u003cGuest\u003e guests) {","lastModifiedDate":"2022-10-01"},{"lineNumber":90,"author":{"gitId":"bryanhce"},"content":"            this.guests.setAll(guests);","lastModifiedDate":"2022-10-01"},{"lineNumber":91,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-01"},{"lineNumber":92,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":93,"author":{"gitId":"bryanhce"},"content":"        @Override","lastModifiedDate":"2022-10-01"},{"lineNumber":94,"author":{"gitId":"bryanhce"},"content":"        public ObservableList\u003cGuest\u003e getGuestList() {","lastModifiedDate":"2022-10-01"},{"lineNumber":95,"author":{"gitId":"bryanhce"},"content":"            return guests;","lastModifiedDate":"2022-10-01"},{"lineNumber":96,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-01"},{"lineNumber":97,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":98,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":99,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"jehousoh"},"content":"    public void hashcode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"jehousoh"},"content":"        // same values -\u003e return true","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"jehousoh"},"content":"        assertEquals(guestBook.hashCode(), new GuestBook().hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"jehousoh"},"content":"        // different values -\u003e return false","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"jehousoh"},"content":"        guestBook.addGuest(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"jehousoh"},"content":"        assertNotEquals(guestBook.hashCode(), new GuestBook().hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"kangzongxian":5,"jehousoh":18,"bryanhce":85}},{"path":"src/test/java/seedu/guest/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.model.Model.PREDICATE_SHOW_ALL_GUESTS;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.ALICE;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.BENSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.GuiSettings;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.model.guest.GuestContainsKeywordsPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.testutil.GuestBookBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"        assertEquals(new GuestBook(), new GuestBook(modelManager.getGuestBook()));","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"        userPrefs.setGuestBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"bryanhce"},"content":"        userPrefs.setGuestBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"jehousoh"},"content":"    public void setGuestBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"bryanhce"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuestBookFilePath(null));","lastModifiedDate":"2022-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"jehousoh"},"content":"    public void setGuestBookFilePath_validPath_setsGuestBookFilePath() {","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"bryanhce"},"content":"        modelManager.setGuestBookFilePath(path);","lastModifiedDate":"2022-10-01"},{"lineNumber":72,"author":{"gitId":"bryanhce"},"content":"        assertEquals(path, modelManager.getGuestBookFilePath());","lastModifiedDate":"2022-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"jehousoh"},"content":"    public void hasGuest_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"bryanhce"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasGuest(null));","lastModifiedDate":"2022-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"jehousoh"},"content":"    public void hasGuest_guestNotInGuestBook_returnsFalse() {","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"bryanhce"},"content":"        assertFalse(modelManager.hasGuest(ALICE));","lastModifiedDate":"2022-10-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"jehousoh"},"content":"    public void hasGuest_guestInGuestBook_returnsTrue() {","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"bryanhce"},"content":"        modelManager.addGuest(ALICE);","lastModifiedDate":"2022-10-01"},{"lineNumber":88,"author":{"gitId":"bryanhce"},"content":"        assertTrue(modelManager.hasGuest(ALICE));","lastModifiedDate":"2022-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"jehousoh"},"content":"    public void getFilteredGuestList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"bryanhce"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredGuestList().remove(0));","lastModifiedDate":"2022-10-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"kangzongxian"},"content":"        GuestBook guestBook \u003d new GuestBookBuilder().withGuest(ALICE).withGuest(BENSON).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"bryanhce"},"content":"        GuestBook differentGuestBook \u003d new GuestBook();","lastModifiedDate":"2022-10-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"bryanhce"},"content":"        modelManager \u003d new ModelManager(guestBook, userPrefs);","lastModifiedDate":"2022-10-01"},{"lineNumber":104,"author":{"gitId":"bryanhce"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(guestBook, userPrefs);","lastModifiedDate":"2022-10-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"bryanhce"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentGuestBook, userPrefs)));","lastModifiedDate":"2022-10-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"jehousoh"},"content":"        modelManager.updateFilteredGuestList(new GuestContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"bryanhce"},"content":"        assertFalse(modelManager.equals(new ModelManager(guestBook, userPrefs)));","lastModifiedDate":"2022-10-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"bryanhce"},"content":"        modelManager.updateFilteredGuestList(PREDICATE_SHOW_ALL_GUESTS);","lastModifiedDate":"2022-10-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"bryanhce"},"content":"        differentUserPrefs.setGuestBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-01"},{"lineNumber":130,"author":{"gitId":"bryanhce"},"content":"        assertFalse(modelManager.equals(new ModelManager(guestBook, differentUserPrefs)));","lastModifiedDate":"2022-10-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"kangzongxian":4,"jehousoh":8,"bryanhce":23,"-":97}},{"path":"src/test/java/seedu/guest/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"jehousoh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"jehousoh"},"content":"    public void setGuestBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setGuestBookFilePath(null));","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"jehousoh"},"content":"    public void getGuiSettings_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"jehousoh"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"jehousoh"},"content":"        assertEquals(userPrefs.getGuiSettings(), new UserPrefs().getGuiSettings());","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"jehousoh"},"content":"    public void getGuestBookFilePath_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"jehousoh"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"jehousoh"},"content":"        assertEquals(userPrefs.getGuestBookFilePath(), new UserPrefs().getGuestBookFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"jehousoh"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"jehousoh"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"jehousoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"jehousoh"},"content":"        assertTrue(userPref.equals(userPref));","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"jehousoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"jehousoh"},"content":"        assertFalse(userPref.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"jehousoh"},"content":"        // different GuiSettings -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"jehousoh"},"content":"        UserPrefs editedUserPref \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"jehousoh"},"content":"        editedUserPref.setGuiSettings(new GuiSettings(1.0, 1.0, 1, 1));","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"jehousoh"},"content":"        assertFalse(userPref.equals(editedUserPref));","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"jehousoh"},"content":"        // different GuestBookFilePath -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"jehousoh"},"content":"        editedUserPref \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"jehousoh"},"content":"        editedUserPref.setGuestBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"jehousoh"},"content":"        assertFalse(userPref.equals(editedUserPref));","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"jehousoh"},"content":"    public void hashcode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"jehousoh"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"jehousoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"jehousoh"},"content":"        assertEquals(userPref.hashCode(), userPref.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"jehousoh"},"content":"        // different GuiSettings -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"jehousoh"},"content":"        UserPrefs editedUserPref \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"jehousoh"},"content":"        editedUserPref.setGuiSettings(new GuiSettings(1.0, 1.0, 1, 1));","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"jehousoh"},"content":"        assertNotEquals(userPref.hashCode(), editedUserPref.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"jehousoh"},"content":"        // different GuestBookFilePath -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"jehousoh"},"content":"        editedUserPref \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"jehousoh"},"content":"        editedUserPref.setGuestBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"jehousoh"},"content":"        assertNotEquals(userPref.hashCode(), editedUserPref.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"jehousoh":59,"bryanhce":3,"-":17}},{"path":"src/test/java/seedu/guest/model/guest/BillTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinPeng13"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"JustinPeng13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"JustinPeng13"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"JustinPeng13"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"JustinPeng13"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"JustinPeng13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"JustinPeng13"},"content":"public class BillTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"JustinPeng13"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"JustinPeng13"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Bill(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"JustinPeng13"},"content":"    public void constructor_invalidBill_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"JustinPeng13"},"content":"        String invalidBill \u003d \"\";","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"JustinPeng13"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Bill(invalidBill));","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"JustinPeng13"},"content":"    public void isValidBill() {","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"JustinPeng13"},"content":"        // null bill","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"JustinPeng13"},"content":"        assertThrows(NullPointerException.class, () -\u003e Bill.isValidBill(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"JustinPeng13"},"content":"        // invalid bill","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(Bill.isValidBill(\"\")); // empty string","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(Bill.isValidBill(\" \")); // spaces only","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(Bill.isValidBill(\"abc\")); // non-numerical input","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(Bill.isValidBill(\"1..00\")); // 2 decimal points","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(Bill.isValidBill(\"1.500\")); // more than 2 decimal places","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(Bill.isValidBill(\"1,000\")); // comma separator","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(Bill.isValidBill(\"1 000\")); // space separator","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(Bill.isValidBill(\"100-\")); // wrong location of hyphen","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(Bill.isValidBill(\"100+\")); // wrong location of plus sign","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(Bill.isValidBill(\"--100\")); // more than 1 hyphen","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(Bill.isValidBill(\"++100\")); // more than 1 plus sign","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(Bill.isValidBill(\"+-100\")); // both hyphen and plus sign","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(Bill.isValidBill(\"-+100\")); // both hyphen and plus sign","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"JustinPeng13"},"content":"        // valid bill","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"JustinPeng13"},"content":"        assertTrue(Bill.isValidBill(\"0\")); // 0","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"JustinPeng13"},"content":"        assertTrue(Bill.isValidBill(\"+1\")); // positive number","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"JustinPeng13"},"content":"        assertTrue(Bill.isValidBill(\"-1\")); // negative number","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"JustinPeng13"},"content":"        assertTrue(Bill.isValidBill(\"-0\")); // signed zero","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"JustinPeng13"},"content":"        assertTrue(Bill.isValidBill(\"-1.99\")); // signed number with decimals","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"JustinPeng13"},"content":"        assertTrue(Bill.isValidBill(\".99\")); // starts with decimal point","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"JustinPeng13"},"content":"        assertTrue(Bill.isValidBill(\"+.99\")); // signed and starts with decimal point","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"JustinPeng13"},"content":"        assertTrue(Bill.isValidBill(\"1.\")); // no decimal place","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"JustinPeng13"},"content":"        assertTrue(Bill.isValidBill(\"1.5\")); // 1 decimal place","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"JustinPeng13"},"content":"        assertTrue(Bill.isValidBill(\"1.99\")); // 2 decimal places","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"JustinPeng13"},"content":"        assertTrue(Bill.isValidBill(\"10\")); // integer","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"JustinPeng13"},"content":"        assertTrue(Bill.isValidBill(\"999999999999999.99\")); // large numbers","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"JustinPeng13"},"content":"    public void hashcode() {","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"JustinPeng13"},"content":"        Bill tempBill \u003d new Bill(\"9.99\");","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"JustinPeng13"},"content":"        // same values -\u003e return true","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"JustinPeng13"},"content":"        assertEquals(tempBill, new Bill(\"9.99\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"JustinPeng13"},"content":"        // different values -\u003e return false","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"JustinPeng13"},"content":"        assertNotEquals(tempBill, new Bill(\"10\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"JustinPeng13"},"content":"}","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"JustinPeng13":71}},{"path":"src/test/java/seedu/guest/model/guest/DateRangeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinPeng13"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"JustinPeng13"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"JustinPeng13"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"JustinPeng13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"JustinPeng13"},"content":"public class DateRangeTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"JustinPeng13"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"JustinPeng13"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateRange(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"JustinPeng13"},"content":"    public void constructor_invalidDateRange_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"JustinPeng13"},"content":"        String invalidDateRange \u003d \"\";","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"JustinPeng13"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateRange(invalidDateRange));","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"JustinPeng13"},"content":"    public void isValidDateRange() {","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"JustinPeng13"},"content":"        // null date range","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"JustinPeng13"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateRange.isValidDateRange(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"JustinPeng13"},"content":"        // invalid date range","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(DateRange.isValidDateRange(\"\")); // empty string","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(DateRange.isValidDateRange(\"13/09/22\")); // 1 date only","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(DateRange.isValidDateRange(\"13/09/22 15/09/22\")); // wrong separator","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(DateRange.isValidDateRange(\"13/09/2022 - 15/09/2022\")); // wrong year format","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(DateRange.isValidDateRange(\"13/9/22 - 15/9/22\")); // wrong month format","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(DateRange.isValidDateRange(\"1/09/22 - 3/09/22\")); // wrong day format","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(DateRange.isValidDateRange(\"13/09/22 - 31/09/22\")); // invalid day","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(DateRange.isValidDateRange(\"13/09/22 - 15/13/22\")); // invalid month","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(DateRange.isValidDateRange(\"13/09/22 - 13/09/22\")); // end date same as start date","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(DateRange.isValidDateRange(\"13/09/22 - 12/09/22\")); // end date earlier than start date","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(DateRange.isValidDateRange(\"13/09/22 - 15/09/22 - 17/09/22\")); // more than 2 dates","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"JustinPeng13"},"content":"        // valid date range","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"JustinPeng13"},"content":"        assertTrue(DateRange.isValidDateRange(\"13/09/22 - 14/09/22\")); // 1 day","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"JustinPeng13"},"content":"        assertTrue(DateRange.isValidDateRange(\"30/09/22 - 01/10/22\")); // across months","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"JustinPeng13"},"content":"        assertTrue(DateRange.isValidDateRange(\"13/09/22 - 15/09/23\")); // across years","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"jehousoh"},"content":"    public void hashcode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"jehousoh"},"content":"        DateRange tempDateRange \u003d new DateRange(\"13/09/22 - 14/09/22\");","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"jehousoh"},"content":"        // same values -\u003e return true","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"jehousoh"},"content":"        assertEquals(tempDateRange, new DateRange(\"13/09/22 - 14/09/22\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"jehousoh"},"content":"        // different values -\u003e return false","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"jehousoh"},"content":"        assertNotEquals(tempDateRange, new DateRange(\"13/09/22 - 15/09/22\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"JustinPeng13"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"jehousoh":13,"JustinPeng13":45}},{"path":"src/test/java/seedu/guest/model/guest/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":56,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(Email.isValidEmail(\"a\".repeat(65) + \"@\" + \"a\".repeat(255))); // local part too long","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(Email.isValidEmail(\"a\".repeat(64) + \"@\" + \"a\".repeat(256))); // domain part too long","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":71,"author":{"gitId":"JustinPeng13"},"content":"        assertTrue(Email.isValidEmail(\"a\".repeat(64) + \"@\" + \"a\".repeat(255))); // maximum length","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":73,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"jehousoh"},"content":"    public void hashcode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"jehousoh"},"content":"        Email tempEmail \u003d new Email(\"test@localhost\");","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"jehousoh"},"content":"        // same values -\u003e return true","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"jehousoh"},"content":"        assertEquals(tempEmail, new Email(\"test@localhost\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"jehousoh"},"content":"        // different values -\u003e return false","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"jehousoh"},"content":"        assertNotEquals(tempEmail, new Email(\"test@localhost1\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jehousoh":12,"bryanhce":2,"-":67,"JustinPeng13":3}},{"path":"src/test/java/seedu/guest/model/guest/GuestContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jehousoh"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"jehousoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"jehousoh"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"jehousoh"},"content":"import java.util.List;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"jehousoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.testutil.GuestBuilder;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"jehousoh"},"content":"public class GuestContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"jehousoh"},"content":"    public void equals() {","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"jehousoh"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"jehousoh"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate firstPredicate \u003d new GuestContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate secondPredicate \u003d new GuestContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"jehousoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"jehousoh"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"jehousoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"jehousoh"},"content":"                new GuestContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"jehousoh"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"jehousoh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"jehousoh"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"jehousoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"jehousoh"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"jehousoh"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"jehousoh"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"jehousoh"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"jehousoh"},"content":"        // One keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"jehousoh"},"content":"                new GuestContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"jehousoh"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"jehousoh"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"jehousoh"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"jehousoh"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"jehousoh"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate predicate \u003d new GuestContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"jehousoh"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"jehousoh"},"content":"        // Non-complete match keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"Ali\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"jehousoh"},"content":"    public void test_phoneContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"jehousoh"},"content":"        // One keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"jehousoh"},"content":"                new GuestContainsKeywordsPredicate(Collections.singletonList(\"98765432\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withPhone(\"98765432\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"jehousoh"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"98765432\", \"12345678\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withPhone(\"98765432\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"jehousoh"},"content":"    public void test_phoneDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"jehousoh"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate predicate \u003d new GuestContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withPhone(\"98765432\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"jehousoh"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"12345678\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withPhone(\"98765432\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"jehousoh"},"content":"        // Non-complete match keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"9876\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withPhone(\"98765432\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"jehousoh"},"content":"    public void test_emailContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"jehousoh"},"content":"        // One keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"jehousoh"},"content":"                new GuestContainsKeywordsPredicate(Collections.singletonList(\"alice@example.com\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withEmail(\"alice@example.com\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"jehousoh"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"alice@example.com\", \"bob@example.com\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withEmail(\"alice@example.com\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"jehousoh"},"content":"        // Mixed-case keyword","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"AlIcE@examplE.cOm\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withEmail(\"alice@example.com\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"jehousoh"},"content":"    public void test_emailDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"jehousoh"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate predicate \u003d new GuestContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":124,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withEmail(\"alice@example.com\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":125,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":126,"author":{"gitId":"jehousoh"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":127,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"bob@example.com\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":128,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withEmail(\"alice@example.com\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":129,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":130,"author":{"gitId":"jehousoh"},"content":"        // Non-complete match keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":131,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"bob\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":132,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withEmail(\"alice@example.com\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":133,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":134,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":135,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":136,"author":{"gitId":"jehousoh"},"content":"    public void test_roomContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-21"},{"lineNumber":137,"author":{"gitId":"jehousoh"},"content":"        // One keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":138,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":139,"author":{"gitId":"jehousoh"},"content":"                new GuestContainsKeywordsPredicate(Collections.singletonList(\"04-05\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":140,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withRoom(\"04-05\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":141,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":142,"author":{"gitId":"jehousoh"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":143,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"04-05\", \"04-06\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":144,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withRoom(\"04-05\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":145,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"jehousoh"},"content":"        // Mixed-case keyword","lastModifiedDate":"2022-10-26"},{"lineNumber":147,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"alOHA\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withRoom(\"Aloha\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":149,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":150,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":151,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":152,"author":{"gitId":"jehousoh"},"content":"    public void test_roomDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-21"},{"lineNumber":153,"author":{"gitId":"jehousoh"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":154,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate predicate \u003d new GuestContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":155,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withRoom(\"04-05\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":156,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":157,"author":{"gitId":"jehousoh"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":158,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"04-06\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":159,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withRoom(\"04-05\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":160,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":161,"author":{"gitId":"jehousoh"},"content":"        // Non-complete match keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":162,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"04\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":163,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withRoom(\"04-05\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":164,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":165,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":166,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":167,"author":{"gitId":"jehousoh"},"content":"    public void test_dateRangeContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-21"},{"lineNumber":168,"author":{"gitId":"jehousoh"},"content":"        // One keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":169,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":170,"author":{"gitId":"jehousoh"},"content":"                new GuestContainsKeywordsPredicate(Collections.singletonList(\"03/03/22\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":171,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withDateRange(\"03/03/22 - 05/03/22\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":172,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":173,"author":{"gitId":"jehousoh"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":174,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"03/03/22\", \"05/03/22\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":175,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withDateRange(\"03/03/22 - 05/03/22\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":176,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":177,"author":{"gitId":"jehousoh"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":178,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"03/03/22\", \"07/05/23\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":179,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withDateRange(\"03/03/22 - 05/03/22\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":180,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":181,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":182,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":183,"author":{"gitId":"jehousoh"},"content":"    public void test_dateRangeDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-21"},{"lineNumber":184,"author":{"gitId":"jehousoh"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":185,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate predicate \u003d new GuestContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":186,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withDateRange(\"03/03/22 - 05/03/22\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":187,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":188,"author":{"gitId":"jehousoh"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":189,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"07/05/23\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":190,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withDateRange(\"03/03/22 - 05/03/22\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":191,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":192,"author":{"gitId":"jehousoh"},"content":"        // Non-complete match keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":193,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"03/03\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":194,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withDateRange(\"03/03/22 - 05/03/22\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":195,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":196,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":197,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":198,"author":{"gitId":"jehousoh"},"content":"    public void test_numberOfGuestsContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-21"},{"lineNumber":199,"author":{"gitId":"jehousoh"},"content":"        // One keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":200,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":201,"author":{"gitId":"jehousoh"},"content":"                new GuestContainsKeywordsPredicate(Collections.singletonList(\"4\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":202,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withNumberOfGuests(\"4\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":203,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":204,"author":{"gitId":"jehousoh"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":205,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"2\", \"4\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":206,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withNumberOfGuests(\"4\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":207,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":208,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":209,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":210,"author":{"gitId":"jehousoh"},"content":"    public void test_numberOfGuestsDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-21"},{"lineNumber":211,"author":{"gitId":"jehousoh"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":212,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate predicate \u003d new GuestContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":213,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withNumberOfGuests(\"4\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":214,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":215,"author":{"gitId":"jehousoh"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":216,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"3\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":217,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withNumberOfGuests(\"4\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":218,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":219,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":220,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":221,"author":{"gitId":"jehousoh"},"content":"    public void test_isRoomCleanContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-21"},{"lineNumber":222,"author":{"gitId":"jehousoh"},"content":"        // One keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":223,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":224,"author":{"gitId":"jehousoh"},"content":"                new GuestContainsKeywordsPredicate(Collections.singletonList(\"yes\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":225,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withIsRoomClean(\"yes\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":226,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":227,"author":{"gitId":"jehousoh"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":228,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"yes\", \"no\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":229,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withIsRoomClean(\"yes\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":230,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":231,"author":{"gitId":"jehousoh"},"content":"        // Different formats","lastModifiedDate":"2022-10-26"},{"lineNumber":232,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Collections.singletonList(\"y\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":233,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withIsRoomClean(\"yes\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":234,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"n\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":235,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withIsRoomClean(\"no\").build()));","lastModifiedDate":"2022-10-26"},{"lineNumber":236,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":237,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":238,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":239,"author":{"gitId":"jehousoh"},"content":"    public void test_isRoomCleanDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-21"},{"lineNumber":240,"author":{"gitId":"jehousoh"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":241,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate predicate \u003d new GuestContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":242,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withIsRoomClean(\"yes\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":243,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":244,"author":{"gitId":"jehousoh"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":245,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"no\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":246,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withIsRoomClean(\"yes\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":247,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":248,"author":{"gitId":"jehousoh"},"content":"        // Non-complete match keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":249,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"ye\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":250,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withIsRoomClean(\"yes\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":251,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":252,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":253,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":254,"author":{"gitId":"jehousoh"},"content":"    public void test_billContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-21"},{"lineNumber":255,"author":{"gitId":"jehousoh"},"content":"        // One keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":256,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":257,"author":{"gitId":"jehousoh"},"content":"                new GuestContainsKeywordsPredicate(Collections.singletonList(\"100.00\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":258,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withBill(\"100.00\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":259,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":260,"author":{"gitId":"jehousoh"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":261,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"100.00\", \"0.00\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":262,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withBill(\"100.00\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":263,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":264,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":265,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":266,"author":{"gitId":"jehousoh"},"content":"    public void test_billDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-21"},{"lineNumber":267,"author":{"gitId":"jehousoh"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":268,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate predicate \u003d new GuestContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":269,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withBill(\"100.00\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":270,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":271,"author":{"gitId":"jehousoh"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":272,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"0.00\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":273,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withBill(\"100.00\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":274,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":275,"author":{"gitId":"jehousoh"},"content":"        // Non-complete match keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":276,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"100\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":277,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withBill(\"100.00\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":278,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":279,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":280,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":281,"author":{"gitId":"jehousoh"},"content":"    public void test_requestContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-21"},{"lineNumber":282,"author":{"gitId":"jehousoh"},"content":"        // One keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":283,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":284,"author":{"gitId":"jehousoh"},"content":"                new GuestContainsKeywordsPredicate(Collections.singletonList(\"Extra\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":285,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withRequest(\"Extra bed\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":286,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":287,"author":{"gitId":"jehousoh"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":288,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"Extra\", \"bed\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":289,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withRequest(\"Extra bed\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":290,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":291,"author":{"gitId":"jehousoh"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":292,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"Extra\", \"pillow\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":293,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withRequest(\"Extra bed\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":294,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":295,"author":{"gitId":"jehousoh"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":296,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"eXtRa\", \"BED\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":297,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withRequest(\"Extra bed\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":298,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":299,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":300,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":301,"author":{"gitId":"jehousoh"},"content":"    public void test_requestDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-21"},{"lineNumber":302,"author":{"gitId":"jehousoh"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":303,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate predicate \u003d new GuestContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":304,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withRequest(\"Extra bed\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":305,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":306,"author":{"gitId":"jehousoh"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":307,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"Another\", \"pillow\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":308,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withRequest(\"Extra bed\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":309,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":310,"author":{"gitId":"jehousoh"},"content":"        // Non-complete match keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":311,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"Ext\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":312,"author":{"gitId":"jehousoh"},"content":"        assertFalse(predicate.test(new GuestBuilder().withRequest(\"Extra bed\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":313,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":314,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":315,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":316,"author":{"gitId":"jehousoh"},"content":"    public void test_guestContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-21"},{"lineNumber":317,"author":{"gitId":"jehousoh"},"content":"        // All keywords present","lastModifiedDate":"2022-10-21"},{"lineNumber":318,"author":{"gitId":"jehousoh"},"content":"        GuestContainsKeywordsPredicate predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"Alice\",","lastModifiedDate":"2022-10-21"},{"lineNumber":319,"author":{"gitId":"jehousoh"},"content":"                \"98765432\", \"alice@example\", \"04-05\", \"03/03/22\", \"05/03/22\", \"4\", \"100.00\", \"Extra\", \"bed\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":320,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withName(\"Alice\").withPhone(\"98765432\")","lastModifiedDate":"2022-10-21"},{"lineNumber":321,"author":{"gitId":"jehousoh"},"content":"                .withEmail(\"alice@example\").withRoom(\"04-05\").withDateRange(\"03/03/22 - 05/03/22\")","lastModifiedDate":"2022-10-21"},{"lineNumber":322,"author":{"gitId":"jehousoh"},"content":"                .withNumberOfGuests(\"4\").withBill(\"100.00\").withRequest(\"Extra bed\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":323,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":324,"author":{"gitId":"jehousoh"},"content":"        // Some keywords present","lastModifiedDate":"2022-10-21"},{"lineNumber":325,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"alice@example\",","lastModifiedDate":"2022-10-21"},{"lineNumber":326,"author":{"gitId":"jehousoh"},"content":"                \"04-05\", \"05/03/22\", \"bed\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":327,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withName(\"Alice\").withPhone(\"98765432\")","lastModifiedDate":"2022-10-21"},{"lineNumber":328,"author":{"gitId":"jehousoh"},"content":"                .withEmail(\"alice@example\").withRoom(\"04-05\").withDateRange(\"03/03/22 - 05/03/22\")","lastModifiedDate":"2022-10-21"},{"lineNumber":329,"author":{"gitId":"jehousoh"},"content":"                .withNumberOfGuests(\"4\").withBill(\"100.00\").withRequest(\"Extra bed\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":330,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":331,"author":{"gitId":"jehousoh"},"content":"        // One keyword present","lastModifiedDate":"2022-10-21"},{"lineNumber":332,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"Alice\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":333,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withName(\"Alice\").withPhone(\"98765432\")","lastModifiedDate":"2022-10-21"},{"lineNumber":334,"author":{"gitId":"jehousoh"},"content":"                .withEmail(\"alice@example\").withRoom(\"04-05\").withDateRange(\"03/03/22 - 05/03/22\")","lastModifiedDate":"2022-10-21"},{"lineNumber":335,"author":{"gitId":"jehousoh"},"content":"                .withNumberOfGuests(\"4\").withBill(\"100.00\").withRequest(\"Extra bed\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":336,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":337,"author":{"gitId":"jehousoh"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":338,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"12345678\", \"bob@example.com\",","lastModifiedDate":"2022-10-21"},{"lineNumber":339,"author":{"gitId":"jehousoh"},"content":"                \"04-06\", \"07/07/23\", \"09/07/23\", \"Another\", \"pillow\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":340,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withName(\"Alice\").withPhone(\"98765432\")","lastModifiedDate":"2022-10-21"},{"lineNumber":341,"author":{"gitId":"jehousoh"},"content":"                .withEmail(\"alice@example\").withRoom(\"04-05\").withDateRange(\"03/03/22 - 05/03/22\")","lastModifiedDate":"2022-10-21"},{"lineNumber":342,"author":{"gitId":"jehousoh"},"content":"                .withNumberOfGuests(\"4\").withBill(\"100.00\").withRequest(\"Extra bed\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":343,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":344,"author":{"gitId":"jehousoh"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":345,"author":{"gitId":"jehousoh"},"content":"        predicate \u003d new GuestContainsKeywordsPredicate(Arrays.asList(\"aLICe\", \"98765432\", \"aliCe@ExAmple\",","lastModifiedDate":"2022-10-21"},{"lineNumber":346,"author":{"gitId":"jehousoh"},"content":"                \"04-05\", \"03/03/22\", \"05/03/22\", \"4\", \"100.00\", \"EXtrA\", \"bEd\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":347,"author":{"gitId":"jehousoh"},"content":"        assertTrue(predicate.test(new GuestBuilder().withName(\"Alice\").withPhone(\"98765432\")","lastModifiedDate":"2022-10-21"},{"lineNumber":348,"author":{"gitId":"jehousoh"},"content":"                .withEmail(\"alice@example\").withRoom(\"04-05\").withDateRange(\"03/03/22 - 05/03/22\")","lastModifiedDate":"2022-10-21"},{"lineNumber":349,"author":{"gitId":"jehousoh"},"content":"                .withNumberOfGuests(\"4\").withBill(\"100.00\").withRequest(\"Extra bed\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":350,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":351,"author":{"gitId":"jehousoh"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jehousoh":351}},{"path":"src/test/java/seedu/guest/model/guest/GuestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_DATE_RANGE_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_NUMBER_OF_GUESTS_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.ALICE;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.testutil.GuestBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"public class GuestTest {","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"jehousoh"},"content":"    public void isSameGuest() {","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"        assertTrue(ALICE.isSameGuest(ALICE));","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"        assertFalse(ALICE.isSameGuest(null));","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":30,"author":{"gitId":"jehousoh"},"content":"        Guest editedAlice \u003d new GuestBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"                .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"        assertTrue(ALICE.isSameGuest(editedAlice));","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"jehousoh"},"content":"        editedAlice \u003d new GuestBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"        assertFalse(ALICE.isSameGuest(editedAlice));","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"jehousoh"},"content":"        Guest editedBob \u003d new GuestBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"        assertFalse(BOB.isSameGuest(editedBob));","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"jehousoh"},"content":"        editedBob \u003d new GuestBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"        assertFalse(BOB.isSameGuest(editedBob));","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"jehousoh"},"content":"        Guest aliceCopy \u003d new GuestBuilder(ALICE).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"jehousoh"},"content":"        Guest editedAlice \u003d new GuestBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"jehousoh"},"content":"        editedAlice \u003d new GuestBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"jehousoh"},"content":"        editedAlice \u003d new GuestBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"jehousoh"},"content":"        // different date range -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"jehousoh"},"content":"        editedAlice \u003d new GuestBuilder(ALICE).withDateRange(VALID_DATE_RANGE_BOB).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"jehousoh"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"jehousoh"},"content":"        // different number of guests -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"jehousoh"},"content":"        editedAlice \u003d new GuestBuilder(ALICE).withNumberOfGuests(VALID_NUMBER_OF_GUESTS_BOB).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"jehousoh"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"jehousoh"},"content":"    public void hashcode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"jehousoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"jehousoh"},"content":"        Guest aliceCopy \u003d new GuestBuilder(ALICE).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"jehousoh"},"content":"        assertEquals(ALICE.hashCode(), aliceCopy.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"jehousoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"jehousoh"},"content":"        assertEquals(ALICE.hashCode(), aliceCopy.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"jehousoh"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"jehousoh"},"content":"        assertNotEquals(ALICE.hashCode(), BOB.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"jehousoh"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"jehousoh"},"content":"        Guest editedAlice \u003d new GuestBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"jehousoh"},"content":"        assertNotEquals(ALICE.hashCode(), editedAlice.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"jehousoh"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"jehousoh"},"content":"        editedAlice \u003d new GuestBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"jehousoh"},"content":"        assertNotEquals(ALICE.hashCode(), editedAlice.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"jehousoh"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"jehousoh"},"content":"        editedAlice \u003d new GuestBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"jehousoh"},"content":"        assertNotEquals(ALICE.hashCode(), editedAlice.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"jehousoh"},"content":"        // different date range -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"jehousoh"},"content":"        editedAlice \u003d new GuestBuilder(ALICE).withDateRange(VALID_DATE_RANGE_BOB).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"jehousoh"},"content":"        assertNotEquals(ALICE.hashCode(), editedAlice.hashCode());","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"jehousoh"},"content":"        // different number of guests -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"jehousoh"},"content":"        editedAlice \u003d new GuestBuilder(ALICE).withNumberOfGuests(VALID_NUMBER_OF_GUESTS_BOB).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"jehousoh"},"content":"        assertNotEquals(ALICE.hashCode(), editedAlice.hashCode());","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"kangzongxian":3,"jehousoh":55,"bryanhce":11,"-":50}},{"path":"src/test/java/seedu/guest/model/guest/IsRoomCleanTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"public class IsRoomCleanTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"        assertThrows(NullPointerException.class, () -\u003e new IsRoomClean(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"    public void constructor_invalidIsRoomClean_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"        String invalidIsRoomClean \u003d \"\";","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new IsRoomClean(invalidIsRoomClean));","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"    public void isValidIsRoomClean() {","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"        // null is room clean","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"        assertThrows(NullPointerException.class, () -\u003e IsRoomClean.isValidIsRoomClean(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"        // invalid is room clean","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"        assertFalse(IsRoomClean.isValidIsRoomClean(\"\")); // empty string","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"        assertFalse(IsRoomClean.isValidIsRoomClean(\" \")); // spaces only","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"        assertFalse(IsRoomClean.isValidIsRoomClean(\"maybe\")); // not yes or no","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"        assertFalse(IsRoomClean.isValidIsRoomClean(\"yess\")); // misspelt yes","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"        assertFalse(IsRoomClean.isValidIsRoomClean(\"yesno\")); // not yes or no","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"bryanhce"},"content":"        assertFalse(IsRoomClean.isValidIsRoomClean(\"true\")); // synonym of yes","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"bryanhce"},"content":"        // valid is room clean","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"        assertTrue(IsRoomClean.isValidIsRoomClean(\"yes\")); // yes is valid","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"        assertTrue(IsRoomClean.isValidIsRoomClean(\"y\")); // y is valid","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"        assertTrue(IsRoomClean.isValidIsRoomClean(\"no\")); // no is valid","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"bryanhce"},"content":"        assertTrue(IsRoomClean.isValidIsRoomClean(\"n\")); // n is valid","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"        assertTrue(IsRoomClean.isValidIsRoomClean(\"No\")); // first letter capitalised","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"bryanhce"},"content":"        assertTrue(IsRoomClean.isValidIsRoomClean(\"yEs\")); // case-insensitive","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"bryanhce":45}},{"path":"src/test/java/seedu/guest/model/guest/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"jehousoh"},"content":"    public void hashcode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"jehousoh"},"content":"        Name tempName \u003d new Name(\"peter jack\");","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"jehousoh"},"content":"        // same values -\u003e return true","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"jehousoh"},"content":"        assertEquals(tempName, new Name(\"peter jack\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"jehousoh"},"content":"        // different values -\u003e return false","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"jehousoh"},"content":"        assertNotEquals(tempName, new Name(\"peter the 2nd\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jehousoh":13,"bryanhce":2,"-":38}},{"path":"src/test/java/seedu/guest/model/guest/NumberOfGuestsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jehousoh"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"jehousoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"jehousoh"},"content":"public class NumberOfGuestsTest {","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"jehousoh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"jehousoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new NumberOfGuests(null));","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"jehousoh"},"content":"    public void constructor_invalidNumberOfGuests_throwsIllegalArgumentException() {","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"jehousoh"},"content":"        String invalidNumberOfGuests \u003d \"\";","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"jehousoh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new NumberOfGuests(invalidNumberOfGuests));","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"jehousoh"},"content":"    public void isValidNumberOfGuests() {","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"jehousoh"},"content":"        // null number of guests","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"jehousoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e NumberOfGuests.isValidNumberOfGuests(null));","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"jehousoh"},"content":"        // invalid number of guests","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"jehousoh"},"content":"        assertFalse(NumberOfGuests.isValidNumberOfGuests(\"\")); // empty string","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"jehousoh"},"content":"        assertFalse(NumberOfGuests.isValidNumberOfGuests(\" \")); // spaces only","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"jehousoh"},"content":"        assertFalse(NumberOfGuests.isValidNumberOfGuests(\"-1\")); // negative number","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"jehousoh"},"content":"        assertFalse(NumberOfGuests.isValidNumberOfGuests(\"5\")); // outside 1 to 4 range","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"jehousoh"},"content":"        // valid number of guests","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"jehousoh"},"content":"        assertTrue(NumberOfGuests.isValidNumberOfGuests(\"1\")); // range of 1 to 4","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"jehousoh"},"content":"        assertTrue(NumberOfGuests.isValidNumberOfGuests(\"2\"));","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"jehousoh"},"content":"        assertTrue(NumberOfGuests.isValidNumberOfGuests(\"3\"));","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"jehousoh"},"content":"        assertTrue(NumberOfGuests.isValidNumberOfGuests(\"4\"));","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"jehousoh"},"content":"    public void hashcode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"jehousoh"},"content":"        NumberOfGuests tempNumberOfGuests \u003d new NumberOfGuests(\"4\");","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"jehousoh"},"content":"        // same values -\u003e return true","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"jehousoh"},"content":"        assertEquals(tempNumberOfGuests, new NumberOfGuests(\"4\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"jehousoh"},"content":"        // different values -\u003e return false","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"jehousoh"},"content":"        assertNotEquals(tempNumberOfGuests, new NumberOfGuests(\"3\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"jehousoh"},"content":"}","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"jehousoh":53}},{"path":"src/test/java/seedu/guest/model/guest/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 digits","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"JustinPeng13"},"content":"        assertFalse(Phone.isValidPhone(\"1111111111111111\")); // more than 15 digits","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"JustinPeng13"},"content":"        assertTrue(Phone.isValidPhone(\"111111111111111\")); // exactly 15 numbers","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"jehousoh"},"content":"    public void hashcode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"jehousoh"},"content":"        Phone tempPhone \u003d new Phone(\"93121534\");","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"jehousoh"},"content":"        // same values -\u003e return true","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"jehousoh"},"content":"        assertEquals(tempPhone, new Phone(\"93121534\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"jehousoh"},"content":"        // different values -\u003e return false","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"jehousoh"},"content":"        assertNotEquals(tempPhone, new Phone(\"99999999\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jehousoh":12,"bryanhce":2,"-":37,"JustinPeng13":3}},{"path":"src/test/java/seedu/guest/model/guest/RoomTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"public class RoomTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Room(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"    public void constructor_invalidRoom_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"        String invalidRoom \u003d \"$50-23\";","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Room(invalidRoom));","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"    public void isValidRoom() {","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":"        // null room","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"        assertThrows(NullPointerException.class, () -\u003e Room.isValidRoom(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"        // invalid room","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"        assertFalse(Room.isValidRoom(\"\")); // empty string","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"        assertFalse(Room.isValidRoom(\" \")); // spaces only","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"kangzongxian"},"content":"        assertFalse(Room.isValidRoom(\"-50-23\")); // not allowed to start with a hyphen","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"        assertFalse(Room.isValidRoom(\"50 - 23\")); // not allowed to have spacings in between","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"        assertFalse(Room.isValidRoom(\"50--23\")); // not allowed to have more than 1 hyphen in between","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"kangzongxian"},"content":"        assertFalse(Room.isValidRoom(\"$50\")); // \u0027$\u0027 is not allowed","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"kangzongxian"},"content":"        assertFalse(Room.isValidRoom(\"^\u0026*\")); // special symbols only are not allowed","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"        assertFalse(Room.isValidRoom(\"aloha-5()\")); // \u0027(\u0027 or \u0027)\u0027 is not allowed","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"kangzongxian"},"content":"        // valid room","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"kangzongxian"},"content":"        assertTrue(Room.isValidRoom(\"05-73\")); // only alphanumeric characters and hyphen","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"kangzongxian"},"content":"        assertTrue(Room.isValidRoom(\"RoomA\")); // only alphanumeric characters","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"kangzongxian"},"content":"        assertTrue(Room.isValidRoom(\"Room5\")); // hyphens are optional","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"kangzongxian"},"content":"        assertTrue(Room.isValidRoom(\"Aloha-5\")); // only alphanumeric characters and hyphen","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"kangzongxian":44}},{"path":"src/test/java/seedu/guest/model/guest/UniqueGuestBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.model.guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.ALICE;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"import java.util.List;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.exceptions.DuplicateGuestException;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.exceptions.GuestNotFoundException;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.testutil.GuestBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"public class UniqueGuestBookTest {","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"    private final UniqueGuestList uniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"jehousoh"},"content":"    public void contains_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.contains(null));","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"jehousoh"},"content":"    public void contains_guestNotInList_returnsFalse() {","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"        assertFalse(uniqueGuestList.contains(ALICE));","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"jehousoh"},"content":"    public void contains_guestInList_returnsTrue() {","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"        uniqueGuestList.add(ALICE);","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"        assertTrue(uniqueGuestList.contains(ALICE));","lastModifiedDate":"2022-10-01"},{"lineNumber":39,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":42,"author":{"gitId":"jehousoh"},"content":"    public void contains_guestWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"bryanhce"},"content":"        uniqueGuestList.add(ALICE);","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"kangzongxian"},"content":"        Guest editedAlice \u003d new GuestBuilder(ALICE).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"        assertTrue(uniqueGuestList.contains(editedAlice));","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":47,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":48,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":49,"author":{"gitId":"jehousoh"},"content":"    public void add_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"bryanhce"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.add(null));","lastModifiedDate":"2022-10-01"},{"lineNumber":51,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":52,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":53,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":54,"author":{"gitId":"jehousoh"},"content":"    public void add_duplicateGuest_throwsDuplicateGuestException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"bryanhce"},"content":"        uniqueGuestList.add(ALICE);","lastModifiedDate":"2022-10-01"},{"lineNumber":56,"author":{"gitId":"bryanhce"},"content":"        assertThrows(DuplicateGuestException.class, () -\u003e uniqueGuestList.add(ALICE));","lastModifiedDate":"2022-10-01"},{"lineNumber":57,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":58,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":59,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":60,"author":{"gitId":"jehousoh"},"content":"    public void setGuest_nullTargetGuest_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"bryanhce"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.setGuest(null, ALICE));","lastModifiedDate":"2022-10-01"},{"lineNumber":62,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":63,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":64,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":65,"author":{"gitId":"jehousoh"},"content":"    public void setGuest_nullEditedGuest_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"bryanhce"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.setGuest(ALICE, null));","lastModifiedDate":"2022-10-01"},{"lineNumber":67,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":68,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":69,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":70,"author":{"gitId":"jehousoh"},"content":"    public void setGuest_targetGuestNotInList_throwsGuestNotFoundException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"bryanhce"},"content":"        assertThrows(GuestNotFoundException.class, () -\u003e uniqueGuestList.setGuest(ALICE, ALICE));","lastModifiedDate":"2022-10-01"},{"lineNumber":72,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":73,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":74,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":75,"author":{"gitId":"jehousoh"},"content":"    public void setGuest_editedGuestIsSameGuest_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"bryanhce"},"content":"        uniqueGuestList.add(ALICE);","lastModifiedDate":"2022-10-01"},{"lineNumber":77,"author":{"gitId":"bryanhce"},"content":"        uniqueGuestList.setGuest(ALICE, ALICE);","lastModifiedDate":"2022-10-01"},{"lineNumber":78,"author":{"gitId":"bryanhce"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2022-10-01"},{"lineNumber":79,"author":{"gitId":"bryanhce"},"content":"        expectedUniqueGuestList.add(ALICE);","lastModifiedDate":"2022-10-01"},{"lineNumber":80,"author":{"gitId":"bryanhce"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2022-10-01"},{"lineNumber":81,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":82,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":83,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":84,"author":{"gitId":"jehousoh"},"content":"    public void setGuest_editedGuestHasSameIdentity_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"bryanhce"},"content":"        uniqueGuestList.add(ALICE);","lastModifiedDate":"2022-10-01"},{"lineNumber":86,"author":{"gitId":"kangzongxian"},"content":"        Guest editedAlice \u003d new GuestBuilder(ALICE).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"bryanhce"},"content":"        uniqueGuestList.setGuest(ALICE, editedAlice);","lastModifiedDate":"2022-10-01"},{"lineNumber":88,"author":{"gitId":"bryanhce"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2022-10-01"},{"lineNumber":89,"author":{"gitId":"bryanhce"},"content":"        expectedUniqueGuestList.add(editedAlice);","lastModifiedDate":"2022-10-01"},{"lineNumber":90,"author":{"gitId":"bryanhce"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2022-10-01"},{"lineNumber":91,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":92,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":93,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":94,"author":{"gitId":"jehousoh"},"content":"    public void setGuest_editedGuestHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"bryanhce"},"content":"        uniqueGuestList.add(ALICE);","lastModifiedDate":"2022-10-01"},{"lineNumber":96,"author":{"gitId":"bryanhce"},"content":"        uniqueGuestList.setGuest(ALICE, BOB);","lastModifiedDate":"2022-10-01"},{"lineNumber":97,"author":{"gitId":"bryanhce"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2022-10-01"},{"lineNumber":98,"author":{"gitId":"bryanhce"},"content":"        expectedUniqueGuestList.add(BOB);","lastModifiedDate":"2022-10-01"},{"lineNumber":99,"author":{"gitId":"bryanhce"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2022-10-01"},{"lineNumber":100,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":101,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":102,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":103,"author":{"gitId":"jehousoh"},"content":"    public void setGuest_editedGuestHasNonUniqueIdentity_throwsDuplicateGuestException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"bryanhce"},"content":"        uniqueGuestList.add(ALICE);","lastModifiedDate":"2022-10-01"},{"lineNumber":105,"author":{"gitId":"bryanhce"},"content":"        uniqueGuestList.add(BOB);","lastModifiedDate":"2022-10-01"},{"lineNumber":106,"author":{"gitId":"bryanhce"},"content":"        assertThrows(DuplicateGuestException.class, () -\u003e uniqueGuestList.setGuest(ALICE, BOB));","lastModifiedDate":"2022-10-01"},{"lineNumber":107,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":108,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":109,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":110,"author":{"gitId":"jehousoh"},"content":"    public void remove_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"bryanhce"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.remove(null));","lastModifiedDate":"2022-10-01"},{"lineNumber":112,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":113,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":114,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":115,"author":{"gitId":"jehousoh"},"content":"    public void remove_guestDoesNotExist_throwsGuestNotFoundException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"bryanhce"},"content":"        assertThrows(GuestNotFoundException.class, () -\u003e uniqueGuestList.remove(ALICE));","lastModifiedDate":"2022-10-01"},{"lineNumber":117,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":118,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":119,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":120,"author":{"gitId":"jehousoh"},"content":"    public void remove_existingGuest_removesGuest() {","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"bryanhce"},"content":"        uniqueGuestList.add(ALICE);","lastModifiedDate":"2022-10-01"},{"lineNumber":122,"author":{"gitId":"bryanhce"},"content":"        uniqueGuestList.remove(ALICE);","lastModifiedDate":"2022-10-01"},{"lineNumber":123,"author":{"gitId":"bryanhce"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2022-10-01"},{"lineNumber":124,"author":{"gitId":"bryanhce"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2022-10-01"},{"lineNumber":125,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":126,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":127,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":128,"author":{"gitId":"jehousoh"},"content":"    public void setGuests_nullUniqueGuestList_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"bryanhce"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.setGuests((UniqueGuestList) null));","lastModifiedDate":"2022-10-01"},{"lineNumber":130,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":131,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":132,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":133,"author":{"gitId":"jehousoh"},"content":"    public void setGuests_uniqueGuestList_replacesOwnListWithProvidedUniqueGuestList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"bryanhce"},"content":"        uniqueGuestList.add(ALICE);","lastModifiedDate":"2022-10-01"},{"lineNumber":135,"author":{"gitId":"bryanhce"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2022-10-01"},{"lineNumber":136,"author":{"gitId":"bryanhce"},"content":"        expectedUniqueGuestList.add(BOB);","lastModifiedDate":"2022-10-01"},{"lineNumber":137,"author":{"gitId":"bryanhce"},"content":"        uniqueGuestList.setGuests(expectedUniqueGuestList);","lastModifiedDate":"2022-10-01"},{"lineNumber":138,"author":{"gitId":"bryanhce"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2022-10-01"},{"lineNumber":139,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":140,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":141,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":142,"author":{"gitId":"jehousoh"},"content":"    public void setGuests_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"bryanhce"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.setGuests((List\u003cGuest\u003e) null));","lastModifiedDate":"2022-10-01"},{"lineNumber":144,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":145,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":146,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":147,"author":{"gitId":"jehousoh"},"content":"    public void setGuests_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"bryanhce"},"content":"        uniqueGuestList.add(ALICE);","lastModifiedDate":"2022-10-01"},{"lineNumber":149,"author":{"gitId":"bryanhce"},"content":"        List\u003cGuest\u003e guestList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-10-01"},{"lineNumber":150,"author":{"gitId":"bryanhce"},"content":"        uniqueGuestList.setGuests(guestList);","lastModifiedDate":"2022-10-01"},{"lineNumber":151,"author":{"gitId":"bryanhce"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2022-10-01"},{"lineNumber":152,"author":{"gitId":"bryanhce"},"content":"        expectedUniqueGuestList.add(BOB);","lastModifiedDate":"2022-10-01"},{"lineNumber":153,"author":{"gitId":"bryanhce"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2022-10-01"},{"lineNumber":154,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":155,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":156,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":157,"author":{"gitId":"jehousoh"},"content":"    public void setGuests_listWithDuplicateGuests_throwsDuplicateGuestException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"bryanhce"},"content":"        List\u003cGuest\u003e listWithDuplicateGuests \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-10-01"},{"lineNumber":159,"author":{"gitId":"bryanhce"},"content":"        assertThrows(DuplicateGuestException.class, () -\u003e uniqueGuestList.setGuests(listWithDuplicateGuests));","lastModifiedDate":"2022-10-01"},{"lineNumber":160,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":161,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":162,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":163,"author":{"gitId":"bryanhce"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-01"},{"lineNumber":164,"author":{"gitId":"bryanhce"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-01"},{"lineNumber":165,"author":{"gitId":"bryanhce"},"content":"            -\u003e uniqueGuestList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-01"},{"lineNumber":166,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":167,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"jehousoh"},"content":"    public void hashcode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"jehousoh"},"content":"        // same values -\u003e return true","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"jehousoh"},"content":"        assertEquals(uniqueGuestList.hashCode(), new UniqueGuestList().hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"jehousoh"},"content":"        // different values -\u003e return false","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"jehousoh"},"content":"        uniqueGuestList.add(ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"jehousoh"},"content":"        assertNotEquals(uniqueGuestList.hashCode(), new UniqueGuestList().hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"jehousoh"},"content":"    public void iterator() {","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"jehousoh"},"content":"        assertNotEquals(uniqueGuestList.iterator(), new UniqueGuestList().iterator());","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"kangzongxian":4,"jehousoh":38,"bryanhce":140}},{"path":"src/test/java/seedu/guest/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jehousoh"},"content":"package seedu.guest.model.util;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jehousoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.model.GuestBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"Lan-Jingbo"},"content":"import seedu.guest.model.guest.Bill;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"Lan-Jingbo"},"content":"import seedu.guest.model.guest.DateRange;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"Lan-Jingbo"},"content":"import seedu.guest.model.guest.Email;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"Lan-Jingbo"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"Lan-Jingbo"},"content":"import seedu.guest.model.guest.IsRoomClean;","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"Lan-Jingbo"},"content":"import seedu.guest.model.guest.Name;","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"Lan-Jingbo"},"content":"import seedu.guest.model.guest.NumberOfGuests;","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"Lan-Jingbo"},"content":"import seedu.guest.model.guest.Phone;","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"Lan-Jingbo"},"content":"import seedu.guest.model.guest.Request;","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.model.guest.Room;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"jehousoh"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jehousoh"},"content":"    public void getSampleGuests() {","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jehousoh"},"content":"        // different values -\u003e return false","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"jehousoh"},"content":"        Guest[] testGuests \u003d new Guest[]{","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"jehousoh"},"content":"            new Guest(new Name(\"James Oliver\"), new Phone(\"98345344\"), new Email(\"jamesoliver@example.com\"),","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"                    new Room(\"04-73\"), new DateRange(\"15/09/22 - 19/09/22\"),","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"Lan-Jingbo"},"content":"                    new NumberOfGuests(\"2\"), new IsRoomClean(\"no\"), new Bill(), new Request()),","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"jehousoh"},"content":"            new Guest(new Name(\"Kayla Smith\"), new Phone(\"91823471\"), new Email(\"kaylasmith@example.com\"),","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"                    new Room(\"05-25\"), new DateRange(\"22/01/23 - 25/01/23\"),","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Lan-Jingbo"},"content":"                    new NumberOfGuests(\"3\"), new IsRoomClean(\"no\"), new Bill(\"10\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"Lan-Jingbo"},"content":"                    new Request(\"Could you help me book a room service\")),","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"jehousoh"},"content":"            new Guest(new Name(\"Charlie Lim\"), new Phone(\"88237126\"),","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"kangzongxian"},"content":"                    new Email(\"charlie@example.com\"), new Room(\"05-63\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"kangzongxian"},"content":"                    new DateRange(\"21/02/22 - 22/03/22\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"Lan-Jingbo"},"content":"                    new NumberOfGuests(\"2\"), new IsRoomClean(\"yes\"), new Bill(\"19.99\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"Lan-Jingbo"},"content":"                    new Request(\"Help me to kill insects\")),","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"jehousoh"},"content":"            new Guest(new Name(\"Ryan Wong\"), new Phone(\"82831111\"), new Email(\"wongryan@example.com\"),","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"kangzongxian"},"content":"                    new Room(\"06-23\"), new DateRange(\"28/04/23 - 29/04/23\"),","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Lan-Jingbo"},"content":"                    new NumberOfGuests(\"2\"), new IsRoomClean(\"no\"), new Bill(\"50\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"Lan-Jingbo"},"content":"                    new Request(\"Change my bed\")),","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"jehousoh"},"content":"            new Guest(new Name(\"Ibrahim Irfan\"), new Phone(\"84912293\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"kangzongxian"},"content":"                    new Room(\"06-33\"), new DateRange(\"23/05/23 - 03/06/23\"),","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Lan-Jingbo"},"content":"                    new NumberOfGuests(\"1\"), new IsRoomClean(\"yes\"), new Bill(\"999.99\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"Lan-Jingbo"},"content":"                    new Request(\"I want to decorate my room, could you help me?\")),","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"jehousoh"},"content":"            new Guest(new Name(\"Dave Balakrishnan\"), new Phone(\"92821374\"), new Email(\"daveb@example.com\"),","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"kangzongxian"},"content":"                    new Room(\"07-55\"), new DateRange(\"30/12/22 - 02/01/23\"),","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"Lan-Jingbo"},"content":"                    new NumberOfGuests(\"3\"), new IsRoomClean(\"yes\"), new Bill(\"1000.01\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"Lan-Jingbo"},"content":"                    new Request(\"Fix television\"))","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jehousoh"},"content":"            };","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"jehousoh"},"content":"        assertNotEquals(SampleDataUtil.getSampleGuests(), testGuests);","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"jehousoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"jehousoh"},"content":"        assertNotEquals(SampleDataUtil.getSampleGuests(), null);","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"jehousoh"},"content":"        // empty Guest[] -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"jehousoh"},"content":"        assertNotEquals(SampleDataUtil.getSampleGuests(), new Guest[] {});","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"jehousoh"},"content":"    public void getSampleGuestBook() {","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"jehousoh"},"content":"        GuestBook exceptedGb \u003d new GuestBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"jehousoh"},"content":"        exceptedGb.addGuest(new Guest(new Name(\"James Oliver\"), new Phone(\"98345344\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"kangzongxian"},"content":"                new Email(\"jamesoliver@example.com\"), new Room(\"04-73\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"kangzongxian"},"content":"                new DateRange(\"15/09/22 - 19/09/22\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"Lan-Jingbo"},"content":"                new NumberOfGuests(\"2\"), new IsRoomClean(\"no\"), new Bill(), new Request()));","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"jehousoh"},"content":"        exceptedGb.addGuest(new Guest(new Name(\"Kayla Smith\"), new Phone(\"91823471\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"kangzongxian"},"content":"                new Email(\"kaylasmith@example.com\"), new Room(\"05-25\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"kangzongxian"},"content":"                new DateRange(\"22/01/23 - 25/01/23\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"Lan-Jingbo"},"content":"                new NumberOfGuests(\"3\"), new IsRoomClean(\"no\"), new Bill(\"10\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"Lan-Jingbo"},"content":"                new Request(\"Could you help me book a room service\")));","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"jehousoh"},"content":"        exceptedGb.addGuest(new Guest(new Name(\"Charlie Lim\"), new Phone(\"88237126\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"kangzongxian"},"content":"                new Email(\"charlie@example.com\"), new Room(\"05-63\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"kangzongxian"},"content":"                new DateRange(\"21/02/22 - 22/03/22\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"Lan-Jingbo"},"content":"                new NumberOfGuests(\"2\"), new IsRoomClean(\"yes\"), new Bill(\"19.99\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"Lan-Jingbo"},"content":"                new Request(\"Help me to kill insects\")));","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"jehousoh"},"content":"        exceptedGb.addGuest(new Guest(new Name(\"Ryan Wong\"), new Phone(\"82831111\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"kangzongxian"},"content":"                new Email(\"wongryan@example.com\"), new Room(\"06-23\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":79,"author":{"gitId":"kangzongxian"},"content":"                new DateRange(\"28/04/23 - 29/04/23\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":80,"author":{"gitId":"Lan-Jingbo"},"content":"                new NumberOfGuests(\"2\"), new IsRoomClean(\"no\"), new Bill(\"50\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"Lan-Jingbo"},"content":"                new Request(\"Change my bed\")));","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"jehousoh"},"content":"        exceptedGb.addGuest(new Guest(new Name(\"Ibrahim Irfan\"), new Phone(\"84912293\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"kangzongxian"},"content":"                new Email(\"irfan@example.com\"), new Room(\"06-33\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":84,"author":{"gitId":"kangzongxian"},"content":"                new DateRange(\"23/05/23 - 03/06/23\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":85,"author":{"gitId":"Lan-Jingbo"},"content":"                new NumberOfGuests(\"1\"), new IsRoomClean(\"yes\"), new Bill(\"999.99\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":86,"author":{"gitId":"Lan-Jingbo"},"content":"                new Request(\"I want to decorate my room, could you help me?\")));","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"jehousoh"},"content":"        exceptedGb.addGuest(new Guest(new Name(\"Dave Balakrishnan\"), new Phone(\"92821374\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"kangzongxian"},"content":"                new Email(\"daveb@example.com\"), new Room(\"07-55\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"kangzongxian"},"content":"                new DateRange(\"30/12/22 - 02/01/23\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":90,"author":{"gitId":"Lan-Jingbo"},"content":"                new NumberOfGuests(\"3\"), new IsRoomClean(\"no\"), new Bill(\"1000.01\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":91,"author":{"gitId":"Lan-Jingbo"},"content":"                new Request(\"Fix television\")));","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"jehousoh"},"content":"        // different values -\u003e return false","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"jehousoh"},"content":"        assertNotEquals(SampleDataUtil.getSampleGuestBook(), exceptedGb);","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"jehousoh"},"content":"        // null -\u003e return false","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"jehousoh"},"content":"        assertNotEquals(SampleDataUtil.getSampleGuestBook(), null);","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"jehousoh"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"kangzongxian":20,"jehousoh":48,"Lan-Jingbo":31}},{"path":"src/test/java/seedu/guest/storage/JsonAdaptedGuestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.storage.JsonAdaptedGuest.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.BENSON;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.Bill;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.DateRange;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Email;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.IsRoomClean;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Name;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.model.guest.NumberOfGuests;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"Lan-Jingbo"},"content":"import seedu.guest.model.guest.Request;","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.model.guest.Room;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"public class JsonAdaptedGuestTest {","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"    private static final String INVALID_ROOM \u003d \"50!\";","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"JustinPeng13"},"content":"    private static final String INVALID_DATE_RANGE \u003d \"13/09/22 - 13/09/22\";","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"jehousoh"},"content":"    private static final String INVALID_NUMBER_OF_GUESTS \u003d \"-1\";","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"bryanhce"},"content":"    private static final String INVALID_IS_ROOM_CLEAN \u003d \"possibly\";","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Lan-Jingbo"},"content":"    private static final String INVALID_REQUEST \u003d (\"hi\").repeat(300);","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"JustinPeng13"},"content":"    private static final String INVALID_BILL \u003d \"1.000\";","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"kangzongxian"},"content":"    private static final String VALID_ROOM \u003d BENSON.getRoom().toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"JustinPeng13"},"content":"    private static final String VALID_DATE_RANGE \u003d BENSON.getDateRange().toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"jehousoh"},"content":"    private static final String VALID_NUMBER_OF_GUESTS \u003d BENSON.getNumberOfGuests().toString();","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"    private static final String VALID_IS_ROOM_CLEAN \u003d BENSON.getIsRoomClean().toString();","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinPeng13"},"content":"    private static final String VALID_BILL \u003d BENSON.getBill().toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"Lan-Jingbo"},"content":"    private static final String VALID_REQUEST \u003d BENSON.getRequest().toString();","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"Lan-Jingbo"},"content":"    public void toModelType_validGuestDetails_returnsGuest() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"Lan-Jingbo"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(BENSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"Lan-Jingbo"},"content":"        assertEquals(BENSON, guest.toModelType());","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"Lan-Jingbo"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"kangzongxian"},"content":"                new JsonAdaptedGuest(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROOM,","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"Lan-Jingbo"},"content":"                        VALID_DATE_RANGE, VALID_NUMBER_OF_GUESTS, VALID_IS_ROOM_CLEAN, VALID_BILL, VALID_REQUEST);","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Lan-Jingbo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"kangzongxian"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(null, VALID_PHONE, VALID_EMAIL, VALID_ROOM,","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"Lan-Jingbo"},"content":"                VALID_DATE_RANGE, VALID_NUMBER_OF_GUESTS, VALID_IS_ROOM_CLEAN, VALID_BILL, VALID_REQUEST);","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"Lan-Jingbo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"Lan-Jingbo"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"kangzongxian"},"content":"                new JsonAdaptedGuest(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ROOM,","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"Lan-Jingbo"},"content":"                        VALID_DATE_RANGE, VALID_NUMBER_OF_GUESTS, VALID_IS_ROOM_CLEAN, VALID_BILL, VALID_REQUEST);","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"Lan-Jingbo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"kangzongxian"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"Lan-Jingbo"},"content":"                VALID_DATE_RANGE, VALID_ROOM, VALID_NUMBER_OF_GUESTS, VALID_IS_ROOM_CLEAN, VALID_BILL, VALID_REQUEST);","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"Lan-Jingbo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"Lan-Jingbo"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"kangzongxian"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ROOM,","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"Lan-Jingbo"},"content":"                        VALID_DATE_RANGE, VALID_NUMBER_OF_GUESTS, VALID_IS_ROOM_CLEAN, VALID_BILL, VALID_REQUEST);","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"Lan-Jingbo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"kangzongxian"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"Lan-Jingbo"},"content":"                VALID_ROOM, VALID_DATE_RANGE, VALID_NUMBER_OF_GUESTS, VALID_IS_ROOM_CLEAN, VALID_BILL, VALID_REQUEST);","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"Lan-Jingbo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"kangzongxian"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"kangzongxian"},"content":"    public void toModelType_invalidRoom_throwsIllegalValueException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"kangzongxian"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"kangzongxian"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"Lan-Jingbo"},"content":"                        INVALID_ROOM, VALID_DATE_RANGE, VALID_NUMBER_OF_GUESTS,","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"Lan-Jingbo"},"content":"                        VALID_IS_ROOM_CLEAN, VALID_BILL, VALID_REQUEST);","lastModifiedDate":"2022-10-19"},{"lineNumber":105,"author":{"gitId":"kangzongxian"},"content":"        String expectedMessage \u003d Room.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"kangzongxian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"kangzongxian"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"kangzongxian"},"content":"    public void toModelType_nullRoom_throwsIllegalValueException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"kangzongxian"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"Lan-Jingbo"},"content":"                null, VALID_DATE_RANGE, VALID_NUMBER_OF_GUESTS, VALID_IS_ROOM_CLEAN, VALID_BILL, VALID_REQUEST);","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"kangzongxian"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Room.class.getSimpleName());","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"kangzongxian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"JustinPeng13"},"content":"    public void toModelType_invalidDateRange_throwsIllegalValueException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"kangzongxian"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"Lan-Jingbo"},"content":"                VALID_ROOM, INVALID_DATE_RANGE, VALID_NUMBER_OF_GUESTS, VALID_IS_ROOM_CLEAN,","lastModifiedDate":"2022-10-19"},{"lineNumber":121,"author":{"gitId":"Lan-Jingbo"},"content":"                VALID_BILL, VALID_REQUEST);","lastModifiedDate":"2022-10-19"},{"lineNumber":122,"author":{"gitId":"JustinPeng13"},"content":"        String expectedMessage \u003d DateRange.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"Lan-Jingbo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"JustinPeng13"},"content":"    public void toModelType_nullDateRange_throwsIllegalValueException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"kangzongxian"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"Lan-Jingbo"},"content":"                VALID_ROOM, null, VALID_NUMBER_OF_GUESTS, VALID_IS_ROOM_CLEAN, VALID_BILL, VALID_REQUEST);","lastModifiedDate":"2022-10-19"},{"lineNumber":130,"author":{"gitId":"JustinPeng13"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, DateRange.class.getSimpleName());","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"Lan-Jingbo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"jehousoh"},"content":"    public void toModelType_invalidNumberOfGuests_throwsIllegalValueException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"Lan-Jingbo"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"kangzongxian"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROOM,","lastModifiedDate":"2022-10-18"},{"lineNumber":138,"author":{"gitId":"Lan-Jingbo"},"content":"                        VALID_DATE_RANGE, INVALID_NUMBER_OF_GUESTS, VALID_IS_ROOM_CLEAN, VALID_BILL, VALID_REQUEST);","lastModifiedDate":"2022-10-18"},{"lineNumber":139,"author":{"gitId":"jehousoh"},"content":"        String expectedMessage \u003d NumberOfGuests.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"Lan-Jingbo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"jehousoh"},"content":"    public void toModelType_nullNumberOfGuests_throwsIllegalValueException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"Lan-Jingbo"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"Lan-Jingbo"},"content":"                VALID_ROOM, VALID_DATE_RANGE, null, VALID_IS_ROOM_CLEAN, VALID_BILL, VALID_REQUEST);","lastModifiedDate":"2022-10-19"},{"lineNumber":147,"author":{"gitId":"jehousoh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, NumberOfGuests.class.getSimpleName());","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"Lan-Jingbo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"bryanhce"},"content":"    public void toModelType_invalidIsRoomClean_throwsIllegalValueException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"bryanhce"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"kangzongxian"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROOM,","lastModifiedDate":"2022-10-18"},{"lineNumber":155,"author":{"gitId":"Lan-Jingbo"},"content":"                        VALID_DATE_RANGE, VALID_NUMBER_OF_GUESTS, INVALID_IS_ROOM_CLEAN, VALID_BILL, VALID_REQUEST);","lastModifiedDate":"2022-10-18"},{"lineNumber":156,"author":{"gitId":"bryanhce"},"content":"        String expectedMessage \u003d IsRoomClean.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"bryanhce"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"bryanhce"},"content":"    public void toModelType_nullIsRoomClean_throwsIllegalValueException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"bryanhce"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"Lan-Jingbo"},"content":"                VALID_ROOM, VALID_DATE_RANGE, VALID_NUMBER_OF_GUESTS, null, VALID_BILL, VALID_REQUEST);","lastModifiedDate":"2022-10-19"},{"lineNumber":164,"author":{"gitId":"bryanhce"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, IsRoomClean.class.getSimpleName());","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"bryanhce"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":167,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":168,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":169,"author":{"gitId":"JustinPeng13"},"content":"    public void toModelType_invalidBill_throwsIllegalValueException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":170,"author":{"gitId":"JustinPeng13"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":171,"author":{"gitId":"kangzongxian"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROOM,","lastModifiedDate":"2022-10-18"},{"lineNumber":172,"author":{"gitId":"Lan-Jingbo"},"content":"                        VALID_DATE_RANGE, VALID_NUMBER_OF_GUESTS, VALID_IS_ROOM_CLEAN, INVALID_BILL, VALID_REQUEST);","lastModifiedDate":"2022-10-18"},{"lineNumber":173,"author":{"gitId":"JustinPeng13"},"content":"        String expectedMessage \u003d Bill.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-15"},{"lineNumber":174,"author":{"gitId":"JustinPeng13"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2022-10-15"},{"lineNumber":175,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":176,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":177,"author":{"gitId":"JustinPeng13"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":178,"author":{"gitId":"JustinPeng13"},"content":"    public void toModelType_nullBill_throwsIllegalValueException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":179,"author":{"gitId":"kangzongxian"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROOM,","lastModifiedDate":"2022-10-18"},{"lineNumber":180,"author":{"gitId":"Lan-Jingbo"},"content":"                VALID_DATE_RANGE, VALID_NUMBER_OF_GUESTS, VALID_IS_ROOM_CLEAN, null, VALID_REQUEST);","lastModifiedDate":"2022-10-18"},{"lineNumber":181,"author":{"gitId":"JustinPeng13"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Bill.class.getSimpleName());","lastModifiedDate":"2022-10-15"},{"lineNumber":182,"author":{"gitId":"JustinPeng13"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2022-10-15"},{"lineNumber":183,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":184,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":185,"author":{"gitId":"Lan-Jingbo"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":186,"author":{"gitId":"Lan-Jingbo"},"content":"    public void toModelType_invalidRequest_throwsIllegalValueException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":187,"author":{"gitId":"Lan-Jingbo"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2022-10-18"},{"lineNumber":188,"author":{"gitId":"Lan-Jingbo"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROOM,","lastModifiedDate":"2022-10-19"},{"lineNumber":189,"author":{"gitId":"Lan-Jingbo"},"content":"                        VALID_DATE_RANGE, VALID_NUMBER_OF_GUESTS, VALID_IS_ROOM_CLEAN, VALID_BILL, INVALID_REQUEST);","lastModifiedDate":"2022-10-18"},{"lineNumber":190,"author":{"gitId":"Lan-Jingbo"},"content":"        String expectedMessage \u003d Request.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-18"},{"lineNumber":191,"author":{"gitId":"Lan-Jingbo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2022-10-18"},{"lineNumber":192,"author":{"gitId":"Lan-Jingbo"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":193,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":194,"author":{"gitId":"Lan-Jingbo"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":195,"author":{"gitId":"Lan-Jingbo"},"content":"    public void toModelType_nullRequest_throwsIllegalValueException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":196,"author":{"gitId":"Lan-Jingbo"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ROOM,","lastModifiedDate":"2022-10-19"},{"lineNumber":197,"author":{"gitId":"Lan-Jingbo"},"content":"                VALID_DATE_RANGE, VALID_NUMBER_OF_GUESTS, VALID_IS_ROOM_CLEAN, VALID_BILL, null);","lastModifiedDate":"2022-10-18"},{"lineNumber":198,"author":{"gitId":"Lan-Jingbo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Request.class.getSimpleName());","lastModifiedDate":"2022-10-18"},{"lineNumber":199,"author":{"gitId":"Lan-Jingbo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2022-10-18"},{"lineNumber":200,"author":{"gitId":"Lan-Jingbo"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kangzongxian":31,"jehousoh":12,"Lan-Jingbo":56,"bryanhce":25,"-":48,"JustinPeng13":29}},{"path":"src/test/java/seedu/guest/storage/JsonGuestBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.ALICE;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.HOON;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.IDA;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.GuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ReadOnlyGuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"public class JsonGuestBookStorageTest {","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonGuestBookStorageTest\");","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"Lan-Jingbo"},"content":"    public void readGuestBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Lan-Jingbo"},"content":"        assertThrows(NullPointerException.class, () -\u003e readGuestBook(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Lan-Jingbo"},"content":"    private java.util.Optional\u003cReadOnlyGuestBook\u003e readGuestBook(String filePath) throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"        return new JsonGuestBookStorage(Paths.get(filePath)).readGuestBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"Lan-Jingbo"},"content":"        assertFalse(readGuestBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"Lan-Jingbo"},"content":"        assertThrows(DataConversionException.class, () -\u003e readGuestBook(\"notJsonFormatGuestBook.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Lan-Jingbo"},"content":"    public void readGuestBook_invalidGuestBook_throwDataConversionException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"Lan-Jingbo"},"content":"        assertThrows(DataConversionException.class, () -\u003e readGuestBook(\"invalidGuestGuestBook.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"Lan-Jingbo"},"content":"    public void readGuestBook_invalidAndValidGuestBook_throwDataConversionException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"Lan-Jingbo"},"content":"        assertThrows(DataConversionException.class, () -\u003e readGuestBook(\"invalidAndValidGuestGuestBook.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"Lan-Jingbo"},"content":"    public void readAndSaveGuestBook_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"Lan-Jingbo"},"content":"        Path filePath \u003d testFolder.resolve(\"TempGuestBook.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"kangzongxian"},"content":"        GuestBook original \u003d getTypicalGuestBook();","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"Lan-Jingbo"},"content":"        JsonGuestBookStorage jsonGuestBookStorage \u003d new JsonGuestBookStorage(filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"Lan-Jingbo"},"content":"        jsonGuestBookStorage.saveGuestBook(original, filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"Lan-Jingbo"},"content":"        ReadOnlyGuestBook readBack \u003d jsonGuestBookStorage.readGuestBook(filePath).get();","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"bryanhce"},"content":"        assertEquals(original, new GuestBook(readBack));","lastModifiedDate":"2022-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"bryanhce"},"content":"        original.addGuest(HOON);","lastModifiedDate":"2022-10-01"},{"lineNumber":76,"author":{"gitId":"bryanhce"},"content":"        original.removeGuest(ALICE);","lastModifiedDate":"2022-10-01"},{"lineNumber":77,"author":{"gitId":"Lan-Jingbo"},"content":"        jsonGuestBookStorage.saveGuestBook(original, filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"Lan-Jingbo"},"content":"        readBack \u003d jsonGuestBookStorage.readGuestBook(filePath).get();","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"bryanhce"},"content":"        assertEquals(original, new GuestBook(readBack));","lastModifiedDate":"2022-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"bryanhce"},"content":"        original.addGuest(IDA);","lastModifiedDate":"2022-10-01"},{"lineNumber":83,"author":{"gitId":"Lan-Jingbo"},"content":"        jsonGuestBookStorage.saveGuestBook(original); // file path not specified","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"Lan-Jingbo"},"content":"        readBack \u003d jsonGuestBookStorage.readGuestBook().get(); // file path not specified","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"bryanhce"},"content":"        assertEquals(original, new GuestBook(readBack));","lastModifiedDate":"2022-10-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"jehousoh"},"content":"    public void saveGuestBook_nullGuestBook_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"Lan-Jingbo"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveGuestBook(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"Lan-Jingbo"},"content":"    private void saveGuestBook(ReadOnlyGuestBook guestBook, String filePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"bryanhce"},"content":"            new JsonGuestBookStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-01"},{"lineNumber":100,"author":{"gitId":"Lan-Jingbo"},"content":"                    .saveGuestBook(guestBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"Lan-Jingbo"},"content":"    public void saveGuestBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"Lan-Jingbo"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveGuestBook(new GuestBook(), null));","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kangzongxian":5,"jehousoh":1,"Lan-Jingbo":23,"bryanhce":15,"-":66}},{"path":"src/test/java/seedu/guest/storage/JsonSerializableGuestBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.util.JsonUtil;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.GuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.testutil.TypicalGuests;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"public class JsonSerializableGuestBookTest {","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableGuestBookTest\");","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"jehousoh"},"content":"    private static final Path TYPICAL_GUESTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalGuestGuestBook.json\");","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jehousoh"},"content":"    private static final Path INVALID_GUEST_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidGuestGuestBook.json\");","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jehousoh"},"content":"    private static final Path DUPLICATE_GUEST_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateGuestGuestBook.json\");","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"jehousoh"},"content":"    public void toModelType_typicalGuestsFile_success() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jehousoh"},"content":"        JsonSerializableGuestBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_GUESTS_FILE,","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"                JsonSerializableGuestBook.class).get();","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"bryanhce"},"content":"        GuestBook guestBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"        GuestBook typicalPersonsGuestBook \u003d TypicalGuests.getTypicalGuestBook();","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"bryanhce"},"content":"        assertEquals(guestBookFromFile, typicalPersonsGuestBook);","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"jehousoh"},"content":"    public void toModelType_invalidGuestFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jehousoh"},"content":"        JsonSerializableGuestBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_GUEST_FILE,","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"bryanhce"},"content":"                JsonSerializableGuestBook.class).get();","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":39,"author":{"gitId":"bryanhce"},"content":"    @Test","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"jehousoh"},"content":"    public void toModelType_duplicateGuests_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"jehousoh"},"content":"        JsonSerializableGuestBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_GUEST_FILE,","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"bryanhce"},"content":"                JsonSerializableGuestBook.class).get();","lastModifiedDate":"2022-10-01"},{"lineNumber":43,"author":{"gitId":"bryanhce"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableGuestBook.MESSAGE_DUPLICATE_GUEST,","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"bryanhce"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-10-01"},{"lineNumber":45,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":47,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"kangzongxian":2,"jehousoh":9,"bryanhce":36}},{"path":"src/test/java/seedu/guest/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jehousoh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.GuiSettings;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"bryanhce"},"content":"        userPrefs.setGuestBookFilePath(Paths.get(\"data/guestbook.json\"));","lastModifiedDate":"2022-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"jehousoh"},"content":"    public void getUserPrefsFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"jehousoh"},"content":"        Path prefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"jehousoh"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(prefsFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"jehousoh"},"content":"        assertEquals(jsonUserPrefsStorage.getUserPrefsFilePath(), prefsFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"jehousoh"},"content":"        assertNotEquals(jsonUserPrefsStorage.getUserPrefsFilePath(), testFolder.resolve(\"\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jehousoh":8,"bryanhce":6,"-":117}},{"path":"src/test/java/seedu/guest/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.storage;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.testutil.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.GuiSettings;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.GuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.ReadOnlyGuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.UserPrefs;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"jehousoh"},"content":"        JsonGuestBookStorage guestBookStorage \u003d new JsonGuestBookStorage(getTempFilePath(\"gb\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"jehousoh"},"content":"        storageManager \u003d new StorageManager(guestBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"kangzongxian"},"content":"    public void guestBookReadSave() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"kangzongxian"},"content":"         * {@link JsonGuestBookStorage} class.","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"kangzongxian"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonGuestBookStorageTest} class.","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"kangzongxian"},"content":"        GuestBook original \u003d getTypicalGuestBook();","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"bryanhce"},"content":"        storageManager.saveGuestBook(original);","lastModifiedDate":"2022-10-01"},{"lineNumber":59,"author":{"gitId":"bryanhce"},"content":"        ReadOnlyGuestBook retrieved \u003d storageManager.readGuestBook().get();","lastModifiedDate":"2022-10-01"},{"lineNumber":60,"author":{"gitId":"bryanhce"},"content":"        assertEquals(original, new GuestBook(retrieved));","lastModifiedDate":"2022-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"kangzongxian"},"content":"    public void getGuestBookFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"bryanhce"},"content":"        assertNotNull(storageManager.getGuestBookFilePath());","lastModifiedDate":"2022-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"jehousoh"},"content":"    public void getUserPrefsFilePath_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"jehousoh"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"jehousoh"},"content":"        assertEquals(storageManager.getUserPrefsFilePath(), userPrefsStorage.getUserPrefsFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"jehousoh"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"jehousoh"},"content":"    public void getGuestBookFilePath_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"jehousoh"},"content":"        JsonGuestBookStorage guestBookStorage \u003d new JsonGuestBookStorage(getTempFilePath(\"gb\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"jehousoh"},"content":"        assertEquals(storageManager.getGuestBookFilePath(), guestBookStorage.getGuestBookFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kangzongxian":6,"jehousoh":13,"bryanhce":9,"-":51}},{"path":"src/test/java/seedu/guest/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.testutil;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"bryanhce":1,"-":33}},{"path":"src/test/java/seedu/guest/testutil/EditGuestDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.testutil;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.EditCommand.EditGuestDescriptor;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.DateRange;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Email;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.IsRoomClean;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Name;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.model.guest.NumberOfGuests;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"Lan-Jingbo"},"content":"import seedu.guest.model.guest.Request;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.model.guest.Room;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":" * A utility class to help with building EditGuestDescriptor objects.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"public class EditGuestDescriptorBuilder {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"    private EditGuestDescriptor descriptor;","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"    public EditGuestDescriptorBuilder() {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"        descriptor \u003d new EditGuestDescriptor();","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"    public EditGuestDescriptorBuilder(EditGuestDescriptor descriptor) {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"bryanhce"},"content":"        this.descriptor \u003d new EditGuestDescriptor(descriptor);","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"kangzongxian"},"content":"     * Returns an {@code EditGuestDescriptor} with fields containing {@code guest}\u0027s details","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"    public EditGuestDescriptorBuilder(Guest guest) {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"bryanhce"},"content":"        descriptor \u003d new EditGuestDescriptor();","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"        descriptor.setName(guest.getName());","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"bryanhce"},"content":"        descriptor.setPhone(guest.getPhone());","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"bryanhce"},"content":"        descriptor.setEmail(guest.getEmail());","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"kangzongxian"},"content":"        descriptor.setRoom(guest.getRoom());","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"JustinPeng13"},"content":"        descriptor.setDateRange(guest.getDateRange());","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"jehousoh"},"content":"        descriptor.setNumberOfGuests(guest.getNumberOfGuests());","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"bryanhce"},"content":"        descriptor.setIsRoomClean(guest.getIsRoomClean());","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"Lan-Jingbo"},"content":"        descriptor.setRequest(guest.getRequest());","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"kangzongxian"},"content":"     * Sets the {@code Name} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"kangzongxian"},"content":"    public EditGuestDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"kangzongxian"},"content":"     * Sets the {@code Phone} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"kangzongxian"},"content":"    public EditGuestDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"kangzongxian"},"content":"     * Sets the {@code Email} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"kangzongxian"},"content":"    public EditGuestDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"kangzongxian"},"content":"     * Sets the {@code Room} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"kangzongxian"},"content":"    public EditGuestDescriptorBuilder withRoom(String room) {","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"kangzongxian"},"content":"        descriptor.setRoom(new Room(room));","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"kangzongxian"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"JustinPeng13"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"kangzongxian"},"content":"     * Sets the {@code DateRange} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"JustinPeng13"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"kangzongxian"},"content":"    public EditGuestDescriptorBuilder withDateRange(String dateRange) {","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"JustinPeng13"},"content":"        descriptor.setDateRange(new DateRange(dateRange));","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"JustinPeng13"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"jehousoh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"kangzongxian"},"content":"     * Sets the {@code NumberOfGuests} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"jehousoh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"kangzongxian"},"content":"    public EditGuestDescriptorBuilder withNumberOfGuests(String numberOfGuests) {","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"jehousoh"},"content":"        descriptor.setNumberOfGuests(new NumberOfGuests(numberOfGuests));","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"jehousoh"},"content":"        return this;","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"bryanhce"},"content":"     * Sets the {@code IsRoomClean} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"bryanhce"},"content":"    public EditGuestDescriptorBuilder withIsRoomClean(String isRoomClean) {","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"bryanhce"},"content":"        descriptor.setIsRoomClean(new IsRoomClean(isRoomClean));","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"bryanhce"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"Lan-Jingbo"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"Lan-Jingbo"},"content":"     * Sets the {@code Request} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"Lan-Jingbo"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"Lan-Jingbo"},"content":"    public EditGuestDescriptorBuilder withRequest(String request) {","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"Lan-Jingbo"},"content":"        descriptor.setRequest(new Request(request));","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"Lan-Jingbo"},"content":"        return this;","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"Lan-Jingbo"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"bryanhce"},"content":"    public EditGuestDescriptor build() {","lastModifiedDate":"2022-10-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kangzongxian":26,"jehousoh":8,"Lan-Jingbo":10,"bryanhce":24,"-":35,"JustinPeng13":8}},{"path":"src/test/java/seedu/guest/testutil/GuestBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kangzongxian"},"content":"package seedu.guest.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.model.GuestBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"kangzongxian"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"kangzongxian"},"content":" * A utility class to help with building Guestbook objects.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"kangzongxian"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":" *     {@code GuestBook ab \u003d new GuestBookBuilder().withGuest(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"public class GuestBookBuilder {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"    private GuestBook guestBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":"    public GuestBookBuilder() {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"kangzongxian"},"content":"        guestBook \u003d new GuestBook();","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"    public GuestBookBuilder(GuestBook guestBook) {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"kangzongxian"},"content":"        this.guestBook \u003d guestBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":"     * Adds a new {@code Guest} to the {@code GuestBook} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"    public GuestBookBuilder withGuest(Guest guest) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"kangzongxian"},"content":"        guestBook.addGuest(guest);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"    public GuestBook build() {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"kangzongxian"},"content":"        return guestBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"kangzongxian"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"kangzongxian":34}},{"path":"src/test/java/seedu/guest/testutil/GuestBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.testutil;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.Bill;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"JustinPeng13"},"content":"import seedu.guest.model.guest.DateRange;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Email;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.IsRoomClean;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Name;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"jehousoh"},"content":"import seedu.guest.model.guest.NumberOfGuests;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Phone;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"Lan-Jingbo"},"content":"import seedu.guest.model.guest.Request;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"kangzongxian"},"content":"import seedu.guest.model.guest.Room;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"kangzongxian"},"content":" * A utility class to help with building Guest objects.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"jehousoh"},"content":"public class GuestBuilder {","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"kangzongxian"},"content":"    public static final String DEFAULT_ROOM \u003d \"09-99\";","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"JustinPeng13"},"content":"    public static final String DEFAULT_DATE_RANGE \u003d \"13/09/22 - 15/09/22\";","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"jehousoh"},"content":"    public static final String DEFAULT_NUMBER_OF_GUESTS \u003d \"1\";","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"    public static final String DEFAULT_IS_ROOM_CLEAN \u003d \"yes\";","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinPeng13"},"content":"    public static final String DEFAULT_BILL \u003d \"0.00\";","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"Lan-Jingbo"},"content":"    public static final String DEFAULT_REQUEST \u003d \"-\";","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"    private Room room;","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"JustinPeng13"},"content":"    private DateRange dateRange;","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"jehousoh"},"content":"    private NumberOfGuests numberOfGuests;","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"    private IsRoomClean isRoomClean;","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinPeng13"},"content":"    private Bill bill;","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"Lan-Jingbo"},"content":"    private Request request;","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"kangzongxian"},"content":"     * Creates a {@code GuestBuilder} with the default details.","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"jehousoh"},"content":"    public GuestBuilder() {","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"kangzongxian"},"content":"        room \u003d new Room(DEFAULT_ROOM);","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"JustinPeng13"},"content":"        dateRange \u003d new DateRange(DEFAULT_DATE_RANGE);","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"jehousoh"},"content":"        numberOfGuests \u003d new NumberOfGuests(DEFAULT_NUMBER_OF_GUESTS);","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"bryanhce"},"content":"        isRoomClean \u003d new IsRoomClean(DEFAULT_IS_ROOM_CLEAN);","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JustinPeng13"},"content":"        bill \u003d new Bill(DEFAULT_BILL);","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"Lan-Jingbo"},"content":"        request \u003d new Request(DEFAULT_REQUEST);","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"kangzongxian"},"content":"     * Initializes the GuestBuilder with the data of {@code guestToCopy}.","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"jehousoh"},"content":"    public GuestBuilder(Guest guestToCopy) {","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"bryanhce"},"content":"        name \u003d guestToCopy.getName();","lastModifiedDate":"2022-10-01"},{"lineNumber":58,"author":{"gitId":"bryanhce"},"content":"        phone \u003d guestToCopy.getPhone();","lastModifiedDate":"2022-10-01"},{"lineNumber":59,"author":{"gitId":"bryanhce"},"content":"        email \u003d guestToCopy.getEmail();","lastModifiedDate":"2022-10-01"},{"lineNumber":60,"author":{"gitId":"kangzongxian"},"content":"        room \u003d guestToCopy.getRoom();","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"JustinPeng13"},"content":"        dateRange \u003d guestToCopy.getDateRange();","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"jehousoh"},"content":"        numberOfGuests \u003d guestToCopy.getNumberOfGuests();","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"bryanhce"},"content":"        isRoomClean \u003d guestToCopy.getIsRoomClean();","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"JustinPeng13"},"content":"        bill \u003d guestToCopy.getBill();","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"Lan-Jingbo"},"content":"        request \u003d guestToCopy.getRequest();","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"kangzongxian"},"content":"     * Sets the {@code Name} of the {@code Guest} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"jehousoh"},"content":"    public GuestBuilder withName(String name) {","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"kangzongxian"},"content":"     * Sets the {@code Phone} of the {@code Guest} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"jehousoh"},"content":"    public GuestBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"kangzongxian"},"content":"     * Sets the {@code Email} of the {@code Guest} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"jehousoh"},"content":"    public GuestBuilder withEmail(String email) {","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"kangzongxian"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"kangzongxian"},"content":"     * Sets the {@code Room} of the {@code Guest} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"kangzongxian"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"kangzongxian"},"content":"    public GuestBuilder withRoom(String room) {","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"kangzongxian"},"content":"        this.room \u003d new Room(room);","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"kangzongxian"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"kangzongxian"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"kangzongxian"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"JustinPeng13"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"kangzongxian"},"content":"     * Sets the {@code DateRange} of the {@code Guest} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"JustinPeng13"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"JustinPeng13"},"content":"    public GuestBuilder withDateRange(String dateRange) {","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"JustinPeng13"},"content":"        this.dateRange \u003d new DateRange(dateRange);","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"JustinPeng13"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"jehousoh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"kangzongxian"},"content":"     * Sets the {@code NumberOfGuests} of the {@code Guest} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"jehousoh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"jehousoh"},"content":"    public GuestBuilder withNumberOfGuests(String numberOfGuests) {","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"jehousoh"},"content":"        this.numberOfGuests \u003d new NumberOfGuests(numberOfGuests);","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"jehousoh"},"content":"        return this;","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"jehousoh"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"jehousoh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"bryanhce"},"content":"     * Sets the {@code IsRoomClean} of the {@code Guest} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"bryanhce"},"content":"    public GuestBuilder withIsRoomClean(String isRoomClean) {","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"bryanhce"},"content":"        this.isRoomClean \u003d new IsRoomClean(isRoomClean);","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"bryanhce"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"JustinPeng13"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":125,"author":{"gitId":"JustinPeng13"},"content":"     * Sets the {@code Bill} of the {@code Guest} that we are building.","lastModifiedDate":"2022-10-15"},{"lineNumber":126,"author":{"gitId":"JustinPeng13"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"JustinPeng13"},"content":"    public GuestBuilder withBill(String bill) {","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"JustinPeng13"},"content":"        this.bill \u003d new Bill(bill);","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"JustinPeng13"},"content":"        return this;","lastModifiedDate":"2022-10-15"},{"lineNumber":130,"author":{"gitId":"JustinPeng13"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"JustinPeng13"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":132,"author":{"gitId":"Lan-Jingbo"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":133,"author":{"gitId":"Lan-Jingbo"},"content":"     * Sets the {@code Request} of the {@code Guest} that we are building.","lastModifiedDate":"2022-10-18"},{"lineNumber":134,"author":{"gitId":"Lan-Jingbo"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":135,"author":{"gitId":"Lan-Jingbo"},"content":"    public GuestBuilder withRequest(String request) {","lastModifiedDate":"2022-10-18"},{"lineNumber":136,"author":{"gitId":"Lan-Jingbo"},"content":"        this.request \u003d new Request(request);","lastModifiedDate":"2022-10-18"},{"lineNumber":137,"author":{"gitId":"Lan-Jingbo"},"content":"        return this;","lastModifiedDate":"2022-10-18"},{"lineNumber":138,"author":{"gitId":"Lan-Jingbo"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":139,"author":{"gitId":"Lan-Jingbo"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":140,"author":{"gitId":"bryanhce"},"content":"    public Guest build() {","lastModifiedDate":"2022-10-01"},{"lineNumber":141,"author":{"gitId":"Lan-Jingbo"},"content":"        return new Guest(name, phone, email, room, dateRange, numberOfGuests, isRoomClean, bill, request);","lastModifiedDate":"2022-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"kangzongxian":21,"jehousoh":18,"Lan-Jingbo":14,"bryanhce":22,"-":44,"JustinPeng13":25}},{"path":"src/test/java/seedu/guest/testutil/GuestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.testutil;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_DATE_RANGE;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_IS_ROOM_CLEAN;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_NUMBER_OF_GUESTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"Lan-Jingbo"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_REQUEST;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.logic.parser.CliSyntax.PREFIX_ROOM;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.AddCommand;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.logic.commands.EditCommand.EditGuestDescriptor;","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"kangzongxian"},"content":" * A utility class for Guest.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"kangzongxian"},"content":"public class GuestUtil {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"kangzongxian"},"content":"     * Returns an add command string for adding the {@code guest}.","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"bryanhce"},"content":"    public static String getAddCommand(Guest guest) {","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"kangzongxian"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getGuestDetails(guest);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"kangzongxian"},"content":"     * Returns the part of command string for the given {@code guest}\u0027s details.","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"    public static String getGuestDetails(Guest guest) {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"bryanhce"},"content":"        sb.append(PREFIX_NAME + guest.getName().fullName + \" \");","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"        sb.append(PREFIX_PHONE + guest.getPhone().value + \" \");","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"bryanhce"},"content":"        sb.append(PREFIX_EMAIL + guest.getEmail().value + \" \");","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"kangzongxian"},"content":"        sb.append(PREFIX_ROOM + guest.getRoom().value + \" \");","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"JustinPeng13"},"content":"        sb.append(PREFIX_DATE_RANGE + guest.getDateRange().value + \" \");","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"jehousoh"},"content":"        sb.append(PREFIX_NUMBER_OF_GUESTS + guest.getNumberOfGuests().value + \" \");","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"kangzongxian"},"content":"     * Returns the part of command string for the given {@code EditGuestDescriptor}\u0027s details.","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"kangzongxian"},"content":"    public static String getEditGuestDescriptorDetails(EditGuestDescriptor descriptor) {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"kangzongxian"},"content":"        descriptor.getRoom().ifPresent(room -\u003e sb.append(PREFIX_ROOM).append(room.value).append(\" \"));","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"JustinPeng13"},"content":"        descriptor.getDateRange().ifPresent(dateRange -\u003e sb.append(PREFIX_DATE_RANGE).append(dateRange.value)","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"JustinPeng13"},"content":"                .append(\" \"));","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"jehousoh"},"content":"        descriptor.getNumberOfGuests().ifPresent(numberOfGuests -\u003e sb.append(PREFIX_NUMBER_OF_GUESTS)","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"jehousoh"},"content":"                .append(numberOfGuests.value).append(\" \"));","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"bryanhce"},"content":"        descriptor.getIsRoomClean().ifPresent(isRoomClean -\u003e sb.append(PREFIX_IS_ROOM_CLEAN)","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"bryanhce"},"content":"                .append(isRoomClean.value).append(\" \"));","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"Lan-Jingbo"},"content":"        descriptor.getRequest().ifPresent(request -\u003e sb.append(PREFIX_REQUEST)","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"Lan-Jingbo"},"content":"                .append(request.value).append(\" \"));","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"kangzongxian":11,"jehousoh":4,"Lan-Jingbo":3,"bryanhce":14,"-":25,"JustinPeng13":4}},{"path":"src/test/java/seedu/guest/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.testutil;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanhce":1,"-":71}},{"path":"src/test/java/seedu/guest/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.testutil;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.index.Index;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.Model;","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"kangzongxian"},"content":"     * Returns the middle index of the guest in the {@code model}\u0027s guest list.","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"bryanhce"},"content":"        return Index.fromOneBased(model.getFilteredGuestList().size() / 2);","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"kangzongxian"},"content":"     * Returns the last index of the guest in the {@code model}\u0027s guest list.","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"bryanhce"},"content":"        return Index.fromOneBased(model.getFilteredGuestList().size());","lastModifiedDate":"2022-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"kangzongxian"},"content":"     * Returns the guest in the {@code model}\u0027s guest list at {@code index}.","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"kangzongxian"},"content":"    public static Guest getGuest(Model model, Index index) {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"bryanhce"},"content":"        return model.getFilteredGuestList().get(index.getZeroBased());","lastModifiedDate":"2022-10-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kangzongxian":4,"bryanhce":7,"-":44}},{"path":"src/test/java/seedu/guest/testutil/TypicalGuests.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.testutil;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_DATE_RANGE_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"JustinPeng13"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_DATE_RANGE_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_NUMBER_OF_GUESTS_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"jehousoh"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_NUMBER_OF_GUESTS_BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_ROOM_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"kangzongxian"},"content":"import static seedu.guest.logic.commands.CommandTestUtil.VALID_ROOM_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"bryanhce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"bryanhce"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"bryanhce"},"content":"import java.util.List;","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.GuestBook;","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.model.guest.Guest;","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"bryanhce"},"content":"/**","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"kangzongxian"},"content":" * A utility class containing a list of {@code Guest} objects to be used in tests.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"bryanhce"},"content":" */","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"kangzongxian"},"content":"public class TypicalGuests {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"jehousoh"},"content":"    public static final Guest ALICE \u003d new GuestBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"kangzongxian"},"content":"            .withEmail(\"alice@example.com\").withRoom(\"05-73\")","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"JustinPeng13"},"content":"            .withDateRange(\"13/09/22 - 15/09/22\").withNumberOfGuests(\"1\")","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Lan-Jingbo"},"content":"            .withPhone(\"94351253\").withIsRoomClean(\"yes\").withBill(\"0\")","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"kangzongxian"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"jehousoh"},"content":"    public static final Guest BENSON \u003d new GuestBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"kangzongxian"},"content":"            .withEmail(\"johnd@example.com\").withRoom(\"03-23\")","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"bryanhce"},"content":"            .withDateRange(\"30/09/22 - 02/10/22\").withNumberOfGuests(\"2\")","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinPeng13"},"content":"            .withPhone(\"98765432\").withIsRoomClean(\"yes\").withBill(\"1\")","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"Lan-Jingbo"},"content":"            .withRequest(\"I want to clean my room again\")","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"kangzongxian"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"jehousoh"},"content":"    public static final Guest CARL \u003d new GuestBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"kangzongxian"},"content":"            .withEmail(\"heinz@example.com\").withRoom(\"05-25\").withDateRange(\"30/12/22 - 02/01/23\")","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Lan-Jingbo"},"content":"            .withNumberOfGuests(\"3\").withIsRoomClean(\"no\").withBill(\"19.99\")","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"Lan-Jingbo"},"content":"            .withRequest(\"There are too many insects in my room, can you help me kill them?\")","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"kangzongxian"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"jehousoh"},"content":"    public static final Guest DANIEL \u003d new GuestBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"kangzongxian"},"content":"            .withEmail(\"cornelia@example.com\").withRoom(\"04-03\").withDateRange(\"29/05/23 - 03/06/23\")","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"Lan-Jingbo"},"content":"            .withNumberOfGuests(\"4\").withIsRoomClean(\"yes\").withBill(\"50\")","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"Lan-Jingbo"},"content":"            .withRequest(\"-\")","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"jehousoh"},"content":"            .build();","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"jehousoh"},"content":"    public static final Guest ELLE \u003d new GuestBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"kangzongxian"},"content":"            .withEmail(\"werner@example.com\").withRoom(\"03-25\").withDateRange(\"08/04/23 - 22/04/23\")","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"Lan-Jingbo"},"content":"            .withNumberOfGuests(\"1\").withIsRoomClean(\"no\").withBill(\"100\").withRequest(\"Room service\")","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"kangzongxian"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"jehousoh"},"content":"    public static final Guest FIONA \u003d new GuestBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"kangzongxian"},"content":"            .withEmail(\"lydia@example.com\").withRoom(\"06-22\").withDateRange(\"21/10/22 - 22/10/22\")","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"Lan-Jingbo"},"content":"            .withNumberOfGuests(\"2\").withIsRoomClean(\"no\").withBill(\"999.99\")","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"Lan-Jingbo"},"content":"            .withRequest(\"The neighbour is too noisy, could you help me call him or her?\")","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"kangzongxian"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"jehousoh"},"content":"    public static final Guest GEORGE \u003d new GuestBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"kangzongxian"},"content":"            .withEmail(\"anna@example.com\").withRoom(\"07-05\").withDateRange(\"01/01/23 - 07/01/23\")","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"Lan-Jingbo"},"content":"            .withNumberOfGuests(\"3\").withIsRoomClean(\"yes\").withBill(\"1000.01\")","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"Lan-Jingbo"},"content":"            .withRequest(\"I want to live with my pet dog\")","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"kangzongxian"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":63,"author":{"gitId":"bryanhce"},"content":"    // Manually added","lastModifiedDate":"2022-10-01"},{"lineNumber":64,"author":{"gitId":"jehousoh"},"content":"    public static final Guest HOON \u003d new GuestBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"kangzongxian"},"content":"            .withEmail(\"stefan@example.com\").withRoom(\"02-21\").withDateRange(\"01/05/23 - 01/01/24\")","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"Lan-Jingbo"},"content":"            .withNumberOfGuests(\"1\").withIsRoomClean(\"no\").withBill(\"6969.69\").withRequest(\"Room service\")","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"kangzongxian"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"jehousoh"},"content":"    public static final Guest IDA \u003d new GuestBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"kangzongxian"},"content":"            .withEmail(\"hans@example.com\").withRoom(\"05-36\").withDateRange(\"11/11/23 - 12/11/23\")","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"Lan-Jingbo"},"content":"            .withNumberOfGuests(\"4\").withIsRoomClean(\"yes\").withBill(\"9999999999\").withRequest(\"Room Cleaning\")","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"kangzongxian"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":73,"author":{"gitId":"kangzongxian"},"content":"    // Manually added - Guest\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"jehousoh"},"content":"    public static final Guest AMY \u003d new GuestBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"kangzongxian"},"content":"            .withEmail(VALID_EMAIL_AMY).withRoom(VALID_ROOM_AMY).withDateRange(VALID_DATE_RANGE_AMY)","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"kangzongxian"},"content":"            .withNumberOfGuests(VALID_NUMBER_OF_GUESTS_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"kangzongxian"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"jehousoh"},"content":"    public static final Guest BOB \u003d new GuestBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"kangzongxian"},"content":"            .withEmail(VALID_EMAIL_BOB).withRoom(VALID_ROOM_BOB).withDateRange(VALID_DATE_RANGE_BOB)","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"kangzongxian"},"content":"            .withNumberOfGuests(VALID_NUMBER_OF_GUESTS_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"kangzongxian"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":83,"author":{"gitId":"bryanhce"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-10-01"},{"lineNumber":84,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":85,"author":{"gitId":"kangzongxian"},"content":"    private TypicalGuests() {} // prevents instantiation","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":87,"author":{"gitId":"bryanhce"},"content":"    /**","lastModifiedDate":"2022-10-01"},{"lineNumber":88,"author":{"gitId":"kangzongxian"},"content":"     * Returns an {@code GuestBook} with all the typical guests.","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"bryanhce"},"content":"     */","lastModifiedDate":"2022-10-01"},{"lineNumber":90,"author":{"gitId":"kangzongxian"},"content":"    public static GuestBook getTypicalGuestBook() {","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"bryanhce"},"content":"        GuestBook ab \u003d new GuestBook();","lastModifiedDate":"2022-10-01"},{"lineNumber":92,"author":{"gitId":"kangzongxian"},"content":"        for (Guest guest : getTypicalGuests()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"bryanhce"},"content":"            ab.addGuest(guest);","lastModifiedDate":"2022-10-01"},{"lineNumber":94,"author":{"gitId":"bryanhce"},"content":"        }","lastModifiedDate":"2022-10-01"},{"lineNumber":95,"author":{"gitId":"bryanhce"},"content":"        return ab;","lastModifiedDate":"2022-10-01"},{"lineNumber":96,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":97,"author":{"gitId":"bryanhce"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":98,"author":{"gitId":"kangzongxian"},"content":"    public static List\u003cGuest\u003e getTypicalGuests() {","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"bryanhce"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2022-10-01"},{"lineNumber":100,"author":{"gitId":"bryanhce"},"content":"    }","lastModifiedDate":"2022-10-01"},{"lineNumber":101,"author":{"gitId":"bryanhce"},"content":"}","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"kangzongxian":33,"jehousoh":14,"Lan-Jingbo":13,"bryanhce":37,"JustinPeng13":4}},{"path":"src/test/java/seedu/guest/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.testutil;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.commons.core.index.Index;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"kangzongxian"},"content":"    public static final Index INDEX_FIRST_GUEST \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"kangzongxian"},"content":"    public static final Index INDEX_SECOND_GUEST \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"kangzongxian"},"content":"    public static final Index INDEX_THIRD_GUEST \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"kangzongxian":3,"bryanhce":2,"-":7}},{"path":"src/test/java/seedu/guest/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"bryanhce":1,"-":34}},{"path":"src/test/java/seedu/guest/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanhce"},"content":"package seedu.guest.ui;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"bryanhce"},"content":"import static seedu.guest.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"bryanhce"},"content":"import seedu.guest.MainApp;","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"bryanhce":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"\u003c?import seedu.guest.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"bryanhce":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"bryanhce"},"content":"\u003cfx:root type\u003d\"seedu.guest.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"bryanhce":1,"-":5}}]
