[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ryanczx"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W12-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W12-2/tp/actions)","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"* This is **a brownfield project for Software Engineering (SE) students**.\u003cbr\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"  * Can be used by secretaries and treasurers to manage the club they belong to.","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"  * Can also be used to take notes and as a bare-boned address book as well.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"ryanczx"},"content":"* The project simulates an ongoing software project for a desktop application (called _SectresBook_) used for managing contact details.","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ryanczx"},"content":"* It is named `SectresBook` because it is used by Secretaries and Treasurers of clubs to manage their club information.","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"ryanczx"},"content":"* For the detailed documentation of this project, see the **[SectresBook Product Website](https://ay2223s1-cs2103t-w12-2.github.io/tp/)**.","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"czhongwei"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"czhongwei":1,"ryanczx":4,"Pinran-J":3,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"run {","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"ryanczx"},"content":"    archiveFileName \u003d \u0027SectresBook.jar\u0027","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ryanczx":1,"rui-han-crh":4,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Neethesh26"},"content":"### T Neethesh","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Neethesh26"},"content":"\u003cimg src\u003d\"images/neethesh26.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Neethesh26"},"content":"[[github](https://github.com/Neethesh26)]","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"### Chen Ruihan","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"\u003cimg src\u003d\"images/rui-han-crh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"[[github](http://github.com/rui-han-crh)]","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"[[portfolio](team/rui-han-crh.md)]","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"* Role: Developer","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"* Responsibilities: Features","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"ryanczx"},"content":"### Ryan Chua","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"ryanczx"},"content":"\u003cimg src\u003d\"images/ryanczx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"ryanczx"},"content":"[[github](http://github.com/ryanczx)]","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"ryanczx"},"content":"[[portfolio](team/ryanczx.md)]","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"czhongwei"},"content":"### Chee Zhong Wei","lastModifiedDate":"2022-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"czhongwei"},"content":"\u003cimg src\u003d\"images/czhongwei.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"czhongwei"},"content":"[[github](http://github.com/czhongwei)]","lastModifiedDate":"2022-09-27"},{"lineNumber":46,"author":{"gitId":"czhongwei"},"content":"[[portfolio](team/czhongwei.md)]","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"czhongwei"},"content":"* Responsibilities: Features","lastModifiedDate":"2022-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"### Jiang Pinran","lastModifiedDate":"2022-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Pinran-J"},"content":"\u003cimg src\u003d\"images/pinran-j.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Pinran-J"},"content":"[[github](http://github.com/Pinran-J)]","lastModifiedDate":"2022-09-27"},{"lineNumber":56,"author":{"gitId":"Pinran-J"},"content":"[[portfolio](team/pinran-j.md)]","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"czhongwei":5,"ryanczx":4,"Neethesh26":3,"rui-han-crh":6,"Pinran-J":4,"-":37}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `NoteListPanel`, `PersonInspectPanel` `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"The `UI` component is separate from the state of the `Model` and changes to the `UI` will not affect the `Model`, but changes to the `Model`\u0027s state will affect the information displayed by the `UI` elements.","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"Similarly, changes to the visual aspects of `UI`, such as current person viewed, or the filtered state of the lists, will not be saved to file as they do not affect the `Model`\u0027s data.","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"rui-han-crh"},"content":"* depends on some classes in the `Model` component, as it displays `Person` and `Notes` object residing in the `Model`.","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"rui-han-crh"},"content":"#### UI Elements","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"rui-han-crh"},"content":"1. **Command Box**: A text box that allows users to enter in commands for later execution.","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"rui-han-crh"},"content":"2. **ResultDisplay**: A readonly text box that serves as a console to give feedback from the `Logic` component to the user, such as error messages or logs.","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"rui-han-crh"},"content":"3. **Person List**: A horizontal sliding list that displays all persons in the SectresBook. This list can be filtered to display only relevant people according to some predicate.","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"rui-han-crh"},"content":"4. **Note List**: A vertical sliding list that displays all notes in the SectresBook. This list can be filtered to display only relevant notes according to some predicate.","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"rui-han-crh"},"content":"5. **Person Inspect Panel**: This Panel displays data of a person, using the UI command `inspect`.","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"rui-han-crh"},"content":"6. **Status Bar Footer**: This footer displays the address where the data file is saved to.","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"rui-han-crh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy-marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"rui-han-crh"},"content":"Commands such as Edit and Delete feature the ability to delete by name, which utilises the Find feature. Illustrated here is how `execute(\"edit Lynette\")` interacts with the Logic component, using a sequence diagram","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"rui-han-crh"},"content":"![Interactions Inside the Logic Component for the `edit Lynette` Command](images/EditSequenceDiagram.png)","lastModifiedDate":"2022-10-21"},{"lineNumber":124,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"Pinran-J"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object) and all `Note` objects (contained in a `NoteBook` object)","lastModifiedDate":"2022-10-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"rui-han-crh"},"content":"## Properties Objects","lastModifiedDate":"2022-10-23"},{"lineNumber":167,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":168,"author":{"gitId":"rui-han-crh"},"content":"### Properties of Person Objects","lastModifiedDate":"2022-10-23"},{"lineNumber":169,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":170,"author":{"gitId":"rui-han-crh"},"content":"This section explains the components of a person object and how they can be used to track information.","lastModifiedDate":"2022-10-23"},{"lineNumber":171,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":172,"author":{"gitId":"rui-han-crh"},"content":"\u003cimg src\u003d\"images/PersonClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":173,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":174,"author":{"gitId":"rui-han-crh"},"content":"A person object contains editable properties:","lastModifiedDate":"2022-10-23"},{"lineNumber":175,"author":{"gitId":"rui-han-crh"},"content":"1. Name","lastModifiedDate":"2022-10-23"},{"lineNumber":176,"author":{"gitId":"rui-han-crh"},"content":"    - Describes the full name of the person","lastModifiedDate":"2022-10-23"},{"lineNumber":177,"author":{"gitId":"rui-han-crh"},"content":"2. Phone","lastModifiedDate":"2022-10-23"},{"lineNumber":178,"author":{"gitId":"rui-han-crh"},"content":"    - Records the mobile phone contact number of the person","lastModifiedDate":"2022-10-23"},{"lineNumber":179,"author":{"gitId":"rui-han-crh"},"content":"3. Email","lastModifiedDate":"2022-10-23"},{"lineNumber":180,"author":{"gitId":"rui-han-crh"},"content":"    - Records the email address of the person","lastModifiedDate":"2022-10-23"},{"lineNumber":181,"author":{"gitId":"rui-han-crh"},"content":"4. Address","lastModifiedDate":"2022-10-23"},{"lineNumber":182,"author":{"gitId":"rui-han-crh"},"content":"    - Records the home address of the person","lastModifiedDate":"2022-10-23"},{"lineNumber":183,"author":{"gitId":"rui-han-crh"},"content":"5. Tag","lastModifiedDate":"2022-10-23"},{"lineNumber":184,"author":{"gitId":"rui-han-crh"},"content":"    - Optionally tags the person with a variable number of tags for easy reference within the SectresBook.","lastModifiedDate":"2022-10-23"},{"lineNumber":185,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":186,"author":{"gitId":"rui-han-crh"},"content":"And a non-editable property:","lastModifiedDate":"2022-10-23"},{"lineNumber":187,"author":{"gitId":"rui-han-crh"},"content":"1. Loan","lastModifiedDate":"2022-10-23"},{"lineNumber":188,"author":{"gitId":"rui-han-crh"},"content":"    - Tracks the current loan amount of the person. A positive number means that the person currently owes money to the club, a negative number means that money is due to be paid to the person.","lastModifiedDate":"2022-10-23"},{"lineNumber":189,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":190,"author":{"gitId":"rui-han-crh"},"content":"During instantiation, a person object can be declared with all fields, but during editing, Loan must use a specialised command to transform its data.","lastModifiedDate":"2022-10-23"},{"lineNumber":191,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":192,"author":{"gitId":"rui-han-crh"},"content":"## Properties of Note Objects","lastModifiedDate":"2022-10-23"},{"lineNumber":193,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":194,"author":{"gitId":"rui-han-crh"},"content":"This section explains the components of a note object and how they can be used to track information.","lastModifiedDate":"2022-10-23"},{"lineNumber":195,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":196,"author":{"gitId":"rui-han-crh"},"content":"\u003cimg src\u003d\"images/NoteClassDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":197,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":198,"author":{"gitId":"rui-han-crh"},"content":"A note object contains editable properties:","lastModifiedDate":"2022-10-23"},{"lineNumber":199,"author":{"gitId":"rui-han-crh"},"content":"1. Title","lastModifiedDate":"2022-10-23"},{"lineNumber":200,"author":{"gitId":"rui-han-crh"},"content":"    - The title of the note, which can be searched by.","lastModifiedDate":"2022-10-23"},{"lineNumber":201,"author":{"gitId":"rui-han-crh"},"content":"2. Content","lastModifiedDate":"2022-10-23"},{"lineNumber":202,"author":{"gitId":"rui-han-crh"},"content":"    - The description of the note.","lastModifiedDate":"2022-10-23"},{"lineNumber":203,"author":{"gitId":"rui-han-crh"},"content":"3. Tags","lastModifiedDate":"2022-10-23"},{"lineNumber":204,"author":{"gitId":"rui-han-crh"},"content":"    - Optional tags that can be assigned to the notes, after-which every person with that tag will be associated with the notes.","lastModifiedDate":"2022-10-23"},{"lineNumber":205,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":206,"author":{"gitId":"rui-han-crh"},"content":"During instantiation, a note object can be declared with any of these properties.","lastModifiedDate":"2022-10-23"},{"lineNumber":207,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":208,"author":{"gitId":"rui-han-crh"},"content":"-------------------","lastModifiedDate":"2022-10-23"},{"lineNumber":209,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"rui-han-crh"},"content":"### Edit Feature","lastModifiedDate":"2022-10-23"},{"lineNumber":215,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":216,"author":{"gitId":"rui-han-crh"},"content":"The Edit Person feature is facilitated by the `EditCommand` which utilises the `FindCommand`. It allows users to edit any editable field of a person given the index of the person, or the name of the person.","lastModifiedDate":"2022-10-23"},{"lineNumber":217,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":218,"author":{"gitId":"rui-han-crh"},"content":"If given a name that does not correspond to any person in the SectresBook, the edit features performs the same operations as the Find Command.","lastModifiedDate":"2022-10-23"},{"lineNumber":219,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":220,"author":{"gitId":"rui-han-crh"},"content":"Given below is an example usage scenario and how the edit mechanism behaves at each step.","lastModifiedDate":"2022-10-23"},{"lineNumber":221,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":222,"author":{"gitId":"rui-han-crh"},"content":"Step 1. The user enters the edit command, with either the index or the person\u0027s name.","lastModifiedDate":"2022-10-23"},{"lineNumber":223,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":224,"author":{"gitId":"rui-han-crh"},"content":"Step 2a If an index is entered, the `EditCommandParser` carries this index to the `EditCommand`, which retrieves the `Person` to edit by getting the `Model`\u0027s current `FilteredList\u003cPerson\u003e` and retrieving by index.","lastModifiedDate":"2022-10-23"},{"lineNumber":225,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":226,"author":{"gitId":"rui-han-crh"},"content":"Step 2b. If a non-number is entered, the `EditCommandParser` invokes the `FindCommandParser#parse` method and executes it at the same time with `FindCommand#execute`. The `FilteredList\u003cPerson\u003e` is then checked to ensure that there is exactly one person that corresponds with the search term. Otherwise, the method short-circuits with ambiguity errors (more than 1 person) or invalid person errors (no persons at all). If successful, `EditCommandParser` returns a new `EditCommand` with a one-based-index of 1.","lastModifiedDate":"2022-10-23"},{"lineNumber":227,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":228,"author":{"gitId":"rui-han-crh"},"content":"- Example of ambiguity error message:","lastModifiedDate":"2022-10-23"},{"lineNumber":229,"author":{"gitId":"rui-han-crh"},"content":"\u003e There is more than 1 person with the name [NAME]","lastModifiedDate":"2022-10-23"},{"lineNumber":230,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":231,"author":{"gitId":"rui-han-crh"},"content":"- Example of invalid name error message:","lastModifiedDate":"2022-10-23"},{"lineNumber":232,"author":{"gitId":"rui-han-crh"},"content":"\u003e There is nobody with the name [NAME]","lastModifiedDate":"2022-10-23"},{"lineNumber":233,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":234,"author":{"gitId":"rui-han-crh"},"content":"Step 3. `EditCommand#execute` is called by the `LogicManager`. The person to edit is retrieved by the index given and a new edited person is created by copying over non-transformed fields and replacing the transformed field.","lastModifiedDate":"2022-10-23"},{"lineNumber":235,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":236,"author":{"gitId":"rui-han-crh"},"content":"Step 4. The `editedPerson` is then set to replace the previous state of the `Person` object in the `Model` with `Model#setPerson`.","lastModifiedDate":"2022-10-23"},{"lineNumber":237,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":238,"author":{"gitId":"rui-han-crh"},"content":"The following sequence diagram shows how the `edit` feature works.","lastModifiedDate":"2022-10-23"},{"lineNumber":239,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":240,"author":{"gitId":"rui-han-crh"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/EditSequenceDiagram.png)","lastModifiedDate":"2022-10-23"},{"lineNumber":241,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":242,"author":{"gitId":"Neethesh26"},"content":"### Delete Person","lastModifiedDate":"2022-10-22"},{"lineNumber":243,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":244,"author":{"gitId":"Neethesh26"},"content":"#### Implementation","lastModifiedDate":"2022-10-22"},{"lineNumber":245,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":246,"author":{"gitId":"Neethesh26"},"content":"The delete person feature is facilitated by `DeleteCommand`. It allows users to delete a person from the SectresBook that match the full","lastModifiedDate":"2022-10-25"},{"lineNumber":247,"author":{"gitId":"Neethesh26"},"content":"First name or Last name of the person.","lastModifiedDate":"2022-10-22"},{"lineNumber":248,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":249,"author":{"gitId":"Neethesh26"},"content":"Given below is the example usage scenario and how the delete feature behaves at each step.","lastModifiedDate":"2022-10-22"},{"lineNumber":250,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":251,"author":{"gitId":"Neethesh26"},"content":"Step 1. The user executes \u0027delete David\u0027 command to delete a person with the name \u0027David\u0027 from the SectresBook.","lastModifiedDate":"2022-10-25"},{"lineNumber":252,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":253,"author":{"gitId":"Neethesh26"},"content":"Step 2. The `DeleteCommandParser` creates a `FindCommand` with \u0027David\u0027.","lastModifiedDate":"2022-10-22"},{"lineNumber":254,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":255,"author":{"gitId":"Neethesh26"},"content":"Step 3. The `DeleteCommand` is executed with Index 1.","lastModifiedDate":"2022-10-22"},{"lineNumber":256,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":257,"author":{"gitId":"Neethesh26"},"content":"The following sequence diagram shows how the delete command works:","lastModifiedDate":"2022-10-22"},{"lineNumber":258,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":259,"author":{"gitId":"Neethesh26"},"content":"\u003cimg src\u003d\"images/DeleteSequenceWithNameDiagram.png\" width\u003d\"740\"/\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":260,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":261,"author":{"gitId":"Neethesh26"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) ","lastModifiedDate":"2022-10-22"},{"lineNumber":262,"author":{"gitId":"Neethesh26"},"content":"but due to a limitation of PlantUML, the lifeline reaches the end of diagram. \u003c/div\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":263,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":264,"author":{"gitId":"Neethesh26"},"content":"#### Design Considerations:","lastModifiedDate":"2022-10-22"},{"lineNumber":265,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":266,"author":{"gitId":"Neethesh26"},"content":"**Aspect: How delete executes:**","lastModifiedDate":"2022-10-22"},{"lineNumber":267,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":268,"author":{"gitId":"Neethesh26"},"content":"* **Alternative 1 (Currect choice):** Deletes person based on complete first/last name from input.","lastModifiedDate":"2022-10-22"},{"lineNumber":269,"author":{"gitId":"Neethesh26"},"content":"  * Pros: Less strictness of input from the user to delete a person.","lastModifiedDate":"2022-10-22"},{"lineNumber":270,"author":{"gitId":"Neethesh26"},"content":"  * Cons: User may accidentally delete a person not meant to be deleted.","lastModifiedDate":"2022-10-22"},{"lineNumber":271,"author":{"gitId":"Neethesh26"},"content":"* **Alternative 2:** Delete a person based on complete name i.e. first and last name required in input.","lastModifiedDate":"2022-10-25"},{"lineNumber":272,"author":{"gitId":"Neethesh26"},"content":"  * Pros: Stricter input requirement, ensuring that persons are not accidentally deleted.","lastModifiedDate":"2022-10-22"},{"lineNumber":273,"author":{"gitId":"Neethesh26"},"content":"  * Cons: Longer input required for the same output.","lastModifiedDate":"2022-10-22"},{"lineNumber":274,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":275,"author":{"gitId":"Pinran-J"},"content":"### addNote feature","lastModifiedDate":"2022-10-20"},{"lineNumber":276,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":277,"author":{"gitId":"Pinran-J"},"content":"#### Implementation","lastModifiedDate":"2022-10-20"},{"lineNumber":278,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":279,"author":{"gitId":"Pinran-J"},"content":"The addNote mechanism is facilitated by `AddNoteCommand`. It extends `Command` and overrides `Command#execute()` to implement the following operation:","lastModifiedDate":"2022-10-20"},{"lineNumber":280,"author":{"gitId":"Pinran-J"},"content":"- `AddNoteCommand#execute()` : adds the specified note with its associated title and content into the list of notes to be kept track of.","lastModifiedDate":"2022-10-20"},{"lineNumber":281,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":282,"author":{"gitId":"Pinran-J"},"content":"Given below is an example usage scenario and how the addNote mechanism behaves at each step.","lastModifiedDate":"2022-10-20"},{"lineNumber":283,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":284,"author":{"gitId":"Pinran-J"},"content":"Step 1. The user launches the application and wishes to keep track of a note with the following attributes :","lastModifiedDate":"2022-10-20"},{"lineNumber":285,"author":{"gitId":"Pinran-J"},"content":"1. Title : Club meeting","lastModifiedDate":"2022-10-20"},{"lineNumber":286,"author":{"gitId":"Pinran-J"},"content":"2. Content : 3rd October 9pm, brief everybody on upcoming events.","lastModifiedDate":"2022-10-20"},{"lineNumber":287,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":288,"author":{"gitId":"czhongwei"},"content":"Step 2. The user executes `addNote title/Meeting content/3rd October 9pm`, which calls `LogicManager#execute()`. Subsequently, `AddressBookParser#parseCommand()` is called","lastModifiedDate":"2022-10-25"},{"lineNumber":289,"author":{"gitId":"Pinran-J"},"content":"which will create a `AddNoteCommandParser` object and call `AddNoteCommandParser#parse()`. This method will take the user\u0027s input and make sense of it to create a `Note` object.","lastModifiedDate":"2022-10-20"},{"lineNumber":290,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":291,"author":{"gitId":"Pinran-J"},"content":"Step 3. An `AddNoteCommand` will be created and `AddNoteCommand#execute()` will be called by `LogicManager#execute()`.","lastModifiedDate":"2022-10-20"},{"lineNumber":292,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":293,"author":{"gitId":"Pinran-J"},"content":"Step 4. `AddNoteCommand#execute()` will call the following method from `Model` :","lastModifiedDate":"2022-10-20"},{"lineNumber":294,"author":{"gitId":"Pinran-J"},"content":"- `addNote(toAdd)`","lastModifiedDate":"2022-10-20"},{"lineNumber":295,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":296,"author":{"gitId":"Pinran-J"},"content":"Step 5. `AddNoteCommand#execute()` will return a `CommandResult` object which will display the following message back to the user:","lastModifiedDate":"2022-10-20"},{"lineNumber":297,"author":{"gitId":"Pinran-J"},"content":"\u003e New note added: Title: Meeting, Content: 3rd October 9pm","lastModifiedDate":"2022-10-20"},{"lineNumber":298,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":299,"author":{"gitId":"Pinran-J"},"content":"The following sequence diagram shows how the addNote operation works:","lastModifiedDate":"2022-10-20"},{"lineNumber":300,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":301,"author":{"gitId":"Pinran-J"},"content":"![AddNoteSequenceDiagram](images/AddNoteSequenceDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":302,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":303,"author":{"gitId":"Pinran-J"},"content":"#### Design considerations","lastModifiedDate":"2022-10-21"},{"lineNumber":304,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":305,"author":{"gitId":"Pinran-J"},"content":"**Aspect: How Title and Content are represented:**","lastModifiedDate":"2022-10-21"},{"lineNumber":306,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":307,"author":{"gitId":"Pinran-J"},"content":"* **Alternative 1 (current choice):** Title and Content as separate objects.","lastModifiedDate":"2022-10-21"},{"lineNumber":308,"author":{"gitId":"Pinran-J"},"content":"    * Pros: Easy to validate Title/Content. (In the respective classes)","lastModifiedDate":"2022-10-21"},{"lineNumber":309,"author":{"gitId":"Pinran-J"},"content":"    * Cons: May have performance issues in terms of memory usage(Many objects might be created).","lastModifiedDate":"2022-10-21"},{"lineNumber":310,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":311,"author":{"gitId":"Pinran-J"},"content":"* **Alternative 2:** Title and Content as fields of Note","lastModifiedDate":"2022-10-21"},{"lineNumber":312,"author":{"gitId":"Pinran-J"},"content":"    * Pros: Will use less memory (Fewer objects created).","lastModifiedDate":"2022-10-21"},{"lineNumber":313,"author":{"gitId":"Pinran-J"},"content":"    * Cons: Harder to validate Title/Content. Better OOP(Object-oriented programming) design.","lastModifiedDate":"2022-10-21"},{"lineNumber":314,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":315,"author":{"gitId":"Pinran-J"},"content":"### deleteNote feature","lastModifiedDate":"2022-10-21"},{"lineNumber":316,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":317,"author":{"gitId":"Pinran-J"},"content":"#### Proposed implementation","lastModifiedDate":"2022-10-21"},{"lineNumber":318,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":319,"author":{"gitId":"Pinran-J"},"content":"The deleteNote mechanism is facilitated by `DeleteNoteCommand`. It extends `Command` and overrides `Command#execute()` to implement the following operation:","lastModifiedDate":"2022-10-21"},{"lineNumber":320,"author":{"gitId":"Pinran-J"},"content":"- `DeleteNoteCommand#execute()` : deletes the note at the specified index from the note list.","lastModifiedDate":"2022-10-21"},{"lineNumber":321,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":322,"author":{"gitId":"Pinran-J"},"content":"Given below is an example usage scenario and how the addNote mechanism behaves at each step.","lastModifiedDate":"2022-10-21"},{"lineNumber":323,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":324,"author":{"gitId":"Pinran-J"},"content":"Step 1. The user launches the application and wishes to delete a note that no longer needs to be kept track of. The user lists the current notes:","lastModifiedDate":"2022-10-21"},{"lineNumber":325,"author":{"gitId":"Pinran-J"},"content":"1. Title: Meeting, Content: 3rd October 9pm","lastModifiedDate":"2022-10-21"},{"lineNumber":326,"author":{"gitId":"Pinran-J"},"content":"2. Title: Event, Content: Remind club members to attend.","lastModifiedDate":"2022-10-21"},{"lineNumber":327,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":328,"author":{"gitId":"Pinran-J"},"content":"The user has decided to delete note 1.","lastModifiedDate":"2022-10-21"},{"lineNumber":329,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":330,"author":{"gitId":"Pinran-J"},"content":"Step 2. The user executes `deleteNote 1`, which calls `LogicManager#execute()`. Subsequently, `AddressBookParser#parseCommand()` is called","lastModifiedDate":"2022-10-21"},{"lineNumber":331,"author":{"gitId":"Pinran-J"},"content":"which will create a `DeleteNoteCommandParser` object and call `DeleteNoteCommandParser#parse()`. This method will take the user\u0027s input and make sense of it to get the index of note to be deleted.","lastModifiedDate":"2022-10-21"},{"lineNumber":332,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":333,"author":{"gitId":"Pinran-J"},"content":"Step 3. A `DeleteNoteCommand` object will be created and `DeleteNoteCommand#execute()` will be called by `LogicManager#execute()`.","lastModifiedDate":"2022-10-21"},{"lineNumber":334,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":335,"author":{"gitId":"Pinran-J"},"content":"Step 4. `DeleteNoteCommand#execute()` will call the following method from `Model` :","lastModifiedDate":"2022-10-21"},{"lineNumber":336,"author":{"gitId":"Pinran-J"},"content":"- `getAddressBook()`","lastModifiedDate":"2022-10-21"},{"lineNumber":337,"author":{"gitId":"Pinran-J"},"content":"- `deleteNote(noteToDelete)`","lastModifiedDate":"2022-10-21"},{"lineNumber":338,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":339,"author":{"gitId":"Pinran-J"},"content":"Step 5. `DeleteNoteCommand#execute()` will return a `CommandResult` object which will display the following message back to the user:","lastModifiedDate":"2022-10-21"},{"lineNumber":340,"author":{"gitId":"Pinran-J"},"content":"\u003e Deleted Note: Title: Meeting, Content: 3rd October 9pm","lastModifiedDate":"2022-10-21"},{"lineNumber":341,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":342,"author":{"gitId":"Pinran-J"},"content":"The following sequence diagram shows how the addNote operation works:","lastModifiedDate":"2022-10-21"},{"lineNumber":343,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":344,"author":{"gitId":"Pinran-J"},"content":"![DeleteNoteSequenceDiagram](images/DeleteNoteSequenceDiagram.png)","lastModifiedDate":"2022-10-21"},{"lineNumber":345,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":346,"author":{"gitId":"Pinran-J"},"content":"#### Design considerations","lastModifiedDate":"2022-10-21"},{"lineNumber":347,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":348,"author":{"gitId":"Pinran-J"},"content":"**Aspect: How the note to be deleted is specified:**","lastModifiedDate":"2022-10-21"},{"lineNumber":349,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":350,"author":{"gitId":"Pinran-J"},"content":"* **Alternative 1 (current choice):** Note is specified by index.","lastModifiedDate":"2022-10-21"},{"lineNumber":351,"author":{"gitId":"Pinran-J"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2022-10-21"},{"lineNumber":352,"author":{"gitId":"Pinran-J"},"content":"    * Cons: Would need to use listNote command or gui to allow easy identification of index of note.","lastModifiedDate":"2022-10-21"},{"lineNumber":353,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":354,"author":{"gitId":"Pinran-J"},"content":"* **Alternative 2:** Note is specified by Title.","lastModifiedDate":"2022-10-21"},{"lineNumber":355,"author":{"gitId":"Pinran-J"},"content":"    * Pros: Would be more precise (Title of notes are unique).","lastModifiedDate":"2022-10-21"},{"lineNumber":356,"author":{"gitId":"Pinran-J"},"content":"    * Cons: Long command would be needed to delete a note with a long Title.","lastModifiedDate":"2022-10-21"},{"lineNumber":357,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":358,"author":{"gitId":"czhongwei"},"content":"### Find Person","lastModifiedDate":"2022-10-22"},{"lineNumber":359,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":360,"author":{"gitId":"czhongwei"},"content":"### Implementation","lastModifiedDate":"2022-10-22"},{"lineNumber":361,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":362,"author":{"gitId":"czhongwei"},"content":"The Find Person feature is facilitated by \u0027FindCommand\u0027. It allows users to find all Persons with names that are matching or phone number starting with any of the keywords.","lastModifiedDate":"2022-10-22"},{"lineNumber":363,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":364,"author":{"gitId":"czhongwei"},"content":"Given below is an example usage scenario and how the find feature behaves at each step.","lastModifiedDate":"2022-10-22"},{"lineNumber":365,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":366,"author":{"gitId":"czhongwei"},"content":"Step 1. The user executes \u0027find David\u0027 command to find all Persons in the address book that includes the name `David`.","lastModifiedDate":"2022-10-22"},{"lineNumber":367,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":368,"author":{"gitId":"czhongwei"},"content":"Step 2. A `FindCommand` is constructed with a `NameContainsKeywordPredicate` which checks through the list of persons in the address book and only shows those with their first/last name matching `David`.","lastModifiedDate":"2022-10-22"},{"lineNumber":369,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":370,"author":{"gitId":"czhongwei"},"content":"Step 3. The `FindCommand` is executed and the `NameContainsKeywordsPredicate` is used to update the filtered person list.","lastModifiedDate":"2022-10-22"},{"lineNumber":371,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":372,"author":{"gitId":"czhongwei"},"content":"The following sequence diagram shows how the find command works:","lastModifiedDate":"2022-10-22"},{"lineNumber":373,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":374,"author":{"gitId":"czhongwei"},"content":"\u003cimg src\u003d\"images/FindCommandSequence.png\" width\u003d\"740\"/\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":375,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":376,"author":{"gitId":"czhongwei"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `FindCommandParser` and `FindCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-10-22"},{"lineNumber":377,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":378,"author":{"gitId":"czhongwei"},"content":"#### Design considerations:","lastModifiedDate":"2022-10-22"},{"lineNumber":379,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":380,"author":{"gitId":"czhongwei"},"content":"**Aspect: How find executes:**","lastModifiedDate":"2022-10-22"},{"lineNumber":381,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":382,"author":{"gitId":"czhongwei"},"content":"* **Alternative 1 (current choice):** Chooses person based on the whole first/last name matching the keyword.","lastModifiedDate":"2022-10-22"},{"lineNumber":383,"author":{"gitId":"czhongwei"},"content":"    * Pros: More specific Persons list after the find command.","lastModifiedDate":"2022-10-22"},{"lineNumber":384,"author":{"gitId":"czhongwei"},"content":"    * Cons: User needs to know the first/last name of the person they are trying to find.","lastModifiedDate":"2022-10-22"},{"lineNumber":385,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":386,"author":{"gitId":"czhongwei"},"content":"* **Alternative 2:** Chooses person if name contains the keyword.","lastModifiedDate":"2022-10-22"},{"lineNumber":387,"author":{"gitId":"czhongwei"},"content":"    * Pros: Easier to find person.","lastModifiedDate":"2022-10-22"},{"lineNumber":388,"author":{"gitId":"czhongwei"},"content":"    * Cons: Persons list may show other persons that are not desired by the user.","lastModifiedDate":"2022-10-22"},{"lineNumber":389,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":390,"author":{"gitId":"ryanczx"},"content":"### Find Person by Tag feature","lastModifiedDate":"2022-10-21"},{"lineNumber":391,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":392,"author":{"gitId":"ryanczx"},"content":"#### Implementation","lastModifiedDate":"2022-10-21"},{"lineNumber":393,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":394,"author":{"gitId":"ryanczx"},"content":"The find Person by Tag feature (called `findTag`) is facilitated by `FindTagCommand`. It allows users to find all Persons with the given Tags.","lastModifiedDate":"2022-10-21"},{"lineNumber":395,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":396,"author":{"gitId":"ryanczx"},"content":"Given below is an example usage scenario and how the findTag feature behaves at each step.","lastModifiedDate":"2022-10-21"},{"lineNumber":397,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":398,"author":{"gitId":"ryanczx"},"content":"Step 1. The user executes `findTag Finance` command to find all Persons in the address book with the tag `Finance`.","lastModifiedDate":"2022-10-21"},{"lineNumber":399,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":400,"author":{"gitId":"ryanczx"},"content":"Step 2. A `FindTagCommand` is constructed with a `TagsContainsKeywordsPredicate` which will check through the list of persons in the address book and only show those with the tag `Finance`.","lastModifiedDate":"2022-10-21"},{"lineNumber":401,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":402,"author":{"gitId":"ryanczx"},"content":"Step 3. The `FindTagCommand` is executed and the `TagsContainsKeywordsPredicate` is passed to model to update the Person List to only show Persons with the tag `Finance`.","lastModifiedDate":"2022-10-21"},{"lineNumber":403,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":404,"author":{"gitId":"ryanczx"},"content":"The following sequence diagram shows how the findTag command works:","lastModifiedDate":"2022-10-21"},{"lineNumber":405,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":406,"author":{"gitId":"ryanczx"},"content":"\u003cimg src\u003d\"images/FindTagSequenceDiagram.png\" width\u003d\"740\"/\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":407,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":408,"author":{"gitId":"ryanczx"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `FindTagCommandParser` and `FindTagCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-10-21"},{"lineNumber":409,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":410,"author":{"gitId":"ryanczx"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":411,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":412,"author":{"gitId":"ryanczx"},"content":"#### Design considerations:","lastModifiedDate":"2022-10-21"},{"lineNumber":413,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":414,"author":{"gitId":"ryanczx"},"content":"**Aspect: How findTag executes:**","lastModifiedDate":"2022-10-21"},{"lineNumber":415,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":416,"author":{"gitId":"ryanczx"},"content":"* **Alternative 1 (current choice):** Goes through all Persons to check for Tag.","lastModifiedDate":"2022-10-21"},{"lineNumber":417,"author":{"gitId":"ryanczx"},"content":"    * Pros: Easy to implement (Similar to current find command).","lastModifiedDate":"2022-10-21"},{"lineNumber":418,"author":{"gitId":"ryanczx"},"content":"    * Cons: May have performance issues in terms of having to do many more steps.","lastModifiedDate":"2022-10-21"},{"lineNumber":419,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":420,"author":{"gitId":"ryanczx"},"content":"* **Alternative 2:** Goto searched Tags and get the Persons that each Tag points to.","lastModifiedDate":"2022-10-21"},{"lineNumber":421,"author":{"gitId":"ryanczx"},"content":"    * Pros: Will use fewer steps (Go directly to the Tags rather than looking through all Persons).","lastModifiedDate":"2022-10-21"},{"lineNumber":422,"author":{"gitId":"ryanczx"},"content":"    * Cons: Implementation would be more complicated.","lastModifiedDate":"2022-10-21"},{"lineNumber":423,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":424,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":425,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"czhongwei"},"content":"Step 3. The user executes `add name/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2022-10-25"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"czhongwei"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add name/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2022-10-25"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":515,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":516,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":517,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":518,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"rui-han-crh"},"content":"* is acting as a secretary or a treasurer of a club with a lot of people","lastModifiedDate":"2022-10-01"},{"lineNumber":529,"author":{"gitId":"rui-han-crh"},"content":"* has a need for a convenient way to organise paperwork and general information about the club","lastModifiedDate":"2022-10-01"},{"lineNumber":530,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"rui-han-crh"},"content":"* has a requirement to keep notes and tabs on people and projects","lastModifiedDate":"2022-10-01"},{"lineNumber":532,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":535,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"rui-han-crh"},"content":"**Value proposition**: manage club members and track notes faster than a typical mouse/GUI driven app or by pen and paper","lastModifiedDate":"2022-10-01"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"| Priority | As a …​      | I want to …​                                             | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"Pinran-J"},"content":"| -------- |--------------|----------------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-10-02"},{"lineNumber":546,"author":{"gitId":"Pinran-J"},"content":"| `* * *`  | secretary    | add club members’ information into the address book      | keep track of their contact information.                               |","lastModifiedDate":"2022-10-01"},{"lineNumber":547,"author":{"gitId":"Pinran-J"},"content":"| `* * *`  | secretary    | edit a club member’s information                         | stay updated with them if their contact information changes.           |","lastModifiedDate":"2022-10-01"},{"lineNumber":548,"author":{"gitId":"Pinran-J"},"content":"| `* * *`  | secretary    | delete a club member’s information from the address book | stop keeping track of them when they leave the club.                   |","lastModifiedDate":"2022-10-01"},{"lineNumber":549,"author":{"gitId":"Pinran-J"},"content":"| `* * *`  | user         | search for a person by their name or contact number      | locate details of persons without having to go through the entire list |","lastModifiedDate":"2022-10-02"},{"lineNumber":550,"author":{"gitId":"Pinran-J"},"content":"| `* *`    | secretary    | search contacts according to a specific tag              | easily  contact people in a whole group                                |","lastModifiedDate":"2022-10-02"},{"lineNumber":551,"author":{"gitId":"Pinran-J"},"content":"| `*`      | user         | maintain a set of tasks to be done                       | keep track of things to be done.                                       |","lastModifiedDate":"2022-10-02"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"Neethesh26"},"content":"(For all use cases below, the **System** is the `SectresBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-10-02"},{"lineNumber":558,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":559,"author":{"gitId":"Neethesh26"},"content":"**Use case: Add a person**","lastModifiedDate":"2022-10-02"},{"lineNumber":560,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":561,"author":{"gitId":"Neethesh26"},"content":"**MSS**","lastModifiedDate":"2022-10-02"},{"lineNumber":562,"author":{"gitId":"Neethesh26"},"content":"1. User requests to add a person.","lastModifiedDate":"2022-10-02"},{"lineNumber":563,"author":{"gitId":"Neethesh26"},"content":"2. SectresBook adds the person to the list of persons.","lastModifiedDate":"2022-10-02"},{"lineNumber":564,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":565,"author":{"gitId":"Neethesh26"},"content":"   Use case ends.","lastModifiedDate":"2022-10-02"},{"lineNumber":566,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":567,"author":{"gitId":"Neethesh26"},"content":"**Extensions**","lastModifiedDate":"2022-10-02"},{"lineNumber":568,"author":{"gitId":"Neethesh26"},"content":"* 1a. The given person already exists.","lastModifiedDate":"2022-10-02"},{"lineNumber":569,"author":{"gitId":"Neethesh26"},"content":"    * 1a1. SectresBook shows an error message.","lastModifiedDate":"2022-10-02"},{"lineNumber":570,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":571,"author":{"gitId":"Neethesh26"},"content":"      Use case ends.","lastModifiedDate":"2022-10-02"},{"lineNumber":572,"author":{"gitId":"Neethesh26"},"content":"* 1b. Necessary fields are incomplete/empty.","lastModifiedDate":"2022-10-02"},{"lineNumber":573,"author":{"gitId":"Neethesh26"},"content":"    * 1b1. Sectresbook shows an error message.","lastModifiedDate":"2022-10-02"},{"lineNumber":574,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":575,"author":{"gitId":"Neethesh26"},"content":"      Use case ends.","lastModifiedDate":"2022-10-02"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"Neethesh26"},"content":"**Use case: Update a person**","lastModifiedDate":"2022-10-02"},{"lineNumber":578,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":579,"author":{"gitId":"Neethesh26"},"content":"**MSS**","lastModifiedDate":"2022-10-02"},{"lineNumber":580,"author":{"gitId":"Neethesh26"},"content":"1. User requests to list persons.","lastModifiedDate":"2022-10-02"},{"lineNumber":581,"author":{"gitId":"Neethesh26"},"content":"2. SectresBook shows a list of persons.","lastModifiedDate":"2022-10-02"},{"lineNumber":582,"author":{"gitId":"Neethesh26"},"content":"3. User requests to update a specific person in the list.","lastModifiedDate":"2022-10-02"},{"lineNumber":583,"author":{"gitId":"Neethesh26"},"content":"4. SectresBook updates information of the person.","lastModifiedDate":"2022-10-02"},{"lineNumber":584,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":585,"author":{"gitId":"Neethesh26"},"content":"   Use case ends.","lastModifiedDate":"2022-10-02"},{"lineNumber":586,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":587,"author":{"gitId":"Neethesh26"},"content":"**Extensions**","lastModifiedDate":"2022-10-02"},{"lineNumber":588,"author":{"gitId":"Neethesh26"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-10-02"},{"lineNumber":589,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":590,"author":{"gitId":"Neethesh26"},"content":"  Use case ends.","lastModifiedDate":"2022-10-02"},{"lineNumber":591,"author":{"gitId":"Neethesh26"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-10-02"},{"lineNumber":592,"author":{"gitId":"Neethesh26"},"content":"    * 3a1. SectresBook shows an error message.","lastModifiedDate":"2022-10-02"},{"lineNumber":593,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":594,"author":{"gitId":"Neethesh26"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-10-02"},{"lineNumber":595,"author":{"gitId":"Neethesh26"},"content":"* 3b. The command line arguments are invalid.","lastModifiedDate":"2022-10-02"},{"lineNumber":596,"author":{"gitId":"Neethesh26"},"content":"    * 3b1. SectresBook shows an error message.","lastModifiedDate":"2022-10-02"},{"lineNumber":597,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":598,"author":{"gitId":"Neethesh26"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-10-02"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":600,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"Neethesh26"},"content":"1.  User requests to list persons.","lastModifiedDate":"2022-10-02"},{"lineNumber":605,"author":{"gitId":"Neethesh26"},"content":"2.  SectresBook shows a list of persons.","lastModifiedDate":"2022-10-02"},{"lineNumber":606,"author":{"gitId":"Neethesh26"},"content":"3.  User requests to delete a specific person in the list.","lastModifiedDate":"2022-10-02"},{"lineNumber":607,"author":{"gitId":"Neethesh26"},"content":"4.  SectresBook deletes the person.","lastModifiedDate":"2022-10-02"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"Neethesh26"},"content":"    * 3a1. SectresBook shows an error message.","lastModifiedDate":"2022-10-02"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"Neethesh26"},"content":"**Use case: Find a person**","lastModifiedDate":"2022-10-02"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":625,"author":{"gitId":"Neethesh26"},"content":"**MSS**","lastModifiedDate":"2022-10-02"},{"lineNumber":626,"author":{"gitId":"Neethesh26"},"content":"1. User request to find using keyword.","lastModifiedDate":"2022-10-02"},{"lineNumber":627,"author":{"gitId":"Neethesh26"},"content":"2. SectressBook shows a list of persons matching keyword.","lastModifiedDate":"2022-10-02"},{"lineNumber":628,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":629,"author":{"gitId":"Neethesh26"},"content":"   Use case ends.","lastModifiedDate":"2022-10-02"},{"lineNumber":630,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":631,"author":{"gitId":"Neethesh26"},"content":"**Use case: Display list of persons**","lastModifiedDate":"2022-10-02"},{"lineNumber":632,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":633,"author":{"gitId":"Neethesh26"},"content":"**MSS**","lastModifiedDate":"2022-10-02"},{"lineNumber":634,"author":{"gitId":"Neethesh26"},"content":"1. User requests to list persons.","lastModifiedDate":"2022-10-02"},{"lineNumber":635,"author":{"gitId":"Neethesh26"},"content":"2. SectresBook displays the list of persons stored.","lastModifiedDate":"2022-10-02"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":637,"author":{"gitId":"Neethesh26"},"content":"   Use case ends.","lastModifiedDate":"2022-10-02"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":639,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"rui-han-crh"},"content":"4. Should not require internet connection, all operations are performed locally.","lastModifiedDate":"2022-10-01"},{"lineNumber":647,"author":{"gitId":"rui-han-crh"},"content":"5. Should not consume a lot of battery to keep it running in the background","lastModifiedDate":"2022-10-01"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"rui-han-crh"},"content":"* **Note**: A segment of text that describes a task to be done, coupled with tags that reference people in the SectresBook who are associated with the given task.","lastModifiedDate":"2022-10-01"},{"lineNumber":654,"author":{"gitId":"rui-han-crh"},"content":"* **Secretary**: A person acting as overseers for the administrative functions of a club.","lastModifiedDate":"2022-10-01"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"czhongwei":35,"ryanczx":35,"Neethesh26":92,"rui-han-crh":100,"Pinran-J":90,"-":355}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"czhongwei"},"content":"SectresBook helps **secretaries** to maintain all the information of the members of their club by **collating a list of identifiable information, past records, loan amounts and future tasks.** As a **treasurer**, use SectresBook **manage the finances of your club better** by keeping track of the funds loaned to each member. This all-in-one tool eliminates the trouble of having to search through multiple notebooks/apps to find information regarding a club member, saving you time and effort, so that you can focus on other tasks at hand using the notes feature!","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"czhongwei"},"content":"Focusing on speed and efficiency, interact with SectresBook using the **Command Line Interface (CLI)**, while still having the benefits of a visually appealing **Graphical User Interface (GUI)**.","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"czhongwei"},"content":"This User Guide is an in-depth guide to help you start managing your contacts, notes and finances. It includes the **installation, features and how to use them, and FAQ for troubleshooting**, ensuring a smooth pickup of the SectresBook.","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"1. Download the latest `SectresBook.jar` from [here](https://github.com/AY2223S1-CS2103T-W12-2/tp/releases).","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your SectresBook.","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"czhongwei"},"content":"   * **`add`**`name/John Doe phone/98765432 email/johnd@example.com home/John street, block 123, #01-01 bday/01/01/2000` : Adds a contact named `John Doe` to the SectresBook.","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"   * **`delete 3`** : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"   ","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"   * **`help`**: Open the UserGuide in your default web browser.","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"## Properties","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"### Person Properties","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"#### Name","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"  - The name of person to be recorded in the SectresBook.","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"  - Identified by prefix `name`.","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"  - This is a valid property to find a person by using the `find` command.","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"It is recommended to include the full name of the person to avoid ambiguities during operations.","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"#### Phone","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"  - The phone number of the person to be recorded in the SectresBook.","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"  - Identified by the prefix `phone`.","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"  - This is a valid property to find a person by using the `find` command.","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"  - A phone number should contain only numbers and be at least 3 digits long.","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"Ensure that no two persons have the same phone number!","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"#### Email","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"  - The email address of the person to be recorded in the SectresBook.","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"  - Identified by the prefix `email`.","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"  - Serves mainly as a point of information relating the person.","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"  - Emails should be of the format `local-part@domain` and adhere to the following constraints:","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"    1. The local-part should only contain alphanumeric characters and these special characters `_` and `.`. The local-part may not start or end with any special characters","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"    2. This is followed by a `@` and then a domain name. The domain name is made up of domain labels separated by periods. The domain name must:","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"       + end with a domain label at least 2 characters long","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"       + have each domain label start and end with alphanumeric characters","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"       + have each domain label consist of alphanumeric characters, separated only by hyphens, if any.","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"#### Address","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"  - The residing address of the person.","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"  - Identified by the prefix `home`.","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"  - Serves mainly as a point of information relating to the person.","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"rui-han-crh"},"content":"  - There is no constraint on how the home address of a person should be written, as long as it is sufficiently understandable.","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"rui-han-crh"},"content":"#### Loan","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"rui-han-crh"},"content":"  - The amount of money that is owed by a person, or is to be paid to that person.","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"rui-han-crh"},"content":"  - Identified by the prefix `loan`.","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"rui-han-crh"},"content":"  - A loan amount can be either negative, positive or zero.","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"rui-han-crh"},"content":"    + A positive value indicates an amount that the person has yet to pay to the organisation.","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"rui-han-crh"},"content":"    + A zero value indicates no outstanding loan.","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"rui-han-crh"},"content":"    + A negative value indicates an amount that should be paid back to the person.","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"rui-han-crh"},"content":"  - Loans can only take up numerical values.","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"rui-han-crh"},"content":"#### Loan History","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"rui-han-crh"},"content":"  - A loan history is a subset of the loans properties that describes the changes to the numeric values of the loans in detail.","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"rui-han-crh"},"content":"  - As this property is a descriptor of the prefix `loan`, it does not have its own prefix, but it can be visually seen from the inspection panel.","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"rui-han-crh"},"content":"  - Consists of the following:","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"rui-han-crh"},"content":"    - Current loan value","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"rui-han-crh"},"content":"    - Change in amount from last value","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"rui-han-crh"},"content":"    - Reason for change","lastModifiedDate":"2022-10-25"},{"lineNumber":102,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":103,"author":{"gitId":"rui-han-crh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"rui-han-crh"},"content":"Including a reason for every change to a person\u0027s loan value reduces the risk of accidentally adding an incorrect amount to someone. It keeps a detail tab of every increment and decrement in value.","lastModifiedDate":"2022-10-25"},{"lineNumber":105,"author":{"gitId":"rui-han-crh"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":106,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":107,"author":{"gitId":"rui-han-crh"},"content":"#### Birthday","lastModifiedDate":"2022-10-25"},{"lineNumber":108,"author":{"gitId":"rui-han-crh"},"content":"  - The birthday date of the person.","lastModifiedDate":"2022-10-25"},{"lineNumber":109,"author":{"gitId":"rui-han-crh"},"content":"  - Identified by the prefix `bday`.","lastModifiedDate":"2022-10-25"},{"lineNumber":110,"author":{"gitId":"rui-han-crh"},"content":"  - Serves as a point of information for a person.","lastModifiedDate":"2022-10-25"},{"lineNumber":111,"author":{"gitId":"rui-han-crh"},"content":"  - This must be a valid date form `DD/MM/YYYY`.","lastModifiedDate":"2022-10-25"},{"lineNumber":112,"author":{"gitId":"rui-han-crh"},"content":"       ","lastModifiedDate":"2022-10-25"},{"lineNumber":113,"author":{"gitId":"rui-han-crh"},"content":"#### Tags","lastModifiedDate":"2022-10-25"},{"lineNumber":114,"author":{"gitId":"rui-han-crh"},"content":"  - Persons can be linked to tag objects, which serve as markers that draw connections between different people as well as associated notes.","lastModifiedDate":"2022-10-25"},{"lineNumber":115,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":116,"author":{"gitId":"rui-han-crh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-10-25"},{"lineNumber":117,"author":{"gitId":"rui-han-crh"},"content":"Please refer to the `Tag Properties` section below for more information regarding tags.","lastModifiedDate":"2022-10-25"},{"lineNumber":118,"author":{"gitId":"rui-han-crh"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":119,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"rui-han-crh"},"content":"### Notes Properties","lastModifiedDate":"2022-10-25"},{"lineNumber":121,"author":{"gitId":"rui-han-crh"},"content":"#### Title","lastModifiedDate":"2022-10-25"},{"lineNumber":122,"author":{"gitId":"rui-han-crh"},"content":"  - The title serves as the main marker for notes and summarises the important details of this specific note.","lastModifiedDate":"2022-10-25"},{"lineNumber":123,"author":{"gitId":"rui-han-crh"},"content":"  - This property is identified by the prefix `title`.","lastModifiedDate":"2022-10-25"},{"lineNumber":124,"author":{"gitId":"rui-han-crh"},"content":"  - Notes can be filtered through with the `find` command using the title property.","lastModifiedDate":"2022-10-25"},{"lineNumber":125,"author":{"gitId":"rui-han-crh"},"content":"  - Titles must be within 100 characters and can contain any ASCII characters.","lastModifiedDate":"2022-10-25"},{"lineNumber":126,"author":{"gitId":"rui-han-crh"},"content":"  - This property cannot be left empty.","lastModifiedDate":"2022-10-25"},{"lineNumber":127,"author":{"gitId":"rui-han-crh"},"content":"  ","lastModifiedDate":"2022-10-25"},{"lineNumber":128,"author":{"gitId":"rui-han-crh"},"content":"#### Content","lastModifiedDate":"2022-10-25"},{"lineNumber":129,"author":{"gitId":"rui-han-crh"},"content":"  - The content serves as the description for notes.","lastModifiedDate":"2022-10-25"},{"lineNumber":130,"author":{"gitId":"rui-han-crh"},"content":"  - This property is identified by `content`.","lastModifiedDate":"2022-10-25"},{"lineNumber":131,"author":{"gitId":"rui-han-crh"},"content":"  - This property cannot be left empty.","lastModifiedDate":"2022-10-25"},{"lineNumber":132,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":133,"author":{"gitId":"rui-han-crh"},"content":"#### Tags","lastModifiedDate":"2022-10-25"},{"lineNumber":134,"author":{"gitId":"rui-han-crh"},"content":"- Notes can be linked to tag objects, which serve as markers that draw connections between different people as well as associated notes.","lastModifiedDate":"2022-10-25"},{"lineNumber":135,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":136,"author":{"gitId":"rui-han-crh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-10-25"},{"lineNumber":137,"author":{"gitId":"rui-han-crh"},"content":"Please refer to the `Tag Properties` section below for more information regarding tags.","lastModifiedDate":"2022-10-25"},{"lineNumber":138,"author":{"gitId":"rui-han-crh"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":139,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":140,"author":{"gitId":"ryanczx"},"content":"### Tag Properties","lastModifiedDate":"2022-10-25"},{"lineNumber":141,"author":{"gitId":"ryanczx"},"content":"- A tag that is used to group together specific People and Notes.","lastModifiedDate":"2022-10-25"},{"lineNumber":142,"author":{"gitId":"ryanczx"},"content":"- Identified by the prefix `tag`.","lastModifiedDate":"2022-10-25"},{"lineNumber":143,"author":{"gitId":"ryanczx"},"content":"- Person and Note can hold tags.","lastModifiedDate":"2022-10-25"},{"lineNumber":144,"author":{"gitId":"ryanczx"},"content":"- Searching for a tag brings up all the People and Notes that have the tag.","lastModifiedDate":"2022-10-25"},{"lineNumber":145,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"czhongwei"},"content":"  e.g. in `add name/NAME`, `NAME` is a parameter which can be used as `add name/John Doe`.","lastModifiedDate":"2022-10-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"czhongwei"},"content":"  e.g `name/NAME [tag/TAG]` can be used as `name/John Doe tag/friend` or as `name/John Doe`.","lastModifiedDate":"2022-10-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"rui-han-crh"},"content":"* `\u003cOR\u003e` signifies an exclusive-or parameter that is to be input.\u003cbr\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":159,"author":{"gitId":"rui-han-crh"},"content":"  e.g `INDEX \u003cOR\u003e NAME` allows either the parameter `INDEX` or the parameter `NAME`, but not both","lastModifiedDate":"2022-10-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"czhongwei"},"content":"  e.g. `[tag/TAG]…​` can be used as ` ` (i.e. 0 times), `tag/friend`, `tag/friend tag/family` etc.","lastModifiedDate":"2022-10-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"czhongwei"},"content":"  e.g. if the command specifies `name/NAME phone/PHONE_NUMBER`, `phone/PHONE_NUMBER name/NAME` is also acceptable.","lastModifiedDate":"2022-10-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":168,"author":{"gitId":"czhongwei"},"content":"  e.g. if you specify `phone/12341234 phone/56785678`, only `phone/56785678` will be taken.","lastModifiedDate":"2022-10-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"rui-han-crh"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-10-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"rui-han-crh"},"content":"Adds a person to the SectresBook.","lastModifiedDate":"2022-10-01"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"czhongwei"},"content":"Format: `add name/NAME phone/PHONE_NUMBER email/EMAIL home/ADDRESS bday/BIRTHDAY [tag/TAG]...​ [l/LOAN]`","lastModifiedDate":"2022-10-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"czhongwei"},"content":"* `add name/John Doe phone/98765432 email/johnd@example.com home/John street, block 123, #01-01 bday/01/04/2010 tag/Member`","lastModifiedDate":"2022-10-26"},{"lineNumber":195,"author":{"gitId":"czhongwei"},"content":"* `add name/Jane Doe phone/98876542 email/jane@example.com home/That Street, block 133, #11-10 bday/05/11/1986 tag/Member l/10`","lastModifiedDate":"2022-10-26"},{"lineNumber":196,"author":{"gitId":"czhongwei"},"content":"* `add name/Neethesh tag/VicePresident email/neethesh@example.com home/Happy Avenue phone/91234567 bday/24/05/1998`","lastModifiedDate":"2022-10-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"rui-han-crh"},"content":"Shows a list of all persons in the SectresBook.","lastModifiedDate":"2022-10-01"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"Pinran-J"},"content":"### Editing a club member : `edit`","lastModifiedDate":"2022-09-28"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"Pinran-J"},"content":"Edits an existing club member’s information in the SectresBook","lastModifiedDate":"2022-09-28"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"czhongwei"},"content":"Format: `edit INDEX \u003cOR\u003e NAME [name/NAME] [phone/PHONE] [email/EMAIL] [home/ADDRESS] [bday/BIRTHDAY] [tag/TAG]…​`","lastModifiedDate":"2022-10-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"Pinran-J"},"content":"Example of usage:","lastModifiedDate":"2022-09-28"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":212,"author":{"gitId":"czhongwei"},"content":"`edit 1 phone/99999999` can be used to easily update the first person\u0027s contact information.","lastModifiedDate":"2022-10-25"},{"lineNumber":213,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":214,"author":{"gitId":"czhongwei"},"content":"`edit John phone/91235555` can be used to update a person’s contact information if there exists only one person whose name contains John.\u003cbr\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":215,"author":{"gitId":"rui-han-crh"},"content":"  If no person is named `John`, no operations are performed. If more than one person has `John` in their name, then the operation is equivalent to `find John`.","lastModifiedDate":"2022-10-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"czhongwei"},"content":"Finds persons whose names match any of the given keywords, or phone numbers contain any of the given keywords(in digits).","lastModifiedDate":"2022-10-16"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"czhongwei"},"content":"* Phone numbers starting with any of the given keywords(in digits) will be returned.","lastModifiedDate":"2022-10-16"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"czhongwei"},"content":"* `find 86` returns `Theodore`","lastModifiedDate":"2022-10-16"},{"lineNumber":236,"author":{"gitId":"czhongwei"},"content":"  ![result for `find 86`](images/find86result.png)","lastModifiedDate":"2022-10-16"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"ryanczx"},"content":"### Locating persons by tag: `findTag`","lastModifiedDate":"2022-10-15"},{"lineNumber":239,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":240,"author":{"gitId":"ryanczx"},"content":"Finds People and Notes that have the given tag.","lastModifiedDate":"2022-10-25"},{"lineNumber":241,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":242,"author":{"gitId":"ryanczx"},"content":"Format: `findTag TAG [MORE_TAGS]`","lastModifiedDate":"2022-10-15"},{"lineNumber":243,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":244,"author":{"gitId":"ryanczx"},"content":"* The tag search is case-insensitive. e.g `finance` will match `Finance`","lastModifiedDate":"2022-09-30"},{"lineNumber":245,"author":{"gitId":"ryanczx"},"content":"* Only the tag is searched.","lastModifiedDate":"2022-09-30"},{"lineNumber":246,"author":{"gitId":"ryanczx"},"content":"* Only full words will be matched e.g. `Tech` will not match `Technology`","lastModifiedDate":"2022-09-30"},{"lineNumber":247,"author":{"gitId":"ryanczx"},"content":"* Persons and Notes matching at least one tag will be returned (i.e. `OR` search).","lastModifiedDate":"2022-10-25"},{"lineNumber":248,"author":{"gitId":"ryanczx"},"content":"  e.g. `Finance` will return ","lastModifiedDate":"2022-09-30"},{"lineNumber":249,"author":{"gitId":"ryanczx"},"content":"  * `John (tag: Finance)`,","lastModifiedDate":"2022-09-30"},{"lineNumber":250,"author":{"gitId":"ryanczx"},"content":"  * `Caroline (tag: Finance) (tag: Tech)`,","lastModifiedDate":"2022-09-30"},{"lineNumber":251,"author":{"gitId":"ryanczx"},"content":"  * `Bob (tag:Finance) (tag:HumanResources)`","lastModifiedDate":"2022-09-30"},{"lineNumber":252,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":253,"author":{"gitId":"ryanczx"},"content":"Examples:","lastModifiedDate":"2022-09-30"},{"lineNumber":254,"author":{"gitId":"ryanczx"},"content":"* `findTag Finance` returns `John`, `Caroline` and `Bob`","lastModifiedDate":"2022-10-15"},{"lineNumber":255,"author":{"gitId":"ryanczx"},"content":"  ![result for \u0027findTag Finance\u0027](images/findTagFinance.png)","lastModifiedDate":"2022-10-15"},{"lineNumber":256,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":257,"author":{"gitId":"Neethesh26"},"content":"### Editing loan of a person: `editLoan`","lastModifiedDate":"2022-10-25"},{"lineNumber":258,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":259,"author":{"gitId":"Neethesh26"},"content":"Edits an existing club member\u0027s loan amount in the SectresBook.","lastModifiedDate":"2022-10-25"},{"lineNumber":260,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":261,"author":{"gitId":"Neethesh26"},"content":"Format: `editLoan INDEX VALUE REASON`","lastModifiedDate":"2022-10-25"},{"lineNumber":262,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":263,"author":{"gitId":"Neethesh26"},"content":"* Edits the loan value of the existing person at the specified `INDEX`.","lastModifiedDate":"2022-10-25"},{"lineNumber":264,"author":{"gitId":"Neethesh26"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-10-25"},{"lineNumber":265,"author":{"gitId":"Neethesh26"},"content":"* The index **must be a positive integer** 1,2,3 …​","lastModifiedDate":"2022-10-25"},{"lineNumber":266,"author":{"gitId":"Neethesh26"},"content":"* The `VALUE` can be a positive or negative value with up to 2 decimal places.","lastModifiedDate":"2022-10-25"},{"lineNumber":267,"author":{"gitId":"Neethesh26"},"content":"* The loan value will be changed by the value given i.e current loan + VALUE.","lastModifiedDate":"2022-10-25"},{"lineNumber":268,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":269,"author":{"gitId":"Neethesh26"},"content":"Examples:","lastModifiedDate":"2022-10-25"},{"lineNumber":270,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":271,"author":{"gitId":"Neethesh26"},"content":"* `editLoan 2 30 bought logistics`","lastModifiedDate":"2022-10-25"},{"lineNumber":272,"author":{"gitId":"Neethesh26"},"content":"* `editLoan 3 -30 return money from logisitics`","lastModifiedDate":"2022-10-25"},{"lineNumber":273,"author":{"gitId":"Neethesh26"},"content":"* `list` followed by `editLoan 1 -20 return money` will edit the 1st person in the SectresBook,","lastModifiedDate":"2022-10-25"},{"lineNumber":274,"author":{"gitId":"Neethesh26"},"content":"reducing their loan by $20 and saving the `REASON` as `return money`.","lastModifiedDate":"2022-10-25"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":276,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"rui-han-crh"},"content":"Deletes the specified person from the SectresBook.","lastModifiedDate":"2022-10-01"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"rui-han-crh"},"content":"Otherwise, the specified person may be removed by name.","lastModifiedDate":"2022-09-17"},{"lineNumber":283,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":284,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"rui-han-crh"},"content":"Format: `delete \u003cname\u003e`","lastModifiedDate":"2022-09-17"},{"lineNumber":289,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":290,"author":{"gitId":"rui-han-crh"},"content":"* Delete the entry of the person who has the given name.","lastModifiedDate":"2022-09-17"},{"lineNumber":291,"author":{"gitId":"rui-han-crh"},"content":"* Will not perform any operation if the name of the person does not exist.","lastModifiedDate":"2022-09-17"},{"lineNumber":292,"author":{"gitId":"Neethesh26"},"content":"* The `\u003cname\u003e` portion has to be the persons First or Last name in complete.","lastModifiedDate":"2022-10-15"},{"lineNumber":293,"author":{"gitId":"Neethesh26"},"content":"* If the SectresBook contains persons with the same first or last name that has been input,","lastModifiedDate":"2022-10-15"},{"lineNumber":294,"author":{"gitId":"Neethesh26"},"content":"the delete command will not execute but will return a list of all people with the given name.","lastModifiedDate":"2022-10-15"},{"lineNumber":295,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":296,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"rui-han-crh"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the SectresBook.","lastModifiedDate":"2022-09-17"},{"lineNumber":298,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"rui-han-crh"},"content":"* `delete Betsy` deletes the entry belonging to Betsy in the SectresBook","lastModifiedDate":"2022-09-17"},{"lineNumber":300,"author":{"gitId":"rui-han-crh"},"content":"* `delete Lynette` does not perform any operation, as Lynette does not exist in the SectresBook.","lastModifiedDate":"2022-09-17"},{"lineNumber":301,"author":{"gitId":"rui-han-crh"},"content":"* `delete all` will clear the entire SectresBook. Please refer to the [`clear` command](#clearing-all-entries--clear).","lastModifiedDate":"2022-09-17"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"rui-han-crh"},"content":"Clears all entries of people from the SectresBook.","lastModifiedDate":"2022-10-01"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"Pinran-J"},"content":"### Adding Notes `addNote`","lastModifiedDate":"2022-10-15"},{"lineNumber":310,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":311,"author":{"gitId":"Pinran-J"},"content":"Adds a note to the SectresBook.","lastModifiedDate":"2022-10-15"},{"lineNumber":312,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":313,"author":{"gitId":"Pinran-J"},"content":"Format: `addNote title/TITLE content/CONTENT [tag/TAG]... `","lastModifiedDate":"2022-10-25"},{"lineNumber":314,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":315,"author":{"gitId":"Pinran-J"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-10-15"},{"lineNumber":316,"author":{"gitId":"Pinran-J"},"content":"TITLE must be unique and not longer than 100 characters. Tags are also optional.","lastModifiedDate":"2022-10-25"},{"lineNumber":317,"author":{"gitId":"Pinran-J"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":318,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":319,"author":{"gitId":"Pinran-J"},"content":"Examples:","lastModifiedDate":"2022-10-15"},{"lineNumber":320,"author":{"gitId":"Pinran-J"},"content":"* `add title/Club meeting soon! content/Remind club members to attend meeting.`","lastModifiedDate":"2022-10-25"},{"lineNumber":321,"author":{"gitId":"Pinran-J"},"content":"* `add title/T-Shirt payment due content/Collect money tag/Juniors`","lastModifiedDate":"2022-10-25"},{"lineNumber":322,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":323,"author":{"gitId":"Pinran-J"},"content":"### Listing Notes `listNote`","lastModifiedDate":"2022-10-15"},{"lineNumber":324,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":325,"author":{"gitId":"Pinran-J"},"content":"Shows a list of all notes in the SectresBook.","lastModifiedDate":"2022-10-15"},{"lineNumber":326,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":327,"author":{"gitId":"Pinran-J"},"content":"Format: `listNote`","lastModifiedDate":"2022-10-15"},{"lineNumber":328,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":329,"author":{"gitId":"Pinran-J"},"content":"### Editing Notes `editNote`","lastModifiedDate":"2022-10-25"},{"lineNumber":330,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":331,"author":{"gitId":"Pinran-J"},"content":"Edits an existing specified note in the SectresBook.","lastModifiedDate":"2022-10-25"},{"lineNumber":332,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":333,"author":{"gitId":"Pinran-J"},"content":"Format: `editNote INDEX [title/TITLE] [content/CONTENT] [tag/TAG]...`","lastModifiedDate":"2022-10-25"},{"lineNumber":334,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":335,"author":{"gitId":"Pinran-J"},"content":"Example of usage:","lastModifiedDate":"2022-10-25"},{"lineNumber":336,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":337,"author":{"gitId":"Pinran-J"},"content":"* `editNote 1 content/Second club meeting` can be used to easily update the first note\u0027s contents.","lastModifiedDate":"2022-10-25"},{"lineNumber":338,"author":{"gitId":"Pinran-J"},"content":"* `editeNote 2 title/2020 alumni meeting` can be used to easily update the second note\u0027s title.","lastModifiedDate":"2022-10-25"},{"lineNumber":339,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":340,"author":{"gitId":"Pinran-J"},"content":"### Locating a note by title: `findNote`","lastModifiedDate":"2022-10-25"},{"lineNumber":341,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":342,"author":{"gitId":"Pinran-J"},"content":"Finds the notes whose titles match any of the given keywords.","lastModifiedDate":"2022-10-25"},{"lineNumber":343,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":344,"author":{"gitId":"Pinran-J"},"content":"Format: `findNote KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-10-25"},{"lineNumber":345,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":346,"author":{"gitId":"Pinran-J"},"content":"* The search is case-insensitive. e.g. `meeting` will match `Meeting`","lastModifiedDate":"2022-10-25"},{"lineNumber":347,"author":{"gitId":"Pinran-J"},"content":"* The order of the keywords does not matter. e.g. `Meeting Club` will match `Club Meeting`","lastModifiedDate":"2022-10-25"},{"lineNumber":348,"author":{"gitId":"Pinran-J"},"content":"* Only the title is searched.","lastModifiedDate":"2022-10-25"},{"lineNumber":349,"author":{"gitId":"Pinran-J"},"content":"* Only the full words will be matched. e.g. `Meetings` will not match `Meeting`","lastModifiedDate":"2022-10-25"},{"lineNumber":350,"author":{"gitId":"Pinran-J"},"content":"* Keyword cannot contain special characters. However, numbers will be allowed.","lastModifiedDate":"2022-10-25"},{"lineNumber":351,"author":{"gitId":"Pinran-J"},"content":"  * e.g. The keywords `?!` and `t-shirt` will not be allowed.","lastModifiedDate":"2022-10-25"},{"lineNumber":352,"author":{"gitId":"Pinran-J"},"content":"  * e.g. `2` will match `shirt 2` but will not match `shirt2`","lastModifiedDate":"2022-10-25"},{"lineNumber":353,"author":{"gitId":"Pinran-J"},"content":"* Keywords will ignore special characters.","lastModifiedDate":"2022-10-25"},{"lineNumber":354,"author":{"gitId":"Pinran-J"},"content":"  * e.g. `Meetings` will match `Meetings!!!` and `Meetings 1`","lastModifiedDate":"2022-10-25"},{"lineNumber":355,"author":{"gitId":"Pinran-J"},"content":"  * e.g. `shirt` will match `t-shirt`","lastModifiedDate":"2022-10-25"},{"lineNumber":356,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":357,"author":{"gitId":"Pinran-J"},"content":"Examples:","lastModifiedDate":"2022-10-25"},{"lineNumber":358,"author":{"gitId":"Pinran-J"},"content":"* findNote `Meeting` returns `Club Meeting`, `Meeting!` and `Meeting 2`","lastModifiedDate":"2022-10-25"},{"lineNumber":359,"author":{"gitId":"Pinran-J"},"content":"* findNote `Soon` returns `Payment (soon)`","lastModifiedDate":"2022-10-25"},{"lineNumber":360,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":361,"author":{"gitId":"Pinran-J"},"content":"### Deleting Notes `deleteNote`","lastModifiedDate":"2022-10-15"},{"lineNumber":362,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":363,"author":{"gitId":"Pinran-J"},"content":"Deletes the specified note from the SectresBook.","lastModifiedDate":"2022-10-15"},{"lineNumber":364,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":365,"author":{"gitId":"Pinran-J"},"content":"Format: `deleteNote INDEX`","lastModifiedDate":"2022-10-15"},{"lineNumber":366,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":367,"author":{"gitId":"Pinran-J"},"content":"* Deletes the note at the specified `INDEX`.","lastModifiedDate":"2022-10-15"},{"lineNumber":368,"author":{"gitId":"Pinran-J"},"content":"* The index refers to the index number shown in the displayed note list.","lastModifiedDate":"2022-10-15"},{"lineNumber":369,"author":{"gitId":"Pinran-J"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-15"},{"lineNumber":370,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":371,"author":{"gitId":"Pinran-J"},"content":"Examples:","lastModifiedDate":"2022-10-15"},{"lineNumber":372,"author":{"gitId":"Pinran-J"},"content":"* `listNote` followed by `deleteNote 2` deletes the 2nd note in the SectresBook.","lastModifiedDate":"2022-10-15"},{"lineNumber":373,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":374,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":375,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"rui-han-crh"},"content":"SectresBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-10-01"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":387,"author":{"gitId":"rui-han-crh"},"content":"SectresBook data are saved as a JSON file `[JAR file location]/data/sectresbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-10-01"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":389,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":390,"author":{"gitId":"rui-han-crh"},"content":"If your changes to the data file makes its format invalid, SectresBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-10-01"},{"lineNumber":391,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":393,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"rui-han-crh"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous SectresBook home folder.","lastModifiedDate":"2022-10-01"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"rui-han-crh"},"content":"**Q**: Double-clicking the jar file does not open the jar file!\u003cbr\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":405,"author":{"gitId":"rui-han-crh"},"content":"**A**: Make sure that Java 11 is installed on your computer. You may also open the terminal or command prompt and type `java -jar SectresBook.jar`.","lastModifiedDate":"2022-10-15"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"Pinran-J"},"content":"**Q** Do I need to have Java installed to run SectresBook?\u003cbr\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":408,"author":{"gitId":"Pinran-J"},"content":"**A** Yes, SectresBook runs on Java and would require it to work. For more information on how to install Java 11, visit this [website](https://docs.oracle.com/en/java/javase/11/install/overview-jdk-installation.html).","lastModifiedDate":"2022-10-25"},{"lineNumber":409,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":410,"author":{"gitId":"Pinran-J"},"content":"**Q** What can I can do if the window size is too small?\u003cbr\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":411,"author":{"gitId":"Pinran-J"},"content":"**A** Drag the window of the application with your mouse to enlarge it, or simply click the top right maximise icon of the window.","lastModifiedDate":"2022-10-25"},{"lineNumber":412,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":413,"author":{"gitId":"Pinran-J"},"content":"**Q** Do I require an internet connection to use SectresBook?\u003cbr\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":414,"author":{"gitId":"ryanczx"},"content":"**A** No, SectresBook fully works without the need for internet connection.","lastModifiedDate":"2022-10-25"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":416,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"rui-han-crh"},"content":"## Glossary","lastModifiedDate":"2022-10-25"},{"lineNumber":419,"author":{"gitId":"rui-han-crh"},"content":"The definitions in this glossary are context-specific to this application.","lastModifiedDate":"2022-10-25"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"rui-han-crh"},"content":"Word | Definition","lastModifiedDate":"2022-10-25"},{"lineNumber":422,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"rui-han-crh"},"content":"**Command Line Interface (CLI)** | A text-based interface that recieves typed commands as input and returns textual feedback as output.","lastModifiedDate":"2022-10-25"},{"lineNumber":424,"author":{"gitId":"rui-han-crh"},"content":"**Graphical User Interface (GUI)** | An image-based interface that is more visually appealing than a command-line interface and encapsulates information through the use icons and images.","lastModifiedDate":"2022-10-25"},{"lineNumber":425,"author":{"gitId":"rui-han-crh"},"content":"**Loan** | An amount of money that is borrowed by or owed to a person. A positive value signifies an amount owed by the person and a negative value signifies an amount to be paid to that person.","lastModifiedDate":"2022-10-25"},{"lineNumber":426,"author":{"gitId":"rui-han-crh"},"content":"**Parameter** | A value passed as a section of a command, typically following a prefix.","lastModifiedDate":"2022-10-25"},{"lineNumber":427,"author":{"gitId":"rui-han-crh"},"content":"**Prefix** | A signposting word that indicates the kind of property (i.e. name, email, address, etc), which typically follows immediately after the prefix, that is to be passed as a parameter.","lastModifiedDate":"2022-10-25"},{"lineNumber":428,"author":{"gitId":"rui-han-crh"},"content":"**Property** | An identifiable feature a person or object has that sufficiently distinguishes it from other objects of the same kind.","lastModifiedDate":"2022-10-25"},{"lineNumber":429,"author":{"gitId":"rui-han-crh"},"content":"**Secretary** | A person that manages the tasks and events related to the operations of an organisation.","lastModifiedDate":"2022-10-25"},{"lineNumber":430,"author":{"gitId":"rui-han-crh"},"content":"**Tag** | A label that groups related people together, such that they can be referred to as a single encapsulated entity specified by the tag.","lastModifiedDate":"2022-10-25"},{"lineNumber":431,"author":{"gitId":"rui-han-crh"},"content":"**Treasurer** | A person that manages the finances and monetary transactions related to the operations of an organisation.","lastModifiedDate":"2022-10-25"},{"lineNumber":432,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":433,"author":{"gitId":"rui-han-crh"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-25"},{"lineNumber":434,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"Neethesh26"},"content":"### AddressBook Commands","lastModifiedDate":"2022-10-25"},{"lineNumber":437,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":438,"author":{"gitId":"Neethesh26"},"content":"Action | Format                                                                                                | Examples","lastModifiedDate":"2022-10-25"},{"lineNumber":439,"author":{"gitId":"czhongwei"},"content":"--------|-------------------------------------------------------------------------------------------------------|--------","lastModifiedDate":"2022-10-26"},{"lineNumber":440,"author":{"gitId":"czhongwei"},"content":"**Add** | `add name/NAME phone/PHONE_NUMBER email/EMAIL home/ADDRESS bday/BIRTHDAY [tag/TAG]…​`                 | `add name/James Ho phone/22224444 email/jamesho@example.com home/123, Clementi Rd, 1234665 bday/01/01/2000 tag/friend tag/colleague`","lastModifiedDate":"2022-10-26"},{"lineNumber":441,"author":{"gitId":"Neethesh26"},"content":"**Clear** | `clear`                                                                                               | `clear`","lastModifiedDate":"2022-10-25"},{"lineNumber":442,"author":{"gitId":"Neethesh26"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e`delete NAME`                                                                       | `delete 3` \u003cbr\u003e `delete Jane`","lastModifiedDate":"2022-10-25"},{"lineNumber":443,"author":{"gitId":"czhongwei"},"content":"**Edit** | `edit INDEX [name/NAME] [phone/PHONE_NUMBER] [email/EMAIL] [home/ADDRESS] [bday/BIRTHDAY][tag/TAG]…​` | `edit 2 name/James Lee email/jameslee@example.com`","lastModifiedDate":"2022-10-26"},{"lineNumber":444,"author":{"gitId":"Neethesh26"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e `find NUMBER`                                                     | `find James Jake` \u003cbr\u003e `find 8651`","lastModifiedDate":"2022-10-25"},{"lineNumber":445,"author":{"gitId":"Neethesh26"},"content":"**Find Tag** | `findTag TAG [MORE_TAGS]`                                                                             | `findTag Operations Outreach`","lastModifiedDate":"2022-10-25"},{"lineNumber":446,"author":{"gitId":"Neethesh26"},"content":"**Edit Loan** | `editLoan INDEX AMOUNT REASON`                                                                        | `editLoan 1 -20 Buy Logistics`","lastModifiedDate":"2022-10-25"},{"lineNumber":447,"author":{"gitId":"Neethesh26"},"content":"**List** | `list`                                                                                                | `list`","lastModifiedDate":"2022-10-25"},{"lineNumber":448,"author":{"gitId":"Neethesh26"},"content":"**Help** | `help`                                                                                                | `help`","lastModifiedDate":"2022-10-25"},{"lineNumber":449,"author":{"gitId":"Neethesh26"},"content":"**Exit** | `exit`                                                                                                | `exit`","lastModifiedDate":"2022-10-25"},{"lineNumber":450,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":451,"author":{"gitId":"Neethesh26"},"content":"### Note Commands","lastModifiedDate":"2022-10-25"},{"lineNumber":452,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":453,"author":{"gitId":"Neethesh26"},"content":"Action | Format | Examples","lastModifiedDate":"2022-10-25"},{"lineNumber":454,"author":{"gitId":"Neethesh26"},"content":"--------|---------------------------|-------------","lastModifiedDate":"2022-10-25"},{"lineNumber":455,"author":{"gitId":"Neethesh26"},"content":"**Add Note** | `addNote title/TITLE content/CONTENT [tag/TAG]...` | `addNote title/Create Excel Sheet content/Create sheet for blockchain department`","lastModifiedDate":"2022-10-25"},{"lineNumber":456,"author":{"gitId":"Neethesh26"},"content":"**Edit Note** | `editNote INDEX [title/TITLE] [content/CONTENT] [tag/TAG]...` | `editNote 1 title/Check meeting availability tag/president`","lastModifiedDate":"2022-10-25"},{"lineNumber":457,"author":{"gitId":"Neethesh26"},"content":"**Delete Note** | `deleteNote INDEX` | `deleteNote 1`","lastModifiedDate":"2022-10-25"},{"lineNumber":458,"author":{"gitId":"Neethesh26"},"content":"**List Notes** | `listNote` | `listNote`","lastModifiedDate":"2022-10-25"},{"lineNumber":459,"author":{"gitId":"Neethesh26"},"content":"**Find Note** | `findNote KEYWORD [MORE_KEYWORDS]` | `findNote meeting`","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"czhongwei":25,"ryanczx":25,"Neethesh26":42,"rui-han-crh":142,"Pinran-J":73,"-":152}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"ryanczx"},"content":"    content: \"SectresBook\";","lastModifiedDate":"2022-09-27"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"ryanczx":1,"-":294}},{"path":"docs/diagrams/AddNoteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"!include style.puml","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"participant \":AddNoteCommandParser\" as AddNoteCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"participant \":Title\" as Note_Title LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"participant \":Content\" as Content LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"participant \":Note\" as Note LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"participant \"a:AddNoteCommand\" as AddNoteCommand LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"[-\u003e LogicManager : execute(\"addNote n_t/Meeting \\nn_c/3rd October 9pm\")","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"activate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addNote n_t/Meeting \\nn_c/3rd October 9pm\")","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"create AddNoteCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"AddressBookParser -\u003e AddNoteCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"activate AddNoteCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"AddNoteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"deactivate AddNoteCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"AddressBookParser -\u003e AddNoteCommandParser : parse(\"n_t/Meeting \\nn_c/3rd October 9pm\")","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"activate AddNoteCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"create Note_Title","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"Pinran-J"},"content":"AddNoteCommandParser -\u003e Note_Title","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"activate Note_Title","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"Note_Title --\u003e AddNoteCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"deactivate Note_Title","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"create Content","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"AddNoteCommandParser -\u003e Content","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"Pinran-J"},"content":"activate Content","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"Pinran-J"},"content":"Content --\u003e AddNoteCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"Pinran-J"},"content":"deactivate Content","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"Pinran-J"},"content":"create Note","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"Pinran-J"},"content":"AddNoteCommandParser -\u003e Note","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"activate Note","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"Pinran-J"},"content":"Note --\u003e AddNoteCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"Pinran-J"},"content":"deactivate Note","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"Pinran-J"},"content":"create AddNoteCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"Pinran-J"},"content":"AddNoteCommandParser -\u003e AddNoteCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"Pinran-J"},"content":"activate AddNoteCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"Pinran-J"},"content":"AddNoteCommand --\u003e AddNoteCommandParser : a","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"Pinran-J"},"content":"deactivate AddNoteCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"Pinran-J"},"content":"AddNoteCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"Pinran-J"},"content":"deactivate AddNoteCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"Pinran-J"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"Pinran-J"},"content":"AddNoteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"Pinran-J"},"content":"destroy AddNoteCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"Pinran-J"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"Pinran-J"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"Pinran-J"},"content":"LogicManager -\u003e AddNoteCommand : execute()","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"Pinran-J"},"content":"activate AddNoteCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"Pinran-J"},"content":"AddNoteCommand -\u003e Model : addNote()","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"Pinran-J"},"content":"activate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"Pinran-J"},"content":"Model --\u003e AddNoteCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"Pinran-J"},"content":"deactivate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"Pinran-J"},"content":"create CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"Pinran-J"},"content":"AddNoteCommand -\u003e CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"Pinran-J"},"content":"activate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"Pinran-J"},"content":"CommandResult --\u003e AddNoteCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"Pinran-J"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"Pinran-J"},"content":"AddNoteCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"Pinran-J"},"content":"deactivate AddNoteCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"Pinran-J"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"Pinran-J"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"Pinran-J"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"Pinran-J":93}},{"path":"docs/diagrams/DeleteNoteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"!include style.puml","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"participant \":DeleteNoteCommandParser\" as DeleteNoteCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"participant \"d:DeleteNoteCommand\" as DeleteNoteCommand LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"[-\u003e LogicManager : execute(\"deleteNote 1\")","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"activate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"deleteNote 1\")","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"create DeleteNoteCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"AddressBookParser -\u003e DeleteNoteCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"activate DeleteNoteCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"DeleteNoteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"deactivate DeleteNoteCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"AddressBookParser -\u003e DeleteNoteCommandParser : parse(\"1\")","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"activate DeleteNoteCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"create DeleteNoteCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"DeleteNoteCommandParser -\u003e DeleteNoteCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"activate DeleteNoteCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"Pinran-J"},"content":"DeleteNoteCommand --\u003e DeleteNoteCommandParser : d","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"deactivate DeleteNoteCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"DeleteNoteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"deactivate DeleteNoteCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"DeleteNoteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"destroy DeleteNoteCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"Pinran-J"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"Pinran-J"},"content":"LogicManager -\u003e DeleteNoteCommand : execute()","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"Pinran-J"},"content":"activate DeleteNoteCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"DeleteNoteCommand -\u003e Model : getAddressBook()","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"Pinran-J"},"content":"activate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"Pinran-J"},"content":"Model --\u003e DeleteNoteCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"Pinran-J"},"content":"deactivate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"Pinran-J"},"content":"DeleteNoteCommand -\u003e Model : deleteNote(noteToDelete)","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"Pinran-J"},"content":"activate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"Pinran-J"},"content":"Model --\u003e DeleteNoteCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"Pinran-J"},"content":"deactivate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"Pinran-J"},"content":"create CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"Pinran-J"},"content":"DeleteNoteCommand -\u003e CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"Pinran-J"},"content":"activate CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"Pinran-J"},"content":"CommandResult --\u003e DeleteNoteCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"Pinran-J"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"Pinran-J"},"content":"DeleteNoteCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"Pinran-J"},"content":"deactivate DeleteNoteCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"Pinran-J"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"Pinran-J"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"Pinran-J"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"Pinran-J":77}},{"path":"docs/diagrams/DeleteSequenceWithNameDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Neethesh26"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"Neethesh26"},"content":"!include style.puml","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"Neethesh26"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"Neethesh26"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"Neethesh26"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"Neethesh26"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"Neethesh26"},"content":"participant \":FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"Neethesh26"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"Neethesh26"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"Neethesh26"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"Neethesh26"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"Neethesh26"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"Neethesh26"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"Neethesh26"},"content":"[-\u003e LogicManager : execute(\"delete David\")","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"Neethesh26"},"content":"activate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"Neethesh26"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete David\")","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"Neethesh26"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"Neethesh26"},"content":"create DeleteCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"Neethesh26"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"Neethesh26"},"content":"activate DeleteCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"Neethesh26"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"Neethesh26"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"Neethesh26"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"David\")","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"Neethesh26"},"content":"activate DeleteCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"Neethesh26"},"content":"create FindCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"Neethesh26"},"content":"DeleteCommandParser -\u003e FindCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"Neethesh26"},"content":"activate FindCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"Neethesh26"},"content":"FindCommand --\u003e DeleteCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"Neethesh26"},"content":"deactivate FindCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"Neethesh26"},"content":"create DeleteCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"Neethesh26"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"Neethesh26"},"content":"activate DeleteCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"Neethesh26"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"Neethesh26"},"content":"deactivate DeleteCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"Neethesh26"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"Neethesh26"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"Neethesh26"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"Neethesh26"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"Neethesh26"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"Neethesh26"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"Neethesh26"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"Neethesh26"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"Neethesh26"},"content":"activate DeleteCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"Neethesh26"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"Neethesh26"},"content":"activate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"Neethesh26"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"Neethesh26"},"content":"deactivate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"Neethesh26"},"content":"create CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"Neethesh26"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"Neethesh26"},"content":"activate CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"Neethesh26"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"Neethesh26"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"Neethesh26"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"Neethesh26"},"content":"deactivate DeleteCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"Neethesh26"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"Neethesh26"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"Neethesh26"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"Neethesh26":76}},{"path":"docs/diagrams/EditSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"!include style.puml","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"participant \"f:FindCommandParser\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"participant \"d:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"[-\u003e LogicManager : execute(\"edit Lynette\")","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"activate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"edit Lynette\")","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"create EditCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"AddressBookParser -\u003e EditCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"activate EditCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"EditCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"deactivate EditCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"AddressBookParser -\u003e EditCommandParser : parse(\"Lynette\")","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"activate EditCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"create FindCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"EditCommandParser -\u003e FindCommandParser : find(\"Lynette\")","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"activate FindCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"create FindCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"FindCommandParser -\u003e FindCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"activate FindCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"FindCommand --\u003e FindCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"deactivate FindCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"FindCommandParser -\u003e EditCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"deactivate FindCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"EditCommandParser -\u003e FindCommand : execute()","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"activate FindCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"FindCommand --\u003e EditCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"destroy FindCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"create EditCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"EditCommandParser -\u003e EditCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"activate EditCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"EditCommand --\u003e EditCommandParser : d","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"deactivate EditCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"EditCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"deactivate EditCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"EditCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"destroy EditCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"LogicManager -\u003e EditCommand : execute()","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"activate EditCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"EditCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"activate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"deactivate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"rui-han-crh"},"content":"create CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"EditCommand -\u003e CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"activate CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"CommandResult --\u003e EditCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"rui-han-crh"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"rui-han-crh"},"content":"EditCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"rui-han-crh"},"content":"deactivate EditCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"rui-han-crh"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"rui-han-crh"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"rui-han-crh"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"rui-han-crh":91}},{"path":"docs/diagrams/FindCommandSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"czhongwei"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"czhongwei"},"content":"!include style.puml","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"czhongwei"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"czhongwei"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"czhongwei"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"czhongwei"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"czhongwei"},"content":"participant \":FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"czhongwei"},"content":"participant \"predicate:NameContainsKeywordsPredicate\" as NameContainsKeywordsPredicate LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"czhongwei"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"czhongwei"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"czhongwei"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"czhongwei"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"czhongwei"},"content":"[-\u003e LogicManager : execute(find David)","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"czhongwei"},"content":"activate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"czhongwei"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(find)","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"czhongwei"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"czhongwei"},"content":"create FindCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"czhongwei"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"czhongwei"},"content":"activate FindCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"czhongwei"},"content":"create FindCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"czhongwei"},"content":"FindCommandParser -\u003e FindCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"czhongwei"},"content":"activate FindCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"czhongwei"},"content":"create NameContainsKeywordsPredicate","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"czhongwei"},"content":"FindCommand -\u003e NameContainsKeywordsPredicate","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"czhongwei"},"content":"activate NameContainsKeywordsPredicate","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"czhongwei"},"content":"NameContainsKeywordsPredicate --\u003e FindCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"czhongwei"},"content":"deactivate NameContainsKeywordsPredicate","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"czhongwei"},"content":"FindCommand --\u003e FindCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"czhongwei"},"content":"deactivate FindCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"czhongwei"},"content":"FindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"czhongwei"},"content":"deactivate FindCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"czhongwei"},"content":"FindCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"czhongwei"},"content":"destroy FindCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"czhongwei"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"czhongwei"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"czhongwei"},"content":"LogicManager -\u003e FindCommand :execute(model)","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"czhongwei"},"content":"activate FindCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"czhongwei"},"content":"FindCommand -\u003e Model :updateFilteredPersonList(predicate)","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"czhongwei"},"content":"activate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"czhongwei"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"czhongwei"},"content":"deactivate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"czhongwei"},"content":"FindCommand --\u003e LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"czhongwei"},"content":"deactivate FindCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"czhongwei"},"content":"FindCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"czhongwei"},"content":"destroy FindCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"czhongwei"},"content":"\u003c-- LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"czhongwei"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"czhongwei"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"czhongwei":65}},{"path":"docs/diagrams/FindTagSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ryanczx"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"ryanczx"},"content":"!include style.puml","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"ryanczx"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"ryanczx"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"ryanczx"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"ryanczx"},"content":"participant \":FindTagCommandParser\" as FindTagCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"ryanczx"},"content":"participant \":FindTagCommand\" as FindTagCommand LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"ryanczx"},"content":"participant \"predicate:TagsContainsKeywordsPredicate\" as TagsContainsKeywordsPredicate LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"ryanczx"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"ryanczx"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"ryanczx"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"ryanczx"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"ryanczx"},"content":"[-\u003e LogicManager : execute(findTag Finance)","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"ryanczx"},"content":"activate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"ryanczx"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(findTag)","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"ryanczx"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"ryanczx"},"content":"create FindTagCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"ryanczx"},"content":"AddressBookParser -\u003e FindTagCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"ryanczx"},"content":"activate FindTagCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"ryanczx"},"content":"create FindTagCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"ryanczx"},"content":"FindTagCommandParser -\u003e FindTagCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"ryanczx"},"content":"activate FindTagCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"ryanczx"},"content":"create TagsContainsKeywordsPredicate","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"ryanczx"},"content":"FindTagCommand -\u003e TagsContainsKeywordsPredicate","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"ryanczx"},"content":"activate TagsContainsKeywordsPredicate","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"ryanczx"},"content":"TagsContainsKeywordsPredicate --\u003e FindTagCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"ryanczx"},"content":"deactivate TagsContainsKeywordsPredicate","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"ryanczx"},"content":"FindTagCommand --\u003e FindTagCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"ryanczx"},"content":"deactivate FindTagCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"ryanczx"},"content":"FindTagCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"ryanczx"},"content":"deactivate FindTagCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"ryanczx"},"content":"FindTagCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"ryanczx"},"content":"destroy FindTagCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"ryanczx"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"ryanczx"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"ryanczx"},"content":"LogicManager -\u003e FindTagCommand :execute(model)","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"ryanczx"},"content":"activate FindTagCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"ryanczx"},"content":"FindTagCommand -\u003e Model :updateFilteredPersonList(predicate)","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"ryanczx"},"content":"activate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"ryanczx"},"content":"Model --\u003e FindTagCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"ryanczx"},"content":"deactivate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"ryanczx"},"content":"FindTagCommand --\u003e LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"ryanczx"},"content":"deactivate FindTagCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"ryanczx"},"content":"FindTagCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"ryanczx"},"content":"destroy FindTagCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"ryanczx"},"content":"\u003c-- LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"ryanczx"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"ryanczx"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"ryanczx":65}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"ryanczx"},"content":"Class UniqueTagMapping","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"Class NoteBook","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"Class Note","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"Class Content","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"Class Title","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"ryanczx"},"content":"AddressBook *---\u003e \"1\" UniquePersonList","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"ryanczx"},"content":"AddressBook *---\u003e \"1\" UniqueTagMapping","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"ryanczx"},"content":"AddressBook *---\u003e \"1\" NoteBook","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"ryanczx"},"content":"UniqueTagMapping ---\u003e \"~* all\" Tag","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"Pinran-J"},"content":"NoteBook --\u003e Note","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"Pinran-J"},"content":"Note *--\u003e Content","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"Pinran-J"},"content":"Note *--\u003e  Title","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"Pinran-J"},"content":"Note *--\u003e \"1\" Tag","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"ryanczx"},"content":"Person \"*\" \u003c--\u003e \"*\" Tag","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"Pinran-J"},"content":"NoteBook -[hidden]right-\u003e UniquePersonList","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"Pinran-J"},"content":"ModelManager --\u003e\"~* filtered\" Note","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ryanczx":6,"Pinran-J":10,"-":48}},{"path":"docs/diagrams/NoteClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"@startuml","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"!include style.puml","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"Note *--\u003e Title","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"Note *--\u003e Content","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"Note \"*\" \u003c--\u003e \"*\" Tag","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"Person \"1..*\" \u003c-up-\u003e \"*\" Tag","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"@enduml","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"rui-han-crh":12}},{"path":"docs/diagrams/PersonClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"@startuml","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"!include style.puml","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"Person \"1..*\" \u003c--\u003e \"*\" Tag","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"Person *--\u003e Name","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"Person *--\u003e Phone","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"Person *--\u003e Email","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"Person *--\u003e Address","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"Person *-right-\u003e Loan","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"Loan *--\u003e \"*\" LoanHistory","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"LoanHistory --\u003e LoanDifference","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"LoanHistory --\u003e LoanReason","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"@enduml","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"rui-han-crh":17}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"Class NoteListPanel","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"Class NoteCard","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"MainWindow *-down-\u003e \"1\" NoteListPanel","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"NoteListPanel -down-\u003e \"*\" NoteCard","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"NoteListPanel --|\u003e UiPart","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"PersonCard --up|\u003e UiPart","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"NoteCard --up|\u003e UiPart","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"NoteCard ..\u003e Model","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"rui-han-crh":8,"-":59}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ryanczx"},"content":"title: SectresBook","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ryanczx"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W12-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W12-2/tp/actions)","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"ryanczx"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W12-2/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S1-CS2103T-W12-2/tp)","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"ryanczx"},"content":"**SectresBook** is a desktop application for club secretaries to (i) manage club member information, (ii) keep track of their tasks.","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"ryanczx"},"content":"* If you are interested in using SectresBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"ryanczx"},"content":"* If you are interested about developing SectresBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ryanczx":7,"-":13}},{"path":"docs/team/czhongwei.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"czhongwei"},"content":"---","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"czhongwei"},"content":"layout: page","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"czhongwei"},"content":"title: Chee Zhong Wei\u0027s Project Portfolio Page","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"czhongwei"},"content":"---","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"czhongwei"},"content":"###Project: SectresBook","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"czhongwei"},"content":"Sectresbook helps secretaries to maintain all the information of the members of their club by collating a list","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"czhongwei"},"content":"of identifiable information, past records and future tasks.","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"czhongwei"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"czhongwei"},"content":"* **New Feature:** `To be added`","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"czhongwei"},"content":"    * What it does: TODO","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"czhongwei"},"content":"    * Justification: TODO","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"czhongwei"},"content":"    * Highlights: TODO","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"czhongwei"},"content":"    * Credits: TODO","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"czhongwei"},"content":"* **Code contributed:** [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dw12\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dczhongwei\u0026tabRepo\u003dAY2223S1-CS2103T-W12-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"czhongwei"},"content":"* **Project Management:**","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"czhongwei"},"content":"    * to be added soon","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"czhongwei"},"content":"* **Enhancements implemented:**","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"czhongwei"},"content":"    * to be added soon","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"czhongwei"},"content":"* **Contributions to the UG:**","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"czhongwei"},"content":"    * to be added soon","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"czhongwei"},"content":"* **Contributions to the DG:**","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"czhongwei"},"content":"    * to be added soon","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"czhongwei"},"content":"* **Community:**","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"czhongwei"},"content":"    * to be added soon","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"czhongwei":37}},{"path":"docs/team/neethesh26.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Neethesh26"},"content":"---","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"Neethesh26"},"content":"layout: page","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"Neethesh26"},"content":"title: T Neethesh\u0027s Project Portfolio Page","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"Neethesh26"},"content":"---","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"Neethesh26"},"content":"###Project: SectresBook","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"Neethesh26"},"content":"Sectresbook helps secretaries to maintain all the information of the members of their club by collating a list","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"Neethesh26"},"content":"of identifiable information, past records and future tasks.","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"Neethesh26"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"Neethesh26"},"content":"* **New Feature:** `To be added`","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"Neethesh26"},"content":"  * What it does: TODO","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"Neethesh26"},"content":"  * Justification: TODO","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"Neethesh26"},"content":"  * Highlights: TODO","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"Neethesh26"},"content":"  * Credits: TODO","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"Neethesh26"},"content":"* **Code contributed:** [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dw12\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dNeethesh26\u0026tabRepo\u003dAY2223S1-CS2103T-W12-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"Neethesh26"},"content":"* **Project Management:**","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"Neethesh26"},"content":"  * to be added soon","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"Neethesh26"},"content":"* **Enhancements implemented:**","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"Neethesh26"},"content":"  * to be added soon","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"Neethesh26"},"content":"* **Contributions to the UG:**","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"Neethesh26"},"content":"  * to be added soon","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"Neethesh26"},"content":"* **Contributions to the DG:**","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"Neethesh26"},"content":"  * to be added soon","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"Neethesh26"},"content":"* **Community:**","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"Neethesh26"},"content":"  * to be added soon","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"Neethesh26":37}},{"path":"docs/team/pinran-j.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"layout: page","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"title: Pinran\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"### Project: SectresBook","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"SectresBook helps secretaries to maintain all the information of the members of their club by collating a list of identifiable information, past records and future tasks.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"* **New Feature**: *To be added soon*","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dpinran-j\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"* **Project management**:","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"  * *To be added soon*","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"  * *To be added soon*","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"  * User Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"    * Added documentation for the features `edit` and overview [\\#22](https://github.com/AY2223S1-CS2103T-W12-2/tp/pull/22)","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"    * *To be added soon*","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"    * *To be added soon*","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"* **Community**:","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"  * *To be added soon*","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"* **Tools**:","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"  * *To be added soon*","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Pinran-J":34}},{"path":"docs/team/rui-han-crh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"---","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"layout: page","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"title: Chen Ruihan\u0027s Project Portfolio Page","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"---","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"### Project: SectresBook","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"SectresBook helps secretaries to maintain all the information of the members of their club by collating a list of identifiable information, past records and future tasks.","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"* **New Feature**: \\\u003cTo be added\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"  * What it does: TODO","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"  * Justification: TODO","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"  * Highlights: TODO","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"  * Credits: TODO","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dw12\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003drui-han-crh\u0026tabRepo\u003dAY2223S1-CS2103T-W12-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"* **Project management**:","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"  * Managing soon","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"  * to be added soon","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"* **Contributions to the UG**:","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"  * to be added soon","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"* **Contributions to the DG**:","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"  * to be added soon","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"  * to be added soon","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"  * to be added soon","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2022-10-01"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"  * to be added soon","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"rui-han-crh":39}},{"path":"docs/team/ryanczx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ryanczx"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"ryanczx"},"content":"layout: page","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"ryanczx"},"content":"title: Ryan Chua\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"ryanczx"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"ryanczx"},"content":"### Project: SectresBook","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"ryanczx"},"content":"SectresBook helps secretaries to maintain all the information of the members of their club by collating a list of identifiable information, past records and future tasks.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"ryanczx"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"ryanczx"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dw12\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dryanczx\u0026tabRepo\u003dAY2223S1-CS2103T-W12-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"ryanczx"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"ryanczx"},"content":"  * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"ryanczx"},"content":"* **Contributions to the UG**:","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"ryanczx"},"content":"  * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"ryanczx"},"content":"* **Contributions to the DG**:","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"ryanczx"},"content":"  * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"ryanczx"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"ryanczx"},"content":"  * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"ryanczx"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"ryanczx"},"content":"  * to be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"ryanczx"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"ryanczx"},"content":"  * to be added soon","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"ryanczx":30}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"ryanczx"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"rui-han-crh"},"content":"        primaryStage.setTitle(\"SectresBook\");","lastModifiedDate":"2022-09-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ryanczx":1,"rui-han-crh":1,"-":182}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"    public static final String MESSAGE_INVALID_NOTE_DISPLAYED_INDEX \u003d \"The note index provided is invalid\";","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"    public static final String MESSAGE_NOTES_LISTED_OVERVIEW \u003d \"%1$d notes listed!\";","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"czhongwei"},"content":"    public static final String MESSAGE_NUMBER_TOO_SHORT \u003d \"Number to check must be at least 2 digits\";","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"    public static final String MESSAGE_INVALID_KEYWORD \u003d \"Keyword is invalid,keyword cannot contain special characters\";","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"Neethesh26"},"content":"    public static final String MESSAGE_INVALID_AMBIGUOUS_NAME \u003d \"There is more than 1 person with %s in their name!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Neethesh26"},"content":"    public static final String MESSAGE_INVALID_NAME \u003d \"There is no one with the name %s in the list!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"czhongwei":1,"Neethesh26":2,"Pinran-J":3,"-":13}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"     *   Ignores case and special characters(!,.\"\"),but a full word match is required.","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"Pinran-J"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"Pinran-J"},"content":"     *       containsWordIgnoreCase(\"ABc! def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"Pinran-J"},"content":"     *       containsWordIgnoreCase(\"ABc2 def\", \"abc2\") \u003d\u003d true","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"Pinran-J"},"content":"     *       containsWordIgnoreCase(\"ABc2 def\", \"abc\") \u003d\u003d false","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"Pinran-J"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"Pinran-J"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"Pinran-J"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"Pinran-J"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"Pinran-J"},"content":"    public static boolean containsWordIgnoreCaseIgnoreSpecial(String sentence, String word) {","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(word);","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"Pinran-J"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"Pinran-J"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"Pinran-J"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"Pinran-J"},"content":"        String preppedSentence \u003d sentence.replaceAll(\"[^a-zA-Z0-9]\", \" \");","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"Pinran-J"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"Pinran-J"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"Pinran-J"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"czhongwei"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"Pinran-J"},"content":"     * Returns true if the {@code phone } contains the {@code numbers}.","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"Pinran-J"},"content":"     *   Full phone number match is not required.","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"czhongwei"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"czhongwei"},"content":"     *       containsNumbers(\"91839344\", \"91839344\") \u003d\u003d true","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"czhongwei"},"content":"     *       containsNumbers(\"3829\", \"82\") \u003d\u003d true","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"czhongwei"},"content":"     *       containsNumbers(\"123\", \"1\") \u003d\u003d false //only 1 digit in numbers","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"czhongwei"},"content":"     *       containsNumbers(\"123\", \"4\") \u003d\u003d false","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"czhongwei"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"Pinran-J"},"content":"     * @param phone cannot be null","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"czhongwei"},"content":"     * @param numbers cannot be null, cannot be empty, must be at least 2 digits long.","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"czhongwei"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"Pinran-J"},"content":"    public static boolean containsNumbers(String phone, String numbers) {","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(phone);","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"czhongwei"},"content":"        requireNonNull(numbers);","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"czhongwei"},"content":"        return phone.startsWith(numbers);","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"czhongwei"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"czhongwei":14,"Pinran-J":34,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"    /** Returns an unmodifiable view of the filtered list of notes */","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"    ObservableList\u003cNote\u003e getFilteredNoteList();","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Pinran-J":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText, model);","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"Pinran-J"},"content":"    public ObservableList\u003cNote\u003e getFilteredNoteList() {","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"Pinran-J"},"content":"        return model.getFilteredNoteList();","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"rui-han-crh":1,"Pinran-J":6,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOAN;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"            + \"[\" + PREFIX_LOAN + \"10]\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"            + PREFIX_LOAN + \"50\";","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"        // Add person reference to tags","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"ryanczx"},"content":"        toAdd.getTags().forEach(tag -\u003e tag.addPerson(toAdd));","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ryanczx":2,"rui-han-crh":5,"-":65}},{"path":"src/main/java/seedu/address/logic/commands/AddNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES_CONTENT;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"ryanczx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES_TAG;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES_TITLE;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":" * Adds a note to the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"public class AddNoteCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"    public static final String COMMAND_WORD \u003d \"addNote\";","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a note to the address book. \"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"            + PREFIX_NOTES_TITLE + \"TITLE \"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"            + PREFIX_NOTES_CONTENT + \"CONTENT \"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"ryanczx"},"content":"            + \"[\" + PREFIX_NOTES_TAG + \"TAG]... \"","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"            + PREFIX_NOTES_TITLE + \"Club meetup \"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"ryanczx"},"content":"            + PREFIX_NOTES_CONTENT + \"3rd October 9pm, everybody. \"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"ryanczx"},"content":"            + PREFIX_NOTES_TAG + \"friends\";","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New note added: %1$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"    public static final String MESSAGE_DUPLICATE_NOTE \u003d \"This note already exists in the address book\";","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"    private final Note toAdd;","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"     * Creates an AddNoteCommand to add the specified {@code Note}","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"    public AddNoteCommand(Note note) {","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(note);","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"        toAdd \u003d note;","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"Pinran-J"},"content":"        if (model.hasNote(toAdd)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"Pinran-J"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_NOTE);","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"Pinran-J"},"content":"        model.addNote(toAdd);","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"Pinran-J"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"Pinran-J"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"Pinran-J"},"content":"                || (other instanceof AddNoteCommand // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"Pinran-J"},"content":"                \u0026\u0026 toAdd.equals(((AddNoteCommand) other).toAdd));","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"ryanczx":4,"Pinran-J":57}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"Neethesh26"},"content":"    private Index targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"ryanczx"},"content":"        // Remove personToDelete from its tags, and remove unused tags from UniqueTagMapping","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"ryanczx"},"content":"        personToDelete.getTags().forEach(tag -\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"            tag.removePerson(personToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"ryanczx"},"content":"            if (tag.isPersonListEmpty() \u0026\u0026 !model.notebookContainsTag(tag)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"                model.removeTag(tag);","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"ryanczx"},"content":"        });","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ryanczx":7,"Neethesh26":2,"rui-han-crh":3,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/DeleteNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":" * Deletes a note identified using it\u0027s displayed index from the command listNote.","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"public class DeleteNoteCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"    public static final String COMMAND_WORD \u003d \"deleteNote\";","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"            + \": Deletes the note identified by the index number used in the displayed listNote command.\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"    public static final String MESSAGE_DELETE_NOTE_SUCCESS \u003d \"Deleted Note: %1$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"    public DeleteNoteCommand(Index targetIndex) {","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"        ObservableList\u003cNote\u003e notebook \u003d model.getAddressBook().getNoteBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d notebook.size()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"        Note noteToDelete \u003d notebook.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"        model.deleteNote(noteToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"ryanczx"},"content":"        // Remove unused tags from UniqueTagMapping","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"ryanczx"},"content":"        noteToDelete.getTags().forEach(tag -\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"ryanczx"},"content":"            if (tag.isPersonListEmpty() \u0026\u0026 !model.notebookContainsTag(tag)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"ryanczx"},"content":"                model.removeTag(tag);","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"ryanczx"},"content":"            }","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"ryanczx"},"content":"        });","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_NOTE_SUCCESS, noteToDelete));","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"Pinran-J"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"Pinran-J"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"Pinran-J"},"content":"                || (other instanceof DeleteNoteCommand // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"Pinran-J"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteNoteCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"ryanczx":8,"Pinran-J":54}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"czhongwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"czhongwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOAN;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"czhongwei"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"czhongwei"},"content":"import seedu.address.model.person.Loan;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"            + \"Parameters: INDEX (must be a positive integer) \u003cOR\u003e NAME (matches by full word)\"","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"czhongwei"},"content":"            + \"[\" + PREFIX_BIRTHDAY + \"BIRTHDAY] \"","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"            + \"[\" + PREFIX_LOAN + \"LOAN]\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"ryanczx"},"content":"        // Remove personToEdit from its tags, and remove unused tags from UniqueTagMapping","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"ryanczx"},"content":"        personToEdit.getTags().forEach(tag -\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"ryanczx"},"content":"            tag.removePerson(personToEdit);","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"ryanczx"},"content":"            if (tag.isPersonListEmpty() \u0026\u0026 !model.notebookContainsTag(tag)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"ryanczx"},"content":"                model.removeTag(tag);","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"ryanczx"},"content":"            }","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"ryanczx"},"content":"        });","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"ryanczx"},"content":"        // Add editedPerson to its tags","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"rui-han-crh"},"content":"        editedPerson.getTags().forEach(tag -\u003e tag.addPerson(editedPerson));","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":118,"author":{"gitId":"czhongwei"},"content":"        Birthday updatedBirthday \u003d editPersonDescriptor.getBirthday().orElse(personToEdit.getBirthday());","lastModifiedDate":"2022-10-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":120,"author":{"gitId":"rui-han-crh"},"content":"        Loan updatedLoan \u003d editPersonDescriptor.getLoan().orElse(personToEdit.getLoan());","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"czhongwei"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"czhongwei"},"content":"                updatedBirthday, updatedTags, updatedLoan);","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"czhongwei"},"content":"        private Birthday birthday;","lastModifiedDate":"2022-10-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"rui-han-crh"},"content":"        private Loan loan;","lastModifiedDate":"2022-10-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":168,"author":{"gitId":"czhongwei"},"content":"            setBirthday(toCopy.birthday);","lastModifiedDate":"2022-10-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"rui-han-crh"},"content":"            setLoan(toCopy.loan);","lastModifiedDate":"2022-10-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"czhongwei"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, birthday, tags, loan);","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"czhongwei"},"content":"        public void setBirthday(Birthday birthday) {","lastModifiedDate":"2022-10-25"},{"lineNumber":213,"author":{"gitId":"czhongwei"},"content":"            this.birthday \u003d birthday;","lastModifiedDate":"2022-10-25"},{"lineNumber":214,"author":{"gitId":"czhongwei"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":215,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":216,"author":{"gitId":"czhongwei"},"content":"        public Optional\u003cBirthday\u003e getBirthday() {","lastModifiedDate":"2022-10-25"},{"lineNumber":217,"author":{"gitId":"czhongwei"},"content":"            return Optional.ofNullable(birthday);","lastModifiedDate":"2022-10-25"},{"lineNumber":218,"author":{"gitId":"czhongwei"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":219,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":220,"author":{"gitId":"rui-han-crh"},"content":"        public void setLoan(Loan loan) {","lastModifiedDate":"2022-10-09"},{"lineNumber":221,"author":{"gitId":"rui-han-crh"},"content":"            this.loan \u003d loan;","lastModifiedDate":"2022-10-09"},{"lineNumber":222,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":223,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":224,"author":{"gitId":"rui-han-crh"},"content":"        public Optional\u003cLoan\u003e getLoan() {","lastModifiedDate":"2022-10-09"},{"lineNumber":225,"author":{"gitId":"rui-han-crh"},"content":"            return Optional.ofNullable(loan);","lastModifiedDate":"2022-10-09"},{"lineNumber":226,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":227,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":265,"author":{"gitId":"czhongwei"},"content":"                    \u0026\u0026 getBirthday().equals(e.getBirthday())","lastModifiedDate":"2022-10-25"},{"lineNumber":266,"author":{"gitId":"rui-han-crh"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2022-10-09"},{"lineNumber":267,"author":{"gitId":"rui-han-crh"},"content":"                    \u0026\u0026 getLoan().equals(e.getLoan());","lastModifiedDate":"2022-10-09"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"czhongwei":20,"ryanczx":11,"rui-han-crh":18,"-":221}},{"path":"src/main/java/seedu/address/logic/commands/EditNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES_CONTENT;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"ryanczx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES_TAG;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES_TITLE;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"ryanczx"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"ryanczx"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"import java.util.List;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"ryanczx"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.Content;","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.Title;","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":" * Edits the details of an existing note in the address book.","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"public class EditNoteCommand extends Command {","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"    public static final String COMMAND_WORD \u003d \"editNote\";","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the Note identified \"","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"            + \"by the index number used in the displayed note list. \"","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"            + \"Parameters: INDEX (must be a positive integer)\"","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"            + \"[\" + PREFIX_NOTES_TITLE + \"TITLE] \"","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"ryanczx"},"content":"            + \"[\" + PREFIX_NOTES_CONTENT + \"CONTENT] \"","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"ryanczx"},"content":"            + \"[\" + PREFIX_NOTES_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"            + PREFIX_NOTES_CONTENT + \"New Content\";","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"    public static final String MESSAGE_EDIT_NOTE_SUCCESS \u003d \"Edited Note: %1$s\";","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"    public static final String MESSAGE_DUPLICATE_NOTE \u003d \"This note already exists in the address book.\";","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"    private final Index index;","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"Pinran-J"},"content":"    private final EditNoteDescriptor editNoteDescriptor;","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"Pinran-J"},"content":"     * @param index of the note in the filtered note list to edit","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"     * @param editNoteDescriptor details to edit the note with","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"Pinran-J"},"content":"    public EditNoteCommand(Index index, EditNoteDescriptor editNoteDescriptor) {","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(editNoteDescriptor);","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"Pinran-J"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"Pinran-J"},"content":"        this.editNoteDescriptor \u003d new EditNoteDescriptor(editNoteDescriptor);","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"Pinran-J"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"Pinran-J"},"content":"        List\u003cNote\u003e lastShownList \u003d model.getFilteredNoteList();","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"Pinran-J"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"Pinran-J"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"Pinran-J"},"content":"        Note noteToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"Pinran-J"},"content":"        Note editedNote \u003d createEditedNote(noteToEdit, editNoteDescriptor);","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"Pinran-J"},"content":"        if (!noteToEdit.isSameNote(editedNote) \u0026\u0026 model.hasNote(editedNote)) {","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"Pinran-J"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_NOTE);","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"ryanczx"},"content":"        model.setNote(noteToEdit, editedNote);","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"ryanczx"},"content":"        // Remove unused tags from UniqueTagMapping","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"ryanczx"},"content":"        noteToEdit.getTags().forEach(tag -\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"ryanczx"},"content":"            if (tag.isPersonListEmpty() \u0026\u0026 !model.notebookContainsTag(tag)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"ryanczx"},"content":"                model.removeTag(tag);","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"ryanczx"},"content":"            }","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"ryanczx"},"content":"        });","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"Pinran-J"},"content":"        model.updateFilteredNoteList(Model.PREDICATE_SHOW_ALL_NOTES);","lastModifiedDate":"2022-10-22"},{"lineNumber":87,"author":{"gitId":"Pinran-J"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_NOTE_SUCCESS, editedNote));","lastModifiedDate":"2022-10-22"},{"lineNumber":88,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":89,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":90,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":91,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":92,"author":{"gitId":"Pinran-J"},"content":"     * Creates and returns a {@code Note} with the details of {@code noteToEdit}","lastModifiedDate":"2022-10-22"},{"lineNumber":93,"author":{"gitId":"Pinran-J"},"content":"     * edited with {@code editNoteDescriptor}.","lastModifiedDate":"2022-10-22"},{"lineNumber":94,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":95,"author":{"gitId":"Pinran-J"},"content":"    private static Note createEditedNote(Note noteToEdit, EditNoteDescriptor editNoteDescriptor) {","lastModifiedDate":"2022-10-22"},{"lineNumber":96,"author":{"gitId":"Pinran-J"},"content":"        assert noteToEdit !\u003d null;","lastModifiedDate":"2022-10-22"},{"lineNumber":97,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":98,"author":{"gitId":"Pinran-J"},"content":"        Title updatedTitle \u003d editNoteDescriptor.getTitle().orElse(noteToEdit.getTitle());","lastModifiedDate":"2022-10-22"},{"lineNumber":99,"author":{"gitId":"Pinran-J"},"content":"        Content updatedContent \u003d editNoteDescriptor.getContent().orElse(noteToEdit.getContent());","lastModifiedDate":"2022-10-22"},{"lineNumber":100,"author":{"gitId":"ryanczx"},"content":"        Set\u003cTag\u003e updatedTags \u003d editNoteDescriptor.getTags().orElse(noteToEdit.getTags());","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":102,"author":{"gitId":"ryanczx"},"content":"        return new Note(updatedTitle, updatedContent, updatedTags);","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":104,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":105,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":106,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":107,"author":{"gitId":"Pinran-J"},"content":"     * Stores the details to edit the note with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-22"},{"lineNumber":108,"author":{"gitId":"Pinran-J"},"content":"     * corresponding field value of the note.","lastModifiedDate":"2022-10-22"},{"lineNumber":109,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":110,"author":{"gitId":"Pinran-J"},"content":"    public static class EditNoteDescriptor {","lastModifiedDate":"2022-10-22"},{"lineNumber":111,"author":{"gitId":"Pinran-J"},"content":"        private Title title;","lastModifiedDate":"2022-10-22"},{"lineNumber":112,"author":{"gitId":"Pinran-J"},"content":"        private Content content;","lastModifiedDate":"2022-10-22"},{"lineNumber":113,"author":{"gitId":"ryanczx"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-24"},{"lineNumber":114,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":115,"author":{"gitId":"Pinran-J"},"content":"        public EditNoteDescriptor() {}","lastModifiedDate":"2022-10-22"},{"lineNumber":116,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":117,"author":{"gitId":"Pinran-J"},"content":"        /**","lastModifiedDate":"2022-10-22"},{"lineNumber":118,"author":{"gitId":"Pinran-J"},"content":"         * Copy constructor.","lastModifiedDate":"2022-10-22"},{"lineNumber":119,"author":{"gitId":"Pinran-J"},"content":"         * A defensive copy of {@code tags} is to be used internally.","lastModifiedDate":"2022-10-22"},{"lineNumber":120,"author":{"gitId":"Pinran-J"},"content":"         */","lastModifiedDate":"2022-10-22"},{"lineNumber":121,"author":{"gitId":"Pinran-J"},"content":"        public EditNoteDescriptor(EditNoteDescriptor toCopy) {","lastModifiedDate":"2022-10-22"},{"lineNumber":122,"author":{"gitId":"Pinran-J"},"content":"            setTitle(toCopy.title);","lastModifiedDate":"2022-10-22"},{"lineNumber":123,"author":{"gitId":"Pinran-J"},"content":"            setContent(toCopy.content);","lastModifiedDate":"2022-10-22"},{"lineNumber":124,"author":{"gitId":"ryanczx"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":125,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":126,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":127,"author":{"gitId":"Pinran-J"},"content":"        /**","lastModifiedDate":"2022-10-22"},{"lineNumber":128,"author":{"gitId":"Pinran-J"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-22"},{"lineNumber":129,"author":{"gitId":"Pinran-J"},"content":"         */","lastModifiedDate":"2022-10-22"},{"lineNumber":130,"author":{"gitId":"Pinran-J"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-22"},{"lineNumber":131,"author":{"gitId":"ryanczx"},"content":"            return CollectionUtil.isAnyNonNull(title, content, tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":132,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":133,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":134,"author":{"gitId":"Pinran-J"},"content":"        public void setTitle(Title title) {","lastModifiedDate":"2022-10-22"},{"lineNumber":135,"author":{"gitId":"Pinran-J"},"content":"            this.title \u003d title;","lastModifiedDate":"2022-10-22"},{"lineNumber":136,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":137,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":138,"author":{"gitId":"Pinran-J"},"content":"        public Optional\u003cTitle\u003e getTitle() {","lastModifiedDate":"2022-10-22"},{"lineNumber":139,"author":{"gitId":"Pinran-J"},"content":"            return Optional.ofNullable(title);","lastModifiedDate":"2022-10-22"},{"lineNumber":140,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":141,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":142,"author":{"gitId":"Pinran-J"},"content":"        public void setContent(Content content) {","lastModifiedDate":"2022-10-22"},{"lineNumber":143,"author":{"gitId":"Pinran-J"},"content":"            this.content \u003d content;","lastModifiedDate":"2022-10-22"},{"lineNumber":144,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":145,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":146,"author":{"gitId":"Pinran-J"},"content":"        public Optional\u003cContent\u003e getContent() {","lastModifiedDate":"2022-10-22"},{"lineNumber":147,"author":{"gitId":"Pinran-J"},"content":"            return Optional.ofNullable(content);","lastModifiedDate":"2022-10-22"},{"lineNumber":148,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":149,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":150,"author":{"gitId":"ryanczx"},"content":"        /**","lastModifiedDate":"2022-10-24"},{"lineNumber":151,"author":{"gitId":"ryanczx"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-10-24"},{"lineNumber":152,"author":{"gitId":"ryanczx"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-24"},{"lineNumber":153,"author":{"gitId":"ryanczx"},"content":"         */","lastModifiedDate":"2022-10-24"},{"lineNumber":154,"author":{"gitId":"ryanczx"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-24"},{"lineNumber":155,"author":{"gitId":"ryanczx"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-10-24"},{"lineNumber":156,"author":{"gitId":"ryanczx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":157,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":158,"author":{"gitId":"ryanczx"},"content":"        /**","lastModifiedDate":"2022-10-24"},{"lineNumber":159,"author":{"gitId":"ryanczx"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-24"},{"lineNumber":160,"author":{"gitId":"ryanczx"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-10-24"},{"lineNumber":161,"author":{"gitId":"ryanczx"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-10-24"},{"lineNumber":162,"author":{"gitId":"ryanczx"},"content":"         */","lastModifiedDate":"2022-10-24"},{"lineNumber":163,"author":{"gitId":"ryanczx"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-10-24"},{"lineNumber":164,"author":{"gitId":"ryanczx"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-10-24"},{"lineNumber":165,"author":{"gitId":"ryanczx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":166,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":167,"author":{"gitId":"Pinran-J"},"content":"        @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":168,"author":{"gitId":"Pinran-J"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-22"},{"lineNumber":169,"author":{"gitId":"Pinran-J"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-22"},{"lineNumber":170,"author":{"gitId":"Pinran-J"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-22"},{"lineNumber":171,"author":{"gitId":"Pinran-J"},"content":"                return true;","lastModifiedDate":"2022-10-22"},{"lineNumber":172,"author":{"gitId":"Pinran-J"},"content":"            }","lastModifiedDate":"2022-10-22"},{"lineNumber":173,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":174,"author":{"gitId":"Pinran-J"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-22"},{"lineNumber":175,"author":{"gitId":"Pinran-J"},"content":"            if (!(other instanceof EditNoteDescriptor)) {","lastModifiedDate":"2022-10-22"},{"lineNumber":176,"author":{"gitId":"Pinran-J"},"content":"                return false;","lastModifiedDate":"2022-10-22"},{"lineNumber":177,"author":{"gitId":"Pinran-J"},"content":"            }","lastModifiedDate":"2022-10-22"},{"lineNumber":178,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":179,"author":{"gitId":"Pinran-J"},"content":"            // state check","lastModifiedDate":"2022-10-22"},{"lineNumber":180,"author":{"gitId":"Pinran-J"},"content":"            EditNoteDescriptor e \u003d (EditNoteDescriptor) other;","lastModifiedDate":"2022-10-22"},{"lineNumber":181,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":182,"author":{"gitId":"Pinran-J"},"content":"            return getTitle().equals(e.getTitle())","lastModifiedDate":"2022-10-22"},{"lineNumber":183,"author":{"gitId":"ryanczx"},"content":"                    \u0026\u0026 getContent().equals(e.getContent())","lastModifiedDate":"2022-10-24"},{"lineNumber":184,"author":{"gitId":"ryanczx"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2022-10-24"},{"lineNumber":185,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":186,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":187,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":188,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":189,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"ryanczx":40,"Pinran-J":149}},{"path":"src/main/java/seedu/address/logic/commands/FindNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.TitleContainsKeywordsPredicate;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":" * Finds and lists all notes in address book whose title contains any of the argument keywords.","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":" * Keyword matching is case insensitive and ignores special characters in the title.","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":" * Keyword must not be only special characters. Numbers are allowed.","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"public class FindNoteCommand extends Command {","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"    public static final String COMMAND_WORD \u003d \"findNote\";","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all notes whose title contain any of \"","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"            + \"the specified keywords (case-insensitive, ignores special characters) \"","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"            + \"Example: \" + COMMAND_WORD + \" club meeting\";","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"    private final TitleContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"    public FindNoteCommand(TitleContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"        model.updateFilteredNoteList(predicate);","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"                String.format(Messages.MESSAGE_NOTES_LISTED_OVERVIEW, model.getFilteredNoteList().size()));","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"                || (other instanceof FindNoteCommand // instanceof handles nulls","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"                \u0026\u0026 predicate.equals(((FindNoteCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"Pinran-J":45}},{"path":"src/main/java/seedu/address/logic/commands/FindTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.note.NoteTagsContainsKeywordsPredicate;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.person.PersonTagsContainsKeywordsPredicate;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":" * Finds and lists all persons in address book who are tagged with any of the argument tags.","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":" * Tag matching is case insensitive.","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"public class FindTagCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"ryanczx"},"content":"    public static final String COMMAND_WORD \u003d \"findTag\";","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons who are tagged with any of\"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"            + \"the specified tags (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"            + \"Parameters: TAG [MORE_TAGS]...\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"            + \"Example: \" + COMMAND_WORD + \" Finance Tech\";","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"ryanczx"},"content":"    private final PersonTagsContainsKeywordsPredicate personPredicate;","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"ryanczx"},"content":"    private final NoteTagsContainsKeywordsPredicate notePredicate;","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"ryanczx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"ryanczx"},"content":"     * Constructs a FindTagCommand with the given {@code PersonTagsContainsKeywordsPredicate}","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"ryanczx"},"content":"     * and {@code NoteTagsContainsKeywordsPredicate}","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"ryanczx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"ryanczx"},"content":"    public FindTagCommand(PersonTagsContainsKeywordsPredicate personPredicate,","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"ryanczx"},"content":"                          NoteTagsContainsKeywordsPredicate notePredicate) {","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"ryanczx"},"content":"        this.personPredicate \u003d personPredicate;","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"ryanczx"},"content":"        this.notePredicate \u003d notePredicate;","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"ryanczx"},"content":"        model.updateFilteredPersonList(personPredicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"ryanczx"},"content":"        model.updateFilteredNoteList(notePredicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"                || (other instanceof FindTagCommand // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"ryanczx"},"content":"                \u0026\u0026 personPredicate.equals(((FindTagCommand) other).personPredicate)","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"ryanczx"},"content":"                \u0026\u0026 notePredicate.equals(((FindTagCommand) other).notePredicate)); // state check","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ryanczx":19,"rui-han-crh":35}},{"path":"src/main/java/seedu/address/logic/commands/ListNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_NOTES;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":" * Lists all the notes in address book to the user.","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"public class ListNoteCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"    public static final String COMMAND_WORD \u003d \"listNote\";","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all notes\";","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"        model.updateFilteredNoteList(PREDICATE_SHOW_ALL_NOTES);","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Pinran-J":23}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"czhongwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOAN;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"czhongwei"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.person.Loan;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"    private final Model model;","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"     * Constructs a {@code AddCommandParser}","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"     * @param model the model of the current state","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"    public AddCommandParser(Model model) {","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"        this.model \u003d model;","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"czhongwei"},"content":"                        PREFIX_ADDRESS, PREFIX_BIRTHDAY, PREFIX_TAG, PREFIX_LOAN);","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"czhongwei"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_BIRTHDAY, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"czhongwei"},"content":"        Birthday birthday \u003d ParserUtil.parseBirthday(argMultimap.getValue(PREFIX_BIRTHDAY).get());","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG), model);","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"        Loan loan \u003d ParserUtil.parseLoan(argMultimap.getValue(PREFIX_LOAN).orElse(\"0\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"czhongwei"},"content":"        Person person \u003d new Person(name, phone, email, address, birthday, tagList, loan);","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"czhongwei":6,"rui-han-crh":16,"-":56}},{"path":"src/main/java/seedu/address/logic/parser/AddNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES_CONTENT;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"ryanczx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES_TAG;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES_TITLE;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"ryanczx"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.Content;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.Title;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":" * Parses input arguments and creates a new AddNoteCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"public class AddNoteCommandParser {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"ryanczx"},"content":"    private final Model model;","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"ryanczx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"ryanczx"},"content":"     * Constructs a {@code AddCommandParser}","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"ryanczx"},"content":"     * @param model the model of the current state","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"ryanczx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"ryanczx"},"content":"    public AddNoteCommandParser(Model model) {","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"ryanczx"},"content":"        this.model \u003d model;","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Pinran-J"},"content":"     * Parses the given {@code String} of arguments in the context of the AddNoteCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"     * and returns an AddNoteCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"     * @param args Argument to be parsed.","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"     * @return AddNoteCommand to be executed.","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"    public AddNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"ryanczx"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NOTES_TITLE, PREFIX_NOTES_CONTENT, PREFIX_NOTES_TAG);","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"Pinran-J"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NOTES_TITLE, PREFIX_NOTES_CONTENT)","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"Pinran-J"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"Pinran-J"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"Pinran-J"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_NOTES_TITLE).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"Pinran-J"},"content":"        Content content \u003d ParserUtil.parseContent(argMultimap.getValue(PREFIX_NOTES_CONTENT).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"ryanczx"},"content":"        Set\u003cTag\u003e tagSet \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_NOTES_TAG), model);","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"ryanczx"},"content":"        Note note \u003d new Note(title, content, tagSet);","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"Pinran-J"},"content":"        return new AddNoteCommand(note);","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"Pinran-J"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"Pinran-J"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"ryanczx":18,"Pinran-J":47}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.logic.commands.EditNoteCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.logic.commands.FindNoteCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.logic.commands.FindTagCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.logic.commands.ListNoteCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"Neethesh26"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"Neethesh26"},"content":"    public Command parseCommand(String userInput, Model model) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"            return new AddCommandParser(model).parse(arguments);","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"            return new EditCommandParser(model).parse(arguments);","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"Neethesh26"},"content":"            return new DeleteCommandParser(model).parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"        case FindTagCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"            return new FindTagCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":81,"author":{"gitId":"Pinran-J"},"content":"        case AddNoteCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"ryanczx"},"content":"            return new AddNoteCommandParser(model).parse(arguments);","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"Pinran-J"},"content":"        case ListNoteCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"Pinran-J"},"content":"            return new ListNoteCommand();","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"Pinran-J"},"content":"        case DeleteNoteCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"Pinran-J"},"content":"            return new DeleteNoteCommandParser().parse(arguments);","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"Pinran-J"},"content":"        case FindNoteCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-22"},{"lineNumber":91,"author":{"gitId":"Pinran-J"},"content":"            return new FindNoteCommandParser().parse(arguments);","lastModifiedDate":"2022-10-22"},{"lineNumber":92,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":93,"author":{"gitId":"Pinran-J"},"content":"        case EditNoteCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-22"},{"lineNumber":94,"author":{"gitId":"ryanczx"},"content":"            return new EditNoteCommandParser(model).parse(arguments);","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ryanczx":2,"Neethesh26":3,"rui-han-crh":6,"Pinran-J":18,"-":72}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"czhongwei"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"name/\");","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"czhongwei"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"phone/\");","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"czhongwei"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"email/\");","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"czhongwei"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"home/\");","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"czhongwei"},"content":"    public static final Prefix PREFIX_BIRTHDAY \u003d new Prefix(\"bday/\");","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"czhongwei"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"tag/\");","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"czhongwei"},"content":"    public static final Prefix PREFIX_NOTES_TITLE \u003d new Prefix(\"title/\");","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"czhongwei"},"content":"    public static final Prefix PREFIX_NOTES_CONTENT \u003d new Prefix(\"content/\");","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"ryanczx"},"content":"    public static final Prefix PREFIX_NOTES_TAG \u003d new Prefix(\"n_tag/\");","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"    public static final Prefix PREFIX_LOAN \u003d new Prefix(\"l/\");","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"czhongwei":8,"ryanczx":1,"rui-han-crh":1,"-":9}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Neethesh26"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"Neethesh26"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"Neethesh26"},"content":"    private Model model;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"     * Constructs a {@code DeleteCommandParser}","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"     * @param model the model of the current state","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"Neethesh26"},"content":"    public DeleteCommandParser(Model model) {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Neethesh26"},"content":"        this.model \u003d model;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Neethesh26"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"Neethesh26"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"Neethesh26"},"content":"            new FindCommandParser().parse(args).execute(model);","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"Neethesh26"},"content":"            if (model.getFilteredPersonList().size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"Neethesh26"},"content":"                throw new ParseException(String.format(Messages.MESSAGE_INVALID_NAME, args), pe);","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"Neethesh26"},"content":"            } else if (model.getFilteredPersonList().size() \u003e 1) {","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"Neethesh26"},"content":"                throw new ParseException(String.format(Messages.MESSAGE_INVALID_AMBIGUOUS_NAME, args), pe);","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"Neethesh26"},"content":"            } else {","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"Neethesh26"},"content":"                return new DeleteCommand(Index.fromOneBased(1));","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"Neethesh26"},"content":"            }","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Neethesh26":16,"rui-han-crh":4,"-":25}},{"path":"src/main/java/seedu/address/logic/parser/DeleteNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":" * Parses input arguments and creates a new DeleteNoteCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"public class DeleteNoteCommandParser implements Parser\u003cDeleteNoteCommand\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteNoteCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"     * and returns a DeleteNoteCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"     * @param args Argument to be parsed.","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"     * @return DeleteNoteCommand to be executed.","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"    public DeleteNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"        try {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"            return new DeleteNoteCommand(index);","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteNoteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Pinran-J":35}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_AMBIGUOUS_NAME;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"czhongwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"czhongwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOAN;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"    private Model model;","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"     * Constructs a {@code EditCommandParser}","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"     * @param model the model of the current state","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"    public EditCommandParser(Model model) {","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"        this.model \u003d model;","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"czhongwei"},"content":"                        PREFIX_ADDRESS, PREFIX_BIRTHDAY, PREFIX_TAG, PREFIX_LOAN);","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"        String preamble \u003d argMultimap.getPreamble();","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"            index \u003d ParserUtil.parseIndex(preamble);","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"            filterPersonListByName(preamble, pe);","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"            index \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"czhongwei"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDAY).isPresent()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"czhongwei"},"content":"            editPersonDescriptor.setBirthday(ParserUtil.parseBirthday(argMultimap.getValue(PREFIX_BIRTHDAY).get()));","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"czhongwei"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"        if (argMultimap.getValue(PREFIX_LOAN).isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"            editPersonDescriptor.setLoan(ParserUtil.parseLoan(argMultimap.getValue(PREFIX_LOAN).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"rui-han-crh"},"content":"     * Filters the {@code ObservableList\u003cPerson\u003e} by person name","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"rui-han-crh"},"content":"     * @param preamble the name to search for, by complete word","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"rui-han-crh"},"content":"     * @param pe the ParseException to throw on failure","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"rui-han-crh"},"content":"     * @throws ParseException if there is nobody found by the find command, or there exist","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"rui-han-crh"},"content":"     *      an ambiguity","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"rui-han-crh"},"content":"    private void filterPersonListByName(String preamble, ParseException pe) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"rui-han-crh"},"content":"        try {","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"rui-han-crh"},"content":"            new FindCommandParser().parse(preamble).execute(model);","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"rui-han-crh"},"content":"        } catch (ParseException ignored) {","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"rui-han-crh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"rui-han-crh"},"content":"        ObservableList\u003cPerson\u003e filteredPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"rui-han-crh"},"content":"        if (filteredPersonList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"rui-han-crh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"rui-han-crh"},"content":"        } else if (filteredPersonList.size() \u003e 1) {","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"rui-han-crh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_AMBIGUOUS_NAME, preamble), pe);","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":126,"author":{"gitId":"rui-han-crh"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet, model));","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"czhongwei":6,"rui-han-crh":46,"-":77}},{"path":"src/main/java/seedu/address/logic/parser/EditNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES_CONTENT;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"ryanczx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES_TAG;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES_TITLE;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"ryanczx"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"ryanczx"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"ryanczx"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"ryanczx"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.logic.commands.EditNoteCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.logic.commands.EditNoteCommand.EditNoteDescriptor;","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":" * Parses input arguments and creates a new EditNoteCommand object","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"public class EditNoteCommandParser implements Parser\u003cEditNoteCommand\u003e {","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"ryanczx"},"content":"    private Model model;","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"ryanczx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"ryanczx"},"content":"     * Constructs a {@code EditCommandParser}","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"ryanczx"},"content":"     * @param model the model of the current state","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"ryanczx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"ryanczx"},"content":"    public EditNoteCommandParser(Model model) {","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"ryanczx"},"content":"        this.model \u003d model;","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"     * Parses the given {@code String} of arguments in the context of the EditNoteCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"     * and returns an EditNoteCommand object for execution.","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"    public EditNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"ryanczx"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NOTES_TITLE, PREFIX_NOTES_CONTENT, PREFIX_NOTES_TAG);","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"Pinran-J"},"content":"        Index index;","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"Pinran-J"},"content":"        try {","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"Pinran-J"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"Pinran-J"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditNoteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"Pinran-J"},"content":"        EditNoteDescriptor editNoteDescriptor \u003d new EditNoteDescriptor();","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"Pinran-J"},"content":"        if (argMultimap.getValue(PREFIX_NOTES_TITLE).isPresent()) {","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"Pinran-J"},"content":"            editNoteDescriptor.setTitle(ParserUtil.parseTitle(argMultimap.getValue(PREFIX_NOTES_TITLE).get()));","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"Pinran-J"},"content":"        if (argMultimap.getValue(PREFIX_NOTES_CONTENT).isPresent()) {","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"Pinran-J"},"content":"            editNoteDescriptor.setContent(ParserUtil.parseContent(argMultimap.getValue(PREFIX_NOTES_CONTENT).get()));","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"ryanczx"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_NOTES_TAG)).ifPresent(editNoteDescriptor::setTags);","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"Pinran-J"},"content":"        if (!editNoteDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"Pinran-J"},"content":"            throw new ParseException(EditNoteCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"Pinran-J"},"content":"        return new EditNoteCommand(index, editNoteDescriptor);","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"ryanczx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"ryanczx"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"ryanczx"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"ryanczx"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"ryanczx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"ryanczx"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"ryanczx"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"ryanczx"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"ryanczx"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"ryanczx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"ryanczx"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"ryanczx"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet, model));","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":85,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":86,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"ryanczx":34,"Pinran-J":52}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"czhongwei"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NUMBER_TOO_SHORT;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"czhongwei"},"content":"        for (String keyword : nameKeywords) {","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"czhongwei"},"content":"            if (keyword.matches(\"[0-9]+\") \u0026\u0026 keyword.length() \u003c 2) {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"czhongwei"},"content":"                throw new ParseException(","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"czhongwei"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_NUMBER_TOO_SHORT));","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"czhongwei"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"czhongwei"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"czhongwei":7,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/FindNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_KEYWORD;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.logic.commands.FindNoteCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.TitleContainsKeywordsPredicate;","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":" * Parses input arguments and creates a new FindNoteCommand object.","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"public class FindNoteCommandParser implements Parser\u003cFindNoteCommand\u003e {","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"     * Parses the given {@code String} of arguments in the context of the FindNoteCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"     * and returns a FindNoteCommand object for execution.","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"    public FindNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"        String[] titleKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"        Pattern p \u003d Pattern.compile(\"[^a-zA-Z0-9]\");","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"        for (String keyword : titleKeywords) {","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"Pinran-J"},"content":"            Matcher m \u003d p.matcher(keyword);","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"            if (m.find()) {","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"                throw new ParseException(","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INVALID_KEYWORD));","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"            }","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"Pinran-J"},"content":"        return new FindNoteCommand(new TitleContainsKeywordsPredicate(Arrays.asList(titleKeywords)));","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"Pinran-J":47}},{"path":"src/main/java/seedu/address/logic/parser/FindTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.logic.commands.FindTagCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.note.NoteTagsContainsKeywordsPredicate;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.person.PersonTagsContainsKeywordsPredicate;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":" * Parses input arguments and creates a new FindTagCommand object","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"public class FindTagCommandParser implements Parser\u003cFindTagCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"    public FindTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"        String[] tagKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"ryanczx"},"content":"        return new FindTagCommand(new PersonTagsContainsKeywordsPredicate(Arrays.asList(tagKeywords)),","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"ryanczx"},"content":"                new NoteTagsContainsKeywordsPredicate(Arrays.asList(tagKeywords)));","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ryanczx":4,"rui-han-crh":31}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.Content;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.Title;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"czhongwei"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.person.Loan;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"rui-han-crh"},"content":"    public static Tag parseTag(String tag, Model model) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"rui-han-crh"},"content":"        //INSERTION POINT: Retrieve tag from unique list","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"rui-han-crh"},"content":"        //return new Tag(trimmedTag);","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"rui-han-crh"},"content":"        return Optional.ofNullable(model.getTagMapping().get(trimmedTag)).orElseGet(","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"rui-han-crh"},"content":"                // CHECKSTYLE.OFF: SeparatorWrap","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"rui-han-crh"},"content":"                () -\u003e {","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"rui-han-crh"},"content":"                    Tag newTag \u003d new Tag(trimmedTag);","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"rui-han-crh"},"content":"                    model.addTag(newTag);","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"rui-han-crh"},"content":"                    return newTag;","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"rui-han-crh"},"content":"                });","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":131,"author":{"gitId":"rui-han-crh"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags, Model model) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":135,"author":{"gitId":"rui-han-crh"},"content":"            tagSet.add(parseTag(tagName, model));","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":139,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"Pinran-J"},"content":"     * Parses a {@code String title} into a {@code Title}.","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"Pinran-J"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"Pinran-J"},"content":"     * @throws ParseException if the given {@code title} is invalid.","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"Pinran-J"},"content":"    public static Title parseTitle(String title) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(title);","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"Pinran-J"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"Pinran-J"},"content":"        if (!Title.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"Pinran-J"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":152,"author":{"gitId":"Pinran-J"},"content":"        return new Title(trimmedTitle);","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":154,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":155,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"Pinran-J"},"content":"     * Parses a {@code String content} into an {@code Content}.","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"Pinran-J"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"Pinran-J"},"content":"     * @throws ParseException if the given {@code content} is invalid.","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"Pinran-J"},"content":"    public static Content parseContent(String content) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(content);","lastModifiedDate":"2022-10-09"},{"lineNumber":163,"author":{"gitId":"Pinran-J"},"content":"        String trimmedContent \u003d content.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":164,"author":{"gitId":"Pinran-J"},"content":"        if (!Content.isValidContent(trimmedContent)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":165,"author":{"gitId":"Pinran-J"},"content":"            throw new ParseException(Content.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":166,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":167,"author":{"gitId":"Pinran-J"},"content":"        return new Content(trimmedContent);","lastModifiedDate":"2022-10-09"},{"lineNumber":168,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":169,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"czhongwei"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":171,"author":{"gitId":"czhongwei"},"content":"     * Parses a {@code String birthday} into a {@code Birthday}.","lastModifiedDate":"2022-10-25"},{"lineNumber":172,"author":{"gitId":"czhongwei"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-25"},{"lineNumber":173,"author":{"gitId":"czhongwei"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":174,"author":{"gitId":"czhongwei"},"content":"     * @throws ParseException if the given {@code birthday} is invalid.","lastModifiedDate":"2022-10-25"},{"lineNumber":175,"author":{"gitId":"czhongwei"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":176,"author":{"gitId":"czhongwei"},"content":"    public static Birthday parseBirthday(String birthday) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":177,"author":{"gitId":"czhongwei"},"content":"        requireNonNull(birthday);","lastModifiedDate":"2022-10-25"},{"lineNumber":178,"author":{"gitId":"czhongwei"},"content":"        String trimmedBirthday \u003d birthday.trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":179,"author":{"gitId":"czhongwei"},"content":"        if (!Birthday.isValidBirthday(trimmedBirthday)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":180,"author":{"gitId":"czhongwei"},"content":"            throw new ParseException(Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-25"},{"lineNumber":181,"author":{"gitId":"czhongwei"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":182,"author":{"gitId":"czhongwei"},"content":"        return new Birthday(trimmedBirthday);","lastModifiedDate":"2022-10-25"},{"lineNumber":183,"author":{"gitId":"czhongwei"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":184,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":185,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":186,"author":{"gitId":"rui-han-crh"},"content":"     * Parses a {@code String loanAmout} into a {@code Loan}.","lastModifiedDate":"2022-10-09"},{"lineNumber":187,"author":{"gitId":"rui-han-crh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-09"},{"lineNumber":188,"author":{"gitId":"rui-han-crh"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":189,"author":{"gitId":"rui-han-crh"},"content":"     * @throws ParseException if the given {@code loanAmount} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":190,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":191,"author":{"gitId":"rui-han-crh"},"content":"    public static Loan parseLoan(String loanAmount) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":192,"author":{"gitId":"rui-han-crh"},"content":"        requireNonNull(loanAmount);","lastModifiedDate":"2022-10-09"},{"lineNumber":193,"author":{"gitId":"rui-han-crh"},"content":"        String trimmedLoan \u003d loanAmount.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":194,"author":{"gitId":"rui-han-crh"},"content":"        if (!Loan.isValidLoan(trimmedLoan)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":195,"author":{"gitId":"rui-han-crh"},"content":"            throw new ParseException(Loan.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":196,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":197,"author":{"gitId":"rui-han-crh"},"content":"        return new Loan(trimmedLoan);","lastModifiedDate":"2022-10-09"},{"lineNumber":198,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"czhongwei":16,"rui-han-crh":30,"Pinran-J":33,"-":120}},{"path":"src/main/java/seedu/address/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"czhongwei"},"content":" * E.g. \u0027tag/\u0027 in \u0027add James tag/friend\u0027.","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"czhongwei":1,"-":38}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.NoteBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.tag.UniqueTagMapping;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"    private final NoteBook notebook;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"    private final UniqueTagMapping tags;","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"        notebook \u003d new NoteBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"        tags \u003d new UniqueTagMapping();","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"Pinran-J"},"content":"    public void setNotes(List\u003cNote\u003e notes) {","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"Pinran-J"},"content":"        this.notebook.setNotes(notes);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"    public void setTags(Map\u003cString, Tag\u003e tags) {","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"        this.tags.setTags(tags);","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"Pinran-J"},"content":"        setNotes(newData.getNoteBook());","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"        setTags(newData.getTagMapping());","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"Pinran-J"},"content":"    //// note-level operations","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"Pinran-J"},"content":"     * Returns true if a note with the same identity as {@code note} exists in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"Pinran-J"},"content":"     * @param note The note the check with.","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"Pinran-J"},"content":"     * @return True if address book has the specified note.","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"Pinran-J"},"content":"    public boolean hasNote(Note note) {","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(note);","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"Pinran-J"},"content":"        return notebook.contains(note);","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"Pinran-J"},"content":"    public void addNote(Note n) {","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"Pinran-J"},"content":"        notebook.add(n);","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"Pinran-J"},"content":"    public void setNote(Note target, Note editedNote) {","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(editedNote);","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"Pinran-J"},"content":"        notebook.setNote(target, editedNote);","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"Pinran-J"},"content":"    public void removeNote(Note key) {","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"Pinran-J"},"content":"        notebook.remove(key);","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"ryanczx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":113,"author":{"gitId":"ryanczx"},"content":"     * Returns true if at least one Note in the NoteBook contains the given tag.","lastModifiedDate":"2022-10-24"},{"lineNumber":114,"author":{"gitId":"ryanczx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":115,"author":{"gitId":"ryanczx"},"content":"    public boolean notebookContainsTag(Tag tag) {","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"ryanczx"},"content":"        return notebook.containsTag(tag);","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"rui-han-crh"},"content":"    //// tag level operations","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"rui-han-crh"},"content":"    public void addTag(Tag tag) {","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"rui-han-crh"},"content":"        tags.add(tag);","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"rui-han-crh"},"content":"    public void removeTag(Tag tag) {","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"rui-han-crh"},"content":"        tags.remove(tag);","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":180,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":181,"author":{"gitId":"Pinran-J"},"content":"    public ObservableList\u003cNote\u003e getNoteBook() {","lastModifiedDate":"2022-10-09"},{"lineNumber":182,"author":{"gitId":"Pinran-J"},"content":"        return notebook.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-09"},{"lineNumber":183,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":184,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":185,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":186,"author":{"gitId":"rui-han-crh"},"content":"    public ObservableMap\u003cString, Tag\u003e getTagMapping() {","lastModifiedDate":"2022-10-14"},{"lineNumber":187,"author":{"gitId":"rui-han-crh"},"content":"        return tags.asUnmodifiableObservableMap();","lastModifiedDate":"2022-10-14"},{"lineNumber":188,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ryanczx":5,"rui-han-crh":31,"Pinran-J":41,"-":124}},{"path":"src/main/java/seedu/address/model/DeepCopyable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":" * Classes implementing {@code DeepCopyable} allows the object to recursively copy","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":" * fields of its superclass and its own fields.","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":" * Deep copying in this form is a form of prototyping and does not guarantee parent","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":" * classes are deep copyable, unlike cloning, although they are suggested to be as well.","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"public interface DeepCopyable {","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"    Object deepCopy();","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"rui-han-crh":11}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"    Predicate\u003cNote\u003e PREDICATE_SHOW_ALL_NOTES \u003d unused -\u003e true;","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"Pinran-J"},"content":"    boolean hasNote(Note note);","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"Pinran-J"},"content":"    void deleteNote(Note target);","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"Pinran-J"},"content":"    void addNote(Note target);","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"Pinran-J"},"content":"    void setNote(Note target, Note editedNote);","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"rui-han-crh"},"content":"     * Adds the given tag {@code tag}.","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"rui-han-crh"},"content":"    void addTag(Tag tag);","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"rui-han-crh"},"content":"     * Deletes the given tag.","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"rui-han-crh"},"content":"     * The person tag exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"rui-han-crh"},"content":"    void removeTag(Tag tag);","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"rui-han-crh"},"content":"     * Returns an unmodifiable view of the address book\u0027s unique tag list.","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"rui-han-crh"},"content":"    ObservableMap\u003cString, Tag\u003e getTagMapping();","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"ryanczx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"ryanczx"},"content":"     * Returns true if at least one Note in the NoteBook contains the given tag.","lastModifiedDate":"2022-10-24"},{"lineNumber":110,"author":{"gitId":"ryanczx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"ryanczx"},"content":"    boolean notebookContainsTag(Tag tag);","lastModifiedDate":"2022-10-24"},{"lineNumber":112,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"Pinran-J"},"content":"    /** Returns an unmodifiable view of the filtered note list */","lastModifiedDate":"2022-10-19"},{"lineNumber":117,"author":{"gitId":"Pinran-J"},"content":"    ObservableList\u003cNote\u003e getFilteredNoteList();","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":119,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"Pinran-J"},"content":"     * Updates the filter of the filtered note list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-19"},{"lineNumber":121,"author":{"gitId":"Pinran-J"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-19"},{"lineNumber":122,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":123,"author":{"gitId":"Pinran-J"},"content":"    void updateFilteredNoteList(Predicate\u003cNote\u003e predicate);","lastModifiedDate":"2022-10-19"},{"lineNumber":124,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ryanczx":5,"rui-han-crh":18,"Pinran-J":20,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"    private final FilteredList\u003cNote\u003e filteredNotes;","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"        filteredNotes \u003d new FilteredList\u003c\u003e(this.addressBook.getNoteBook());","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"Pinran-J"},"content":"    public boolean hasNote(Note note) {","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(note);","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"Pinran-J"},"content":"        return addressBook.hasNote(note);","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"Pinran-J"},"content":"    public void deleteNote(Note target) {","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"Pinran-J"},"content":"        addressBook.removeNote(target);","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"Pinran-J"},"content":"    public void addNote(Note note) {","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"Pinran-J"},"content":"        addressBook.addNote(note);","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":136,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"Pinran-J"},"content":"    public void setNote(Note target, Note editedNote) {","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"Pinran-J"},"content":"        requireAllNonNull(target, editedNote);","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"Pinran-J"},"content":"        addressBook.setNote(target, editedNote);","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"rui-han-crh"},"content":"    public void addTag(Tag tag) {","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"rui-han-crh"},"content":"        addressBook.addTag(tag);","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"rui-han-crh"},"content":"    public void removeTag(Tag tag) {","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"rui-han-crh"},"content":"        addressBook.removeTag(tag);","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"rui-han-crh"},"content":"    public ObservableMap\u003cString, Tag\u003e getTagMapping() {","lastModifiedDate":"2022-10-14"},{"lineNumber":155,"author":{"gitId":"rui-han-crh"},"content":"        return addressBook.getTagMapping();","lastModifiedDate":"2022-10-14"},{"lineNumber":156,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"ryanczx"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":159,"author":{"gitId":"ryanczx"},"content":"    public boolean notebookContainsTag(Tag tag) {","lastModifiedDate":"2022-10-24"},{"lineNumber":160,"author":{"gitId":"ryanczx"},"content":"        return addressBook.notebookContainsTag(tag);","lastModifiedDate":"2022-10-24"},{"lineNumber":161,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":162,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":180,"author":{"gitId":"Pinran-J"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Note List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":181,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":182,"author":{"gitId":"Pinran-J"},"content":"     * Returns an unmodifiable view of the list of {@code Note} backed by the internal list of","lastModifiedDate":"2022-10-19"},{"lineNumber":183,"author":{"gitId":"Pinran-J"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-10-19"},{"lineNumber":184,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":185,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":186,"author":{"gitId":"Pinran-J"},"content":"    public ObservableList\u003cNote\u003e getFilteredNoteList() {","lastModifiedDate":"2022-10-19"},{"lineNumber":187,"author":{"gitId":"Pinran-J"},"content":"        return filteredNotes;","lastModifiedDate":"2022-10-19"},{"lineNumber":188,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":189,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":190,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":191,"author":{"gitId":"Pinran-J"},"content":"    public void updateFilteredNoteList(Predicate\u003cNote\u003e predicate) {","lastModifiedDate":"2022-10-19"},{"lineNumber":192,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-19"},{"lineNumber":193,"author":{"gitId":"Pinran-J"},"content":"        filteredNotes.setPredicate(predicate);","lastModifiedDate":"2022-10-19"},{"lineNumber":194,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":195,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":196,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ryanczx":5,"rui-han-crh":17,"Pinran-J":44,"-":150}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"    ObservableList\u003cNote\u003e getNoteBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"     * Returns an unmodifiable view of the tags list.","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"     * This list will not contain any duplicate tags.","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"    ObservableMap\u003cString, Tag\u003e getTagMapping();","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rui-han-crh":7,"Pinran-J":2,"-":18}},{"path":"src/main/java/seedu/address/model/ShallowCopyable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":" * Classes implementing {@code ShallowCopyable} allows the object to copy only","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":" * first-level fields of its own class.","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":" * Shallow copying in this form is a form of prototyping and does not guarantee parent","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":" * classes are shallow copyable, unlike cloning, although they are suggested to be as well.","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":" * Shallow copy is used in place of clone if there are incompatibilities with the parent class","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":" * or the fields consist of recursive substructures that could cause concurrency issues in","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":" * multithreaded environments.","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"public interface ShallowCopyable {","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"    Object shallowCopy();","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"rui-han-crh":14}},{"path":"src/main/java/seedu/address/model/note/Content.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package seedu.address.model.note;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":" * Represents a Note\u0027s content in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidContent(String)}","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"public class Content {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"            \"Content should only contain alphanumeric characters, spaces, special characters, it should not be blank \"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"                    + \"and no maximum length\";","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{ASCII}][\\\\p{ASCII}]*\";","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"    public final String fullContent;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"     * Constructs a {@code Content}.","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"     * @param content A valid content.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"    public Content(String content) {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(content);","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"        checkArgument(isValidContent(content), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"        fullContent \u003d content;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"    public static boolean isValidContent(String test) {","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Pinran-J"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"        return this.fullContent;","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"                || (other instanceof Content // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Pinran-J"},"content":"                \u0026\u0026 fullContent.equals(((Content) other).fullContent)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"Pinran-J"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"Pinran-J"},"content":"        return fullContent.hashCode();","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Pinran-J":51}},{"path":"src/main/java/seedu/address/model/note/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package seedu.address.model.note;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"ryanczx"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"ryanczx"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ryanczx"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":" * Represents a note in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"public class Note {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"    //Identity field","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"    private final Title title;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"ryanczx"},"content":"    //Data fields","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"    private final Content content;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"ryanczx"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"     * Constructor for a Note object","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"     * @param title Title of the note.","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"     * @param content Contents of the note.","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"ryanczx"},"content":"     * @param tags Tags of the note.","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"ryanczx"},"content":"    public Note(Title title, Content content, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"ryanczx"},"content":"        requireAllNonNull(title, content, tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"        this.content \u003d content;","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"ryanczx"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"    public Title getTitle() {","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"        return this.title;","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"    public Content getContent() {","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Pinran-J"},"content":"        return this.content;","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"ryanczx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"ryanczx"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"ryanczx"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"ryanczx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"ryanczx"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"ryanczx"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"Pinran-J"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"Pinran-J"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"Pinran-J"},"content":"            return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"Pinran-J"},"content":"        if (!(other instanceof Note)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"Pinran-J"},"content":"            return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"Pinran-J"},"content":"        Note otherNote \u003d (Note) other;","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"Pinran-J"},"content":"        return otherNote.getTitle().equals(getTitle())","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"ryanczx"},"content":"                \u0026\u0026 otherNote.getContent().equals(getContent())","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"ryanczx"},"content":"                \u0026\u0026 otherNote.getTags().equals(getTags());","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"Pinran-J"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"Pinran-J"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"ryanczx"},"content":"        return Objects.hash(title, content, tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"Pinran-J"},"content":"     * Returns true if both notes have the same title.","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"Pinran-J"},"content":"     * This defines a weaker notion of equality between two notes.","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"Pinran-J"},"content":"     * @param otherNote The other note to be compared to.","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"Pinran-J"},"content":"     * @return True if both notes have same title.","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"Pinran-J"},"content":"    public boolean isSameNote(Note otherNote) {","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"Pinran-J"},"content":"        if (otherNote \u003d\u003d this) {","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"Pinran-J"},"content":"            return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"Pinran-J"},"content":"        return otherNote !\u003d null","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"Pinran-J"},"content":"                \u0026\u0026 otherNote.getTitle().equals(getTitle());","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"Pinran-J"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"Pinran-J"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"Pinran-J"},"content":"        builder.append(\"Title: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"Pinran-J"},"content":"                .append(getTitle())","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"Pinran-J"},"content":"                .append(\", Content: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"Pinran-J"},"content":"                .append(getContent());","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"ryanczx"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"ryanczx"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"ryanczx"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"ryanczx"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"ryanczx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"Pinran-J"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"ryanczx":27,"Pinran-J":85}},{"path":"src/main/java/seedu/address/model/note/NoteBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package seedu.address.model.note;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.exceptions.DuplicateNoteException;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.exceptions.NoteNotFoundException;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":" * A list of notes enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":" * A note is considered unique by comparing using {@code Note#isSameNote(Note)}. As such, adding and updating of","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":" * note uses Note#isSameNote(Note) for equality so as to ensure that the note being added or updated is","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":" * unique in terms of identity in the NoteBook.","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":" *","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":" *","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":" * @see Note#isSameNote(Note)","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":" *","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"public class NoteBook implements Iterable\u003cNote\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"    private final ObservableList\u003cNote\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"    private final ObservableList\u003cNote\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"     * Returns true if the list contains an equivalent note as the given argument.","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"    public boolean contains(Note toCheck) {","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"        return internalList.stream().anyMatch(toCheck::isSameNote);","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"ryanczx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"ryanczx"},"content":"     * Returns true if at least one Note in the NoteBook contains the given tag.","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"ryanczx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"ryanczx"},"content":"    public boolean containsTag(Tag tag) {","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"ryanczx"},"content":"        requireNonNull(tag);","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"ryanczx"},"content":"        return internalList.stream().anyMatch(note -\u003e note.getTags().contains(tag));","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"Pinran-J"},"content":"     * Adds a note to the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"Pinran-J"},"content":"     * The note must not already exist in the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"Pinran-J"},"content":"    public void add(Note toAdd) {","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"Pinran-J"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"Pinran-J"},"content":"            throw new DuplicateNoteException();","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"Pinran-J"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"Pinran-J"},"content":"    public void setNote(Note target, Note editedNote) {","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"Pinran-J"},"content":"        requireAllNonNull(target, editedNote);","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"Pinran-J"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"Pinran-J"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"Pinran-J"},"content":"            throw new NoteNotFoundException();","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"Pinran-J"},"content":"        if (!target.isSameNote(editedNote) \u0026\u0026 contains(editedNote)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"Pinran-J"},"content":"            throw new DuplicateNoteException();","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"Pinran-J"},"content":"        internalList.set(index, editedNote);","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"Pinran-J"},"content":"     * Removes the equivalent note from the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"Pinran-J"},"content":"     * The note must exist in the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"Pinran-J"},"content":"    public void remove(Note toRemove) {","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"Pinran-J"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"Pinran-J"},"content":"            throw new NoteNotFoundException();","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"Pinran-J"},"content":"    public ObservableList\u003cNote\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"Pinran-J"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"Pinran-J"},"content":"    public Iterator\u003cNote\u003e iterator() {","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"Pinran-J"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"Pinran-J"},"content":"    public void setNotes(NoteBook replacement) {","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"Pinran-J"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"Pinran-J"},"content":"    public void setNotes(List\u003cNote\u003e notes) {","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"Pinran-J"},"content":"        requireAllNonNull(notes);","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"Pinran-J"},"content":"        if (!notesAreUnique(notes)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"Pinran-J"},"content":"            throw new DuplicateNoteException();","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"Pinran-J"},"content":"        internalList.setAll(notes);","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"Pinran-J"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"Pinran-J"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"Pinran-J"},"content":"                || (other instanceof NoteBook // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"Pinran-J"},"content":"                \u0026\u0026 internalList.equals(((NoteBook) other).internalList));","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"Pinran-J"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"Pinran-J"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"Pinran-J"},"content":"    private boolean notesAreUnique(List\u003cNote\u003e notes) {","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"Pinran-J"},"content":"        for (int i \u003d 0; i \u003c notes.size() - 1; i++) {","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"Pinran-J"},"content":"            for (int j \u003d i + 1; j \u003c notes.size(); j++) {","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"Pinran-J"},"content":"                if (notes.get(i).isSameNote(notes.get(j))) {","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"Pinran-J"},"content":"                    return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"Pinran-J"},"content":"                }","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"Pinran-J"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"Pinran-J"},"content":"        return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"ryanczx":9,"Pinran-J":124}},{"path":"src/main/java/seedu/address/model/note/NoteTagsContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanczx"},"content":"package seedu.address.model.note;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"ryanczx"},"content":" * Tests that a {@code Note}\u0027s {@code Tags} matches any of the keywords given.","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"ryanczx"},"content":"public class NoteTagsContainsKeywordsPredicate implements Predicate\u003cNote\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"ryanczx"},"content":"    public NoteTagsContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"ryanczx"},"content":"    public boolean test(Note note) {","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"        boolean result \u003d false;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"ryanczx"},"content":"        Set\u003cTag\u003e tagSet \u003d note.getTags();","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"        for (Tag tag : tagSet) {","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"            result \u003d result || keywords.stream().anyMatch(","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"                    keyword -\u003e StringUtil.containsWordIgnoreCase(tag.tagName, keyword));","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"        return result;","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"ryanczx"},"content":"                || (other instanceof NoteTagsContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"ryanczx"},"content":"                \u0026\u0026 keywords.equals(((NoteTagsContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ryanczx":8,"rui-han-crh":32}},{"path":"src/main/java/seedu/address/model/note/Title.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package seedu.address.model.note;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":" * Represents a Note\u0027s title in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTitle(String)}","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"public class Title {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"            \"Title should only contain alphanumeric characters, spaces, special characters, it should not be blank \"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"                    + \"and maximum length 100\";","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{ASCII}][\\\\p{ASCII}]{0,100}\";","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"    //[A-Za-z0-9 _.,!\u0027/$ ][A-Za-z0-9 _.,!/$} ]*\";","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"    public final String fullTitle;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"     * Constructs a {@code Title}.","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"     * @param title A valid title.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"    public Title(String title) {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"        requireNonNull(title);","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"        checkArgument(isValidTitle(title), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"        fullTitle \u003d title;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"    public static boolean isValidTitle(String test) {","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Pinran-J"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"Pinran-J"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"Pinran-J"},"content":"        return this.fullTitle;","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Pinran-J"},"content":"                || (other instanceof Title // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"                \u0026\u0026 fullTitle.equals(((Title) other).fullTitle)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"Pinran-J"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"Pinran-J"},"content":"        return fullTitle.hashCode();","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Pinran-J":53}},{"path":"src/main/java/seedu/address/model/note/TitleContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package seedu.address.model.note;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"import java.util.List;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":" * Tests that a {@code Note}\u0027s {@code Title} matches any of the keywords given.","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"public class TitleContainsKeywordsPredicate implements Predicate\u003cNote\u003e {","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"    public TitleContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"Pinran-J"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":"    public boolean test(Note note) {","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"        return keywords.stream().anyMatch(","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"                keyword -\u003e StringUtil.containsWordIgnoreCaseIgnoreSpecial(note.getTitle().fullTitle, keyword));","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"Pinran-J"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"                || (other instanceof TitleContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"                \u0026\u0026 keywords.equals(((TitleContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"Pinran-J":31}},{"path":"src/main/java/seedu/address/model/note/exceptions/DuplicateNoteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package seedu.address.model.note.exceptions;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":" * Signals that the operation will result in duplicate Note (Notes are considered duplicates if they have the same","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":" * title).","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"public class DuplicateNoteException extends RuntimeException {","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"    public DuplicateNoteException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"        super(\"Operation would result in duplicate note\");","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Pinran-J":11}},{"path":"src/main/java/seedu/address/model/note/exceptions/NoteNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package seedu.address.model.note.exceptions;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"Pinran-J"},"content":" * Signals that the operation is unable to find the specified note.","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"Pinran-J"},"content":"public class NoteNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Pinran-J":8}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.DeepCopyable;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"public class Address implements DeepCopyable {","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"    public Address deepCopy() {","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"        return new Address(value);","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rui-han-crh":7,"-":56}},{"path":"src/main/java/seedu/address/model/person/Birthday.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"czhongwei"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"czhongwei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"czhongwei"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"czhongwei"},"content":"import seedu.address.model.DeepCopyable;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"czhongwei"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"czhongwei"},"content":" * Represents a Person\u0027s birthday in the address book.","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"czhongwei"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBirthday(String)}","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"czhongwei"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"czhongwei"},"content":"public class Birthday implements DeepCopyable {","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"czhongwei"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Birthdays should only contain numbers and forward slashes\";","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"czhongwei"},"content":"    public static final String DATE_REGEX \u003d \"(^(((0[1-9]|1[0-9]|2[0-8])[\\\\/](0[1-9]|1[012]))|((29|30|31)[\\\\/]\"","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"czhongwei"},"content":"        + \"(0[13578]|1[02]))|((29|30)[\\\\/](0[4,6,9]|11)))[\\\\/](19|[2-9][0-9])\\\\d\\\\d$)|(^29[\\\\/]02[\\\\/]\"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"czhongwei"},"content":"        + \"(19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)$)\";","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"czhongwei"},"content":"    public final String value;","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"czhongwei"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"czhongwei"},"content":"     * Constructs a {@code Birthday}.","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"czhongwei"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"czhongwei"},"content":"     * @param birthday A valid birthday.","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"czhongwei"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"czhongwei"},"content":"    public Birthday(String birthday) {","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"czhongwei"},"content":"        requireNonNull(birthday);","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"czhongwei"},"content":"        checkArgument(isValidBirthday(birthday), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"czhongwei"},"content":"        value \u003d birthday;","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"czhongwei"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"czhongwei"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"czhongwei"},"content":"     * Returns true if a given string is a valid Birthday.","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"czhongwei"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"czhongwei"},"content":"    public static boolean isValidBirthday(String test) {","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"czhongwei"},"content":"        return test.matches(DATE_REGEX);","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"czhongwei"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"czhongwei"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"czhongwei"},"content":"    public String toString() {","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"czhongwei"},"content":"        return value;","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"czhongwei"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"czhongwei"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"czhongwei"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"czhongwei"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"czhongwei"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"czhongwei"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"czhongwei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"czhongwei"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"czhongwei"},"content":"                || (other instanceof Birthday // instanceof handles nulls","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"czhongwei"},"content":"                \u0026\u0026 value.equals(((Birthday) other).value)); // state check","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"czhongwei"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"czhongwei"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"czhongwei"},"content":"    public Birthday deepCopy() {","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"czhongwei"},"content":"        return new Birthday(value);","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"czhongwei"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"czhongwei"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"czhongwei":62}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.DeepCopyable;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"public class Email implements DeepCopyable {","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"    public Email deepCopy() {","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"        return new Email(value);","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rui-han-crh":8,"-":70}},{"path":"src/main/java/seedu/address/model/person/Loan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.DeepCopyable;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":" * Loan represents a class encapsulating an amount of money presently owed to the club.","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"public class Loan implements DeepCopyable {","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"            \"Loan amount should only contain numerics, possibly with decimal point, optional negative\";","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"    public static final String VALIDATION_REGEX \u003d \"^-?[$]?[0-9]\\\\d*(\\\\.\\\\d+)?[$]?$\";","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"    private double amountOwed \u003d 0;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"     * Constructs a {@code Loan}.","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"     * @param amountString A valid amount, possibly in decimals","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"    public Loan(String amountString) {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"        requireNonNull(amountString);","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"        checkArgument(isValidLoan(amountString), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"        amountString \u003d amountString.replace(\"$\", \"\");","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"        amountOwed \u003d Double.parseDouble(amountString);","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"    public static boolean isValidLoan(String test) {","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"     * Increases the current loan by byAmount. If byAmount is negative, then the","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"     * resulting amountOwed will be negative.","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"     * @param byAmount the amount to increase by","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"    public void increaseLoan(double byAmount) {","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"        amountOwed +\u003d byAmount;","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"     * Completely clears the loan amount and sets it to zero.","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"    public void clearLoan() {","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"        amountOwed \u003d 0;","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"    public double getAmount() {","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"        return amountOwed;","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"        if (amountOwed \u003c 0) {","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"            return String.format(\"-$%.2f\", -amountOwed);","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"            return String.format(\"$%.2f\", amountOwed);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"     * Returns true if both loans have the same identity and data fields.","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"     * This defines the notion of equality between two persons.","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"            return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"        if (!(other instanceof Loan)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"            return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"        if (((Loan) other).amountOwed \u003d\u003d amountOwed) {","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"rui-han-crh"},"content":"            return ((Loan) other).amountOwed \u003d\u003d amountOwed;","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"            System.out.printf(\"%f not equals to %f%n\", ((Loan) other).amountOwed, amountOwed);","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"            return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"rui-han-crh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"rui-han-crh"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"rui-han-crh"},"content":"        return Double.hashCode(amountOwed);","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"rui-han-crh"},"content":"    public Loan deepCopy() {","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"rui-han-crh"},"content":"        return new Loan(String.valueOf(amountOwed));","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"rui-han-crh":96}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.DeepCopyable;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"public class Name implements DeepCopyable {","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"    public Name deepCopy() {","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"        return new Name(fullName);","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rui-han-crh":8,"-":58}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"czhongwei"},"content":"                .anyMatch(keyword -\u003e (StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword)","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"czhongwei"},"content":"                        || StringUtil.containsNumbers(person.getPhone().toString(), keyword)));","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"Neethesh26"},"content":"    public String getFirst() {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Neethesh26"},"content":"        return keywords.get(0);","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"czhongwei":2,"Neethesh26":2,"-":32}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"public class Person implements seedu.address.model.DeepCopyable {","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"czhongwei"},"content":"    private final Birthday birthday;","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"    private final Loan loan;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"czhongwei"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Birthday birthday, Set\u003cTag\u003e tags, Loan loan) {","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"czhongwei"},"content":"        requireAllNonNull(name, phone, email, address, tags, loan, birthday);","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"czhongwei"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"        this.loan \u003d loan;","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"czhongwei"},"content":"    public Birthday getBirthday() {","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"czhongwei"},"content":"        return birthday;","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"czhongwei"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"    public Loan getLoan() {","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"        return loan;","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"czhongwei"},"content":"                \u0026\u0026 otherPerson.getBirthday().equals(getBirthday())","lastModifiedDate":"2022-10-25"},{"lineNumber":108,"author":{"gitId":"rui-han-crh"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"rui-han-crh"},"content":"                \u0026\u0026 otherPerson.getLoan().equals(getLoan());","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"czhongwei"},"content":"        return Objects.hash(name, phone, email, address, birthday, tags, loan);","lastModifiedDate":"2022-10-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":127,"author":{"gitId":"rui-han-crh"},"content":"                .append(getAddress())","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"czhongwei"},"content":"                .append(\"; Birthday: \")","lastModifiedDate":"2022-10-25"},{"lineNumber":129,"author":{"gitId":"czhongwei"},"content":"                .append((getBirthday()))","lastModifiedDate":"2022-10-25"},{"lineNumber":130,"author":{"gitId":"rui-han-crh"},"content":"                .append(\"; Owed amount: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"rui-han-crh"},"content":"                .append(getLoan());","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"rui-han-crh"},"content":"     * Creates a new copy of this person object","lastModifiedDate":"2022-10-15"},{"lineNumber":143,"author":{"gitId":"rui-han-crh"},"content":"     * All fields are deep copied apart from Tag due to cyclical dependency.","lastModifiedDate":"2022-10-15"},{"lineNumber":144,"author":{"gitId":"rui-han-crh"},"content":"     * Tag clones contain shallow copies pointing to the Persons that the original","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"rui-han-crh"},"content":"     * tag contained.","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"rui-han-crh"},"content":"     * @return a new deeper-than-shallow copy of the Person\u0027s object","lastModifiedDate":"2022-10-15"},{"lineNumber":147,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":148,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":149,"author":{"gitId":"rui-han-crh"},"content":"    public Person deepCopy() {","lastModifiedDate":"2022-10-15"},{"lineNumber":150,"author":{"gitId":"rui-han-crh"},"content":"        Person clonedPerson \u003d new Person(","lastModifiedDate":"2022-10-15"},{"lineNumber":151,"author":{"gitId":"rui-han-crh"},"content":"                getName().deepCopy(),","lastModifiedDate":"2022-10-15"},{"lineNumber":152,"author":{"gitId":"rui-han-crh"},"content":"                getPhone().deepCopy(),","lastModifiedDate":"2022-10-15"},{"lineNumber":153,"author":{"gitId":"rui-han-crh"},"content":"                getEmail().deepCopy(),","lastModifiedDate":"2022-10-15"},{"lineNumber":154,"author":{"gitId":"rui-han-crh"},"content":"                getAddress().deepCopy(),","lastModifiedDate":"2022-10-15"},{"lineNumber":155,"author":{"gitId":"czhongwei"},"content":"                getBirthday().deepCopy(),","lastModifiedDate":"2022-10-25"},{"lineNumber":156,"author":{"gitId":"rui-han-crh"},"content":"                getTags().stream().map(Tag::shallowCopy).collect(Collectors.toSet()),","lastModifiedDate":"2022-10-15"},{"lineNumber":157,"author":{"gitId":"rui-han-crh"},"content":"                getLoan().deepCopy());","lastModifiedDate":"2022-10-15"},{"lineNumber":158,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":159,"author":{"gitId":"rui-han-crh"},"content":"        clonedPerson.getTags().forEach(tag -\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":160,"author":{"gitId":"rui-han-crh"},"content":"            tag.removePerson(this);","lastModifiedDate":"2022-10-15"},{"lineNumber":161,"author":{"gitId":"rui-han-crh"},"content":"            tag.addPerson(clonedPerson);","lastModifiedDate":"2022-10-15"},{"lineNumber":162,"author":{"gitId":"rui-han-crh"},"content":"        });","lastModifiedDate":"2022-10-15"},{"lineNumber":163,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":164,"author":{"gitId":"rui-han-crh"},"content":"        return clonedPerson;","lastModifiedDate":"2022-10-15"},{"lineNumber":165,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":166,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"czhongwei":12,"rui-han-crh":38,"-":117}},{"path":"src/main/java/seedu/address/model/person/PersonTagsContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":" * Tests that a {@code Person}\u0027s {@code Tags} matches any of the keywords given.","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"ryanczx"},"content":"public class PersonTagsContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"ryanczx"},"content":"    public PersonTagsContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"        boolean result \u003d false;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"        Set\u003cTag\u003e tagSet \u003d person.getTags();","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"        for (Tag tag : tagSet) {","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"            result \u003d result || keywords.stream().anyMatch(","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"                    keyword -\u003e StringUtil.containsWordIgnoreCase(tag.tagName, keyword));","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"        return result;","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"ryanczx"},"content":"                || (other instanceof PersonTagsContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"ryanczx"},"content":"                \u0026\u0026 keywords.equals(((PersonTagsContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ryanczx":4,"rui-han-crh":36}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"    public Phone deepCopy() {","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"        return new Phone(value);","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rui-han-crh":4,"-":53}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.ShallowCopyable;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":" * Tags are uniquely identified by their {@code tagName}. Two different tags may not share","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":" * the same name.","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"public class Tag implements ShallowCopyable {","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"    private final List\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"     * Adds person to tag\u0027s person list.","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"     * @param person A person","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"        if (!personList.contains(person)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"            this.personList.add(person);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"     * Removes person from tag\u0027s person list.","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"     * @param person A person","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"    public void removePerson(Person person) {","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"        this.personList.remove(person);","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"     * Returns true if this tag\u0027s person list is empty.","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"    public boolean isPersonListEmpty() {","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"        return personList.isEmpty();","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"     * Checks if a person exists under the tag group","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"     * @param person the person to check for existence","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"     * @return true if the person exists in this tag group","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"    public boolean doesPersonExist(Person person) {","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"        return personList.contains(person);","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"     * Creates a deep copy of the person\u0027s list of this tag object for read-only access","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"     * Modifications to persons retrieved from this copied list will not affect the original","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"     * person that it was copied from.","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"rui-han-crh"},"content":"     * Guarantees complete protection against mutations of persons through tag access","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"rui-han-crh"},"content":"     * @return a deep copy of the person\u0027s list","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"rui-han-crh"},"content":"    public List\u003cPerson\u003e getDeepCopiedPersonList() {","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"rui-han-crh"},"content":"        return personList.stream().map(Person::deepCopy).collect(Collectors.toList());","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"rui-han-crh"},"content":"     * Returns true only if the names of two tags are the same.","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"rui-han-crh"},"content":"     * Two tags are defined to be equal only if their names are equal, it","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"rui-han-crh"},"content":"     * is not necessary for their persons contained within to be the same.","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"rui-han-crh"},"content":"     * @param other the other tag to check against","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"rui-han-crh"},"content":"     * @return true if two tags have the same tag name","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"rui-han-crh"},"content":"        requireNonNull(other);","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"rui-han-crh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"rui-han-crh"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"rui-han-crh"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"rui-han-crh"},"content":"            return false;","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"rui-han-crh"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"rui-han-crh"},"content":"        return otherTag.tagName.equals(tagName);","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"rui-han-crh"},"content":"    public Tag shallowCopy() {","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"rui-han-crh"},"content":"        Tag clone \u003d new Tag(tagName);","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"rui-han-crh"},"content":"        personList.forEach(clone::addPerson);","lastModifiedDate":"2022-10-15"},{"lineNumber":130,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"rui-han-crh"},"content":"        return clone;","lastModifiedDate":"2022-10-15"},{"lineNumber":132,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":133,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rui-han-crh":84,"-":50}},{"path":"src/main/java/seedu/address/model/tag/UniqueTagMapping.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.tag.exceptions.DuplicateTagException;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.tag.exceptions.TagNotFoundException;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":" *  A list of tags that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":" *  A tag is considered unique by comparing using {@code Tag#equal(Tag)}. As such,","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":" *  adding, updating and the removal of a tag uses {@code Tag#equals(Tag)}","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":" *  in order to ensure that the tag with exactly the same fields will be removed.","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":" *  {@code Tag#tagsAreUnique(tags)} will enforce a uniqueness check to guarantee that","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":" *  added Tags are unique, even if they are given by unique keys paired with non-unique tags.","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":" *","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"public class UniqueTagMapping implements Iterable\u003cTag\u003e {","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"    private final ObservableMap\u003cString, Tag\u003e internalMap \u003d FXCollections.observableHashMap();","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"    private final ObservableMap\u003cString, Tag\u003e internalUnmodifiableMap \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"            FXCollections.unmodifiableObservableMap(internalMap);","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"     * Returns true if the list contains an equivalent tag as the given argument.","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"    public boolean contains(Tag toCheck) {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"        return internalMap.values().stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"     * Returns true if the map contains the given tagName","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"     * @param tagName the name of the tag to check against","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"     * @return whether the mapping contains this tagName","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"    public boolean contains(String tagName) {","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"        return internalMap.containsKey(tagName);","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"     * Adds a tag to the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"    public void add(Tag toAdd) {","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"        if (!contains(toAdd.tagName)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"            internalMap.put(toAdd.tagName, toAdd);","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"     * Removes the equivalent tag from the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"     * The tag must exist in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"    public void remove(Tag toRemove) {","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"        if (!internalMap.containsKey(toRemove.tagName)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"            throw new TagNotFoundException();","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"        internalMap.remove(toRemove.tagName);","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"     * Sets the internal mapping of this object to the same internal","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"     * mapping of the replacement object, only if the tags are unique","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"     * @param replacement the UniqueTagMapping to replace this object with","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"    public void setTags(UniqueTagMapping replacement) {","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"        if (!tagsAreUnique(replacement.internalMap)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"rui-han-crh"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"        internalMap.clear();","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"        internalMap.putAll(replacement.internalMap);","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"rui-han-crh"},"content":"     * Replaces the contents of this list with {@code tags}.","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"rui-han-crh"},"content":"     * {@code tags} must not contain duplicate persons.","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"rui-han-crh"},"content":"    public void setTags(Map\u003cString, Tag\u003e tags) {","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"rui-han-crh"},"content":"        requireAllNonNull(tags);","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"rui-han-crh"},"content":"        if (!tagsAreUnique(tags)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"rui-han-crh"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"rui-han-crh"},"content":"        internalMap.clear();","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"rui-han-crh"},"content":"        internalMap.putAll(tags);","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"rui-han-crh"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"rui-han-crh"},"content":"    public ObservableMap\u003cString, Tag\u003e asUnmodifiableObservableMap() {","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"rui-han-crh"},"content":"        return internalUnmodifiableMap;","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"rui-han-crh"},"content":"    public Iterator\u003cTag\u003e iterator() {","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"rui-han-crh"},"content":"        return internalMap.values().iterator();","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"rui-han-crh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"rui-han-crh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"rui-han-crh"},"content":"                || (other instanceof UniqueTagMapping // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"rui-han-crh"},"content":"                        \u0026\u0026 internalMap.equals(((UniqueTagMapping) other).internalMap));","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"rui-han-crh"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"rui-han-crh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"rui-han-crh"},"content":"        return internalMap.hashCode();","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"rui-han-crh"},"content":"     * Returns true if {@code tags} contains only unique tags.","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"rui-han-crh"},"content":"    private boolean tagsAreUnique(Map\u003cString, Tag\u003e tags) {","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"rui-han-crh"},"content":"        return tags.values().stream().distinct().count() \u003d\u003d tags.size();","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"rui-han-crh":129}},{"path":"src/main/java/seedu/address/model/tag/exceptions/DuplicateTagException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package seedu.address.model.tag.exceptions;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":" * Signals that the operation will result in duplicate Tags (Tags are considered duplicates if they have the same","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":" * identity).","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"public class DuplicateTagException extends RuntimeException {","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"    public DuplicateTagException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"        super(\"Operation would result in duplicate tags\");","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"rui-han-crh":11}},{"path":"src/main/java/seedu/address/model/tag/exceptions/TagNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package seedu.address.model.tag.exceptions;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":" * Signals that the operation is unable to find the specified tag.","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"public class TagNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"rui-han-crh":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"czhongwei"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.person.Loan;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"czhongwei"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Birthday(\"20/01/2003\"),","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"                getTagSet(\"friends\"), new Loan(\"0\")),","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"czhongwei"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Birthday(\"18/06/1999\"),","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"                getTagSet(\"colleagues\", \"friends\"), new Loan(\"50\")),","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"czhongwei"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Birthday(\"03/05/1976\"),","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"                getTagSet(\"neighbours\"), new Loan(\"121\")),","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"czhongwei"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Birthday(\"11/04/1985\"),","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"                getTagSet(\"family\"), new Loan(\"-33\")),","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"czhongwei"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Birthday(\"25/09/2010\"),","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"                getTagSet(\"classmates\"), new Loan(\"-10\")),","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"czhongwei"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Birthday(\"09/07/2005\"),","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"                getTagSet(\"colleagues\"), new Loan(\"2\"))","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"ryanczx"},"content":"    public static Tag[] getSampleTags() {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"ryanczx"},"content":"        return new Tag[] {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"ryanczx"},"content":"            new Tag(\"friends\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"ryanczx"},"content":"            new Tag(\"colleagues\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"ryanczx"},"content":"            new Tag(\"neighbours\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"ryanczx"},"content":"            new Tag(\"family\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"ryanczx"},"content":"            new Tag(\"classmates\")","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"ryanczx"},"content":"        for (Tag sampleTag : getSampleTags()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"ryanczx"},"content":"            sampleAb.addTag(sampleTag);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"ryanczx"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"czhongwei":7,"ryanczx":10,"rui-han-crh":7,"-":51}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedNote.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pinran-J"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"ryanczx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"ryanczx"},"content":"import java.util.List;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"ryanczx"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"ryanczx"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"Pinran-J"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Pinran-J"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.Content;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.Title;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"Pinran-J"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Pinran-J"},"content":" * Jackson-friendly version of {@link Note}.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Pinran-J"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Pinran-J"},"content":"public class JsonAdaptedNote {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Note\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"    private final String title;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Pinran-J"},"content":"    private final String content;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"ryanczx"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Pinran-J"},"content":"     * Constructs a {@code JsonAdaptedNote} with the given note details.","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Pinran-J"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"ryanczx"},"content":"    public JsonAdaptedNote(@JsonProperty(\"title\") String title, @JsonProperty(\"content\") String content,","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"ryanczx"},"content":"                           @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Pinran-J"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Pinran-J"},"content":"        this.content \u003d content;","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"ryanczx"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"ryanczx"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"ryanczx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"Pinran-J"},"content":"     * Converts a given {@code Note} into this class for Jackson use.","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"Pinran-J"},"content":"    public JsonAdaptedNote(Note source) {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"Pinran-J"},"content":"        title \u003d source.getTitle().fullTitle;","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"Pinran-J"},"content":"        content \u003d source.getContent().fullContent;","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"ryanczx"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"ryanczx"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"ryanczx"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"Pinran-J"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"Pinran-J"},"content":"     * Converts this Jackson-friendly adapted note object into the model\u0027s {@code Note} object.","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"Pinran-J"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"Pinran-J"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted note.","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"Pinran-J"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"ryanczx"},"content":"    public Note toModelType(List\u003cTag\u003e addressBookTagList) throws IllegalValueException {","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"ryanczx"},"content":"        final List\u003cTag\u003e convertedTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"ryanczx"},"content":"        for (JsonAdaptedTag adaptedTag : tagged) {","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"ryanczx"},"content":"            convertedTags.add(adaptedTag.toModelType());","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"ryanczx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"ryanczx"},"content":"        final Set\u003cTag\u003e modelTags \u003d addressBookTagList.stream()","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"ryanczx"},"content":"                .filter(convertedTags::contains)","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"ryanczx"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"Pinran-J"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"Pinran-J"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName()));","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"Pinran-J"},"content":"        if (!Title.isValidTitle(title)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"Pinran-J"},"content":"            throw new IllegalValueException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"Pinran-J"},"content":"        final Title modelTitle \u003d new Title(title);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"Pinran-J"},"content":"        if (content \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"Pinran-J"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Content.class.getSimpleName()));","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"Pinran-J"},"content":"        if (!Content.isValidContent(content)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"Pinran-J"},"content":"            throw new IllegalValueException(Content.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"Pinran-J"},"content":"        final Content modelContent \u003d new Content(content);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"ryanczx"},"content":"        return new Note(modelTitle, modelContent, modelTags);","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"Pinran-J"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"Pinran-J"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ryanczx":27,"Pinran-J":59}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"czhongwei"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.person.Loan;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"czhongwei"},"content":"    private final String birthday;","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"    private final String loan;","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"czhongwei"},"content":"            @JsonProperty(\"birthday\") String birthday,","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"            @JsonProperty(\"loan\") String loan) {","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"czhongwei"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"        this.loan \u003d loan;","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"czhongwei"},"content":"        birthday \u003d source.getBirthday().value;","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"        loan \u003d String.valueOf(source.getLoan().getAmount());","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"     * @param addressBookTagList the list of tags that exist in the addressBook to be assigned to","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"     *                           the model\u0027s {@code Person} object","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"ryanczx"},"content":"    public Person toModelType(List\u003cTag\u003e addressBookTagList) throws IllegalValueException {","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"rui-han-crh"},"content":"        final List\u003cTag\u003e convertedTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"        for (JsonAdaptedTag adaptedTag : tagged) {","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"            convertedTags.add(adaptedTag.toModelType());","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"rui-han-crh"},"content":"        final Set\u003cTag\u003e modelTags \u003d addressBookTagList.stream()","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"rui-han-crh"},"content":"                .filter(convertedTags::contains)","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"rui-han-crh"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"rui-han-crh"},"content":"        // We could really use some abstraction here -- Rui Han","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"rui-han-crh"},"content":"        // Name validity check","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"rui-han-crh"},"content":"        // Phone validity check","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"rui-han-crh"},"content":"        // Email validity check","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"rui-han-crh"},"content":"        // Address validity check","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"czhongwei"},"content":"        // Birthday validity check","lastModifiedDate":"2022-10-25"},{"lineNumber":128,"author":{"gitId":"czhongwei"},"content":"        if (birthday \u003d\u003d null) {","lastModifiedDate":"2022-10-25"},{"lineNumber":129,"author":{"gitId":"czhongwei"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"czhongwei"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Birthday.class.getSimpleName()));","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"czhongwei"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":132,"author":{"gitId":"czhongwei"},"content":"        if (!Birthday.isValidBirthday(birthday)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":133,"author":{"gitId":"czhongwei"},"content":"            throw new IllegalValueException(Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-25"},{"lineNumber":134,"author":{"gitId":"czhongwei"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":135,"author":{"gitId":"czhongwei"},"content":"        final Birthday modelBirthday \u003d new Birthday(birthday);","lastModifiedDate":"2022-10-25"},{"lineNumber":136,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":137,"author":{"gitId":"rui-han-crh"},"content":"        // Loan validity check","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"rui-han-crh"},"content":"        if (loan \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"rui-han-crh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Loan.class.getSimpleName()));","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"rui-han-crh"},"content":"        if (!Loan.isValidLoan(loan)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"rui-han-crh"},"content":"            throw new IllegalValueException(Loan.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"rui-han-crh"},"content":"        final Loan modelLoan \u003d new Loan(loan);","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"czhongwei"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelBirthday, modelTags, modelLoan);","lastModifiedDate":"2022-10-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"czhongwei":16,"ryanczx":1,"rui-han-crh":32,"-":100}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Pinran-J"},"content":"    public static final String MESSAGE_DUPLICATE_NOTE \u003d \"Notes list contains duplicate note(s).\";","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Pinran-J"},"content":"    private final List\u003cJsonAdaptedNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons and tags.","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"                                       @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"Pinran-J"},"content":"        notes.addAll(source.getNoteBook().stream().map(JsonAdaptedNote::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"        tags.addAll(source.getTagMapping().values().stream().map(JsonAdaptedTag::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"        List\u003cTag\u003e addressBookTagList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"        List\u003cPerson\u003e addressBookPersonList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"        for (JsonAdaptedTag jsonAdaptedTag : tags) {","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"            Tag tag \u003d jsonAdaptedTag.toModelType();","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"            addressBook.addTag(tag);","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"            addressBookTagList.add(tag);","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType(addressBookTagList);","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"            addressBookPersonList.add(person);","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"Pinran-J"},"content":"        for (JsonAdaptedNote jsonAdaptedNote : notes) {","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"ryanczx"},"content":"            Note note \u003d jsonAdaptedNote.toModelType(addressBookTagList);","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"Pinran-J"},"content":"            if (addressBook.hasNote(note)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"Pinran-J"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_NOTE);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"Pinran-J"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"Pinran-J"},"content":"            addressBook.addNote(note);","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"rui-han-crh"},"content":"        // Add person references into each tag","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"rui-han-crh"},"content":"        for (Tag tag : addressBookTagList) {","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"rui-han-crh"},"content":"            for (Person person : addressBookPersonList) {","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"rui-han-crh"},"content":"                if (person.getTags().contains(tag)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"rui-han-crh"},"content":"                    tag.addPerson(person);","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"rui-han-crh"},"content":"                }","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ryanczx":1,"rui-han-crh":26,"Pinran-J":14,"-":59}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"ryanczx"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-w12-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ryanczx":1,"-":101}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"czhongwei"},"content":"    private Label birthday;","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"czhongwei"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"czhongwei"},"content":"        birthday.setText(person.getBirthday().value);","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"czhongwei":3,"-":77}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"czhongwei"},"content":"      \u003cLabel fx:id\u003d\"birthday\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$birthday\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"czhongwei":1,"-":36}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"czhongwei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"czhongwei"},"content":"                + ADDRESS_DESC_AMY + BIRTHDAY_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"czhongwei":2,"-":161}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"ryanczx"},"content":"import static org.junit.jupiter.api.Assertions.assertSame;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"ryanczx"},"content":"import java.util.List;","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.logic.parser.AddCommandParser;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"ryanczx"},"content":"import seedu.address.logic.parser.AddNoteCommandParser;","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"ryanczx"},"content":"import seedu.address.testutil.NoteBuilder;","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"    public void execute_addPersonWithTag_addsTagIntoTagMapping() {","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"        String tagName \u003d \"TagRemovedOnLastPerson\";","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"        String nameA \u003d \"personA\";","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"        assertAll(() -\u003e new AddCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"                        + CliSyntax.PREFIX_NAME + nameA + \" \"","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"                        + CliSyntax.PREFIX_PHONE + PersonBuilder.DEFAULT_PHONE + \" \"","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"                        + CliSyntax.PREFIX_ADDRESS + PersonBuilder.DEFAULT_ADDRESS + \" \"","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"czhongwei"},"content":"                        + CliSyntax.PREFIX_BIRTHDAY + PersonBuilder.DEFAULT_BIRTHDAY + \" \"","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"                        + CliSyntax.PREFIX_EMAIL + PersonBuilder.DEFAULT_EMAIL + \" \"","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_TAG + tagName + \" \")","lastModifiedDate":"2022-10-22"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"                .execute(model));","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(1,","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"rui-han-crh"},"content":"                model.getTagMapping()","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"rui-han-crh"},"content":"                        .get(tagName)","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"rui-han-crh"},"content":"                        .getDeepCopiedPersonList()","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"rui-han-crh"},"content":"                        .stream()","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"rui-han-crh"},"content":"                        .filter(p -\u003e p.getName().fullName.equals(nameA))","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"rui-han-crh"},"content":"                        .count());","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"ryanczx"},"content":"    // Ensure that if a Person is added with a Tag that already exists in the address book, the","lastModifiedDate":"2022-10-22"},{"lineNumber":93,"author":{"gitId":"ryanczx"},"content":"    // Tag that the Person points to is the same object as the Tag that exists in the address book.","lastModifiedDate":"2022-10-22"},{"lineNumber":94,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":95,"author":{"gitId":"ryanczx"},"content":"    public void execute_addPersonWithTag_tagAlreadyExistsInTagMapping() throws Exception {","lastModifiedDate":"2022-10-22"},{"lineNumber":96,"author":{"gitId":"ryanczx"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-22"},{"lineNumber":97,"author":{"gitId":"ryanczx"},"content":"        String tagName \u003d \"Operations\";","lastModifiedDate":"2022-10-22"},{"lineNumber":98,"author":{"gitId":"ryanczx"},"content":"        model.addTag(new Tag(tagName));","lastModifiedDate":"2022-10-22"},{"lineNumber":99,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":100,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-22"},{"lineNumber":101,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NAME + PersonBuilder.DEFAULT_NAME + \" \"","lastModifiedDate":"2022-10-22"},{"lineNumber":102,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_PHONE + PersonBuilder.DEFAULT_PHONE + \" \"","lastModifiedDate":"2022-10-22"},{"lineNumber":103,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_EMAIL + PersonBuilder.DEFAULT_EMAIL + \" \"","lastModifiedDate":"2022-10-22"},{"lineNumber":104,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_ADDRESS + PersonBuilder.DEFAULT_ADDRESS + \" \"","lastModifiedDate":"2022-10-22"},{"lineNumber":105,"author":{"gitId":"czhongwei"},"content":"                        + CliSyntax.PREFIX_BIRTHDAY + PersonBuilder.DEFAULT_BIRTHDAY + \" \"","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_TAG + tagName + \" \")","lastModifiedDate":"2022-10-22"},{"lineNumber":107,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-22"},{"lineNumber":108,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":109,"author":{"gitId":"ryanczx"},"content":"        List\u003cTag\u003e listOfTagsFromPerson \u003d new ArrayList\u003c\u003e(model.getAddressBook().getPersonList().get(0).getTags());","lastModifiedDate":"2022-10-22"},{"lineNumber":110,"author":{"gitId":"ryanczx"},"content":"        Tag tagFromPerson \u003d listOfTagsFromPerson.get(0);","lastModifiedDate":"2022-10-22"},{"lineNumber":111,"author":{"gitId":"ryanczx"},"content":"        Tag tagFromTagMapping \u003d model.getTagMapping().get(tagName);","lastModifiedDate":"2022-10-22"},{"lineNumber":112,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":113,"author":{"gitId":"ryanczx"},"content":"        assertSame(tagFromTagMapping, tagFromPerson);","lastModifiedDate":"2022-10-24"},{"lineNumber":114,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":115,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"ryanczx"},"content":"    // Tag being added already exists in UniqueTagMapping because a Note has it","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":118,"author":{"gitId":"ryanczx"},"content":"    public void execute_addPersonWithTag_tagAlreadyExistsInTagMappingDueToNote() throws Exception {","lastModifiedDate":"2022-10-24"},{"lineNumber":119,"author":{"gitId":"ryanczx"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-24"},{"lineNumber":120,"author":{"gitId":"ryanczx"},"content":"        String tagName \u003d \"Operations\";","lastModifiedDate":"2022-10-24"},{"lineNumber":121,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":122,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddNoteCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":123,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TITLE + NoteBuilder.DEFAULT_TITLE + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":124,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_CONTENT + NoteBuilder.DEFAULT_CONTENT + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":125,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TAG + tagName)","lastModifiedDate":"2022-10-24"},{"lineNumber":126,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":127,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":128,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":129,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NAME + PersonBuilder.DEFAULT_NAME + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":130,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_PHONE + PersonBuilder.DEFAULT_PHONE + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":131,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_EMAIL + PersonBuilder.DEFAULT_EMAIL + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":132,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_ADDRESS + PersonBuilder.DEFAULT_ADDRESS + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":133,"author":{"gitId":"czhongwei"},"content":"                        + CliSyntax.PREFIX_BIRTHDAY + PersonBuilder.DEFAULT_BIRTHDAY + \" \"","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_TAG + tagName + \" \")","lastModifiedDate":"2022-10-24"},{"lineNumber":135,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":136,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":137,"author":{"gitId":"ryanczx"},"content":"        List\u003cTag\u003e listOfTagsFromPerson \u003d new ArrayList\u003c\u003e(model.getAddressBook().getPersonList().get(0).getTags());","lastModifiedDate":"2022-10-24"},{"lineNumber":138,"author":{"gitId":"ryanczx"},"content":"        Tag tagFromPerson \u003d listOfTagsFromPerson.get(0);","lastModifiedDate":"2022-10-24"},{"lineNumber":139,"author":{"gitId":"ryanczx"},"content":"        Tag tagFromTagMapping \u003d model.getTagMapping().get(tagName);","lastModifiedDate":"2022-10-24"},{"lineNumber":140,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":141,"author":{"gitId":"ryanczx"},"content":"        assertSame(tagFromTagMapping, tagFromPerson);","lastModifiedDate":"2022-10-22"},{"lineNumber":142,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":143,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"Pinran-J"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":208,"author":{"gitId":"Pinran-J"},"content":"        public void addNote(Note note) {","lastModifiedDate":"2022-10-10"},{"lineNumber":209,"author":{"gitId":"Pinran-J"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":210,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":211,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":227,"author":{"gitId":"Pinran-J"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":228,"author":{"gitId":"Pinran-J"},"content":"        public boolean hasNote(Note note) {","lastModifiedDate":"2022-10-10"},{"lineNumber":229,"author":{"gitId":"Pinran-J"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":230,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":231,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"Pinran-J"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":238,"author":{"gitId":"Pinran-J"},"content":"        public void deleteNote(Note target) {","lastModifiedDate":"2022-10-10"},{"lineNumber":239,"author":{"gitId":"Pinran-J"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":240,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":241,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"Pinran-J"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":248,"author":{"gitId":"Pinran-J"},"content":"        public void setNote(Note target, Note editedNote) {","lastModifiedDate":"2022-10-10"},{"lineNumber":249,"author":{"gitId":"Pinran-J"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":250,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":251,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":252,"author":{"gitId":"rui-han-crh"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":253,"author":{"gitId":"rui-han-crh"},"content":"        public void addTag(Tag tag) {","lastModifiedDate":"2022-10-11"},{"lineNumber":254,"author":{"gitId":"rui-han-crh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":255,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":256,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":257,"author":{"gitId":"rui-han-crh"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":258,"author":{"gitId":"rui-han-crh"},"content":"        public void removeTag(Tag tag) {","lastModifiedDate":"2022-10-11"},{"lineNumber":259,"author":{"gitId":"rui-han-crh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":260,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":261,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":262,"author":{"gitId":"rui-han-crh"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":263,"author":{"gitId":"rui-han-crh"},"content":"        public ObservableMap\u003cString, Tag\u003e getTagMapping() {","lastModifiedDate":"2022-10-14"},{"lineNumber":264,"author":{"gitId":"rui-han-crh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":265,"author":{"gitId":"ryanczx"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":266,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":267,"author":{"gitId":"ryanczx"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":268,"author":{"gitId":"ryanczx"},"content":"        public boolean notebookContainsTag(Tag tag) {","lastModifiedDate":"2022-10-24"},{"lineNumber":269,"author":{"gitId":"ryanczx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-24"},{"lineNumber":270,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":271,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":277,"author":{"gitId":"Pinran-J"},"content":"        @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":278,"author":{"gitId":"Pinran-J"},"content":"        public ObservableList\u003cNote\u003e getFilteredNoteList() {","lastModifiedDate":"2022-10-19"},{"lineNumber":279,"author":{"gitId":"Pinran-J"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":280,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":281,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":286,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":287,"author":{"gitId":"Pinran-J"},"content":"        @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":288,"author":{"gitId":"Pinran-J"},"content":"        public void updateFilteredNoteList(Predicate\u003cNote\u003e predicate) {","lastModifiedDate":"2022-10-19"},{"lineNumber":289,"author":{"gitId":"Pinran-J"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":290,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":295,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":312,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":313,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":320,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":326,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":329,"author":{"gitId":"rui-han-crh"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":330,"author":{"gitId":"rui-han-crh"},"content":"        public ObservableMap\u003cString, Tag\u003e getTagMapping() {","lastModifiedDate":"2022-10-14"},{"lineNumber":331,"author":{"gitId":"rui-han-crh"},"content":"            return FXCollections.observableHashMap();","lastModifiedDate":"2022-10-14"},{"lineNumber":332,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":333,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":336,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"czhongwei":3,"ryanczx":60,"rui-han-crh":52,"Pinran-J":31,"-":194}},{"path":"src/test/java/seedu/address/logic/commands/AddNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanczx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"ryanczx"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"ryanczx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"ryanczx"},"content":"import static org.junit.jupiter.api.Assertions.assertSame;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"ryanczx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"ryanczx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"ryanczx"},"content":"import java.util.List;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"ryanczx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"ryanczx"},"content":"import seedu.address.logic.parser.AddCommandParser;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"ryanczx"},"content":"import seedu.address.logic.parser.AddNoteCommandParser;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"ryanczx"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"ryanczx"},"content":"import seedu.address.testutil.NoteBuilder;","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"ryanczx"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"ryanczx"},"content":"public class AddNoteCommandTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"ryanczx"},"content":"    public void execute_addNoteWithTag_addsTagIntoTagMapping() {","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"ryanczx"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"ryanczx"},"content":"        String tagName \u003d \"Operations\";","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"ryanczx"},"content":"        assertFalse(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddNoteCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TITLE + NoteBuilder.DEFAULT_TITLE + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_CONTENT + NoteBuilder.DEFAULT_CONTENT + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TAG + tagName + \" \")","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"ryanczx"},"content":"        assertTrue(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"ryanczx"},"content":"    // Ensure that if a Note is added with a Tag that already exists in the address book, the","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"ryanczx"},"content":"    // Tag that the Note points to is the same object as the Tag that exists in the address book.","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"ryanczx"},"content":"    public void execute_addNoteWithTag_tagAlreadyExistsInTagMapping() throws Exception {","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"ryanczx"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"ryanczx"},"content":"        String tagName \u003d \"Operations\";","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"ryanczx"},"content":"        model.addTag(new Tag(tagName));","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddNoteCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TITLE + NoteBuilder.DEFAULT_TITLE + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_CONTENT + NoteBuilder.DEFAULT_CONTENT + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TAG + tagName + \" \")","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"ryanczx"},"content":"        List\u003cTag\u003e listOfTagsFromNote \u003d new ArrayList\u003c\u003e(model.getAddressBook().getNoteBook().get(0).getTags());","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"ryanczx"},"content":"        Tag tagFromNote \u003d listOfTagsFromNote.get(0);","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"ryanczx"},"content":"        Tag tagFromTagMapping \u003d model.getTagMapping().get(tagName);","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"ryanczx"},"content":"        assertSame(tagFromTagMapping, tagFromNote);","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"ryanczx"},"content":"    // Tag being added already exists in UniqueTagMapping because a Person has it","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"ryanczx"},"content":"    public void execute_addNoteWithTag_tagAlreadyExistsInTagMappingDueToPerson() throws Exception {","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"ryanczx"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"ryanczx"},"content":"        String tagName \u003d \"Operations\";","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NAME + PersonBuilder.DEFAULT_NAME + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_PHONE + PersonBuilder.DEFAULT_PHONE + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_EMAIL + PersonBuilder.DEFAULT_EMAIL + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_ADDRESS + PersonBuilder.DEFAULT_ADDRESS + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"czhongwei"},"content":"                        + CliSyntax.PREFIX_BIRTHDAY + PersonBuilder.DEFAULT_BIRTHDAY + \" \"","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_TAG + tagName + \" \")","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddNoteCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TITLE + NoteBuilder.DEFAULT_TITLE + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_CONTENT + NoteBuilder.DEFAULT_CONTENT + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TAG + tagName)","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"ryanczx"},"content":"        List\u003cTag\u003e listOfTagsFromNotes \u003d new ArrayList\u003c\u003e(model.getAddressBook().getNoteBook().get(0).getTags());","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"ryanczx"},"content":"        Tag tagFromNotes \u003d listOfTagsFromNotes.get(0);","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"ryanczx"},"content":"        Tag tagFromTagMapping \u003d model.getTagMapping().get(tagName);","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"ryanczx"},"content":"        assertSame(tagFromTagMapping, tagFromNotes);","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"ryanczx"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"czhongwei":1,"ryanczx":88}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"czhongwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"czhongwei"},"content":"    public static final String VALID_BIRTHDAY_AMY \u003d \"01/01/2000\";","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"czhongwei"},"content":"    public static final String VALID_BIRTHDAY_BOB \u003d \"01/01/2000\";","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"czhongwei"},"content":"    public static final String BIRTHDAY_DESC_AMY \u003d \" \" + PREFIX_BIRTHDAY + VALID_BIRTHDAY_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"czhongwei"},"content":"    public static final String BIRTHDAY_DESC_BOB \u003d \" \" + PREFIX_BIRTHDAY + VALID_BIRTHDAY_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"czhongwei"},"content":"    public static final String INVALID_BIRTHDAY_DESC \u003d \" \" + PREFIX_BIRTHDAY + \"asd\";","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"czhongwei"},"content":"                .withBirthday(VALID_BIRTHDAY_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"czhongwei"},"content":"                .withBirthday(VALID_BIRTHDAY_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"czhongwei":8,"-":126}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.logic.parser.AddCommandParser;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"ryanczx"},"content":"import seedu.address.logic.parser.AddNoteCommandParser;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.logic.parser.DeleteCommandParser;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"ryanczx"},"content":"import seedu.address.testutil.NoteBuilder;","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"rui-han-crh"},"content":"    public void execute_removeLastPersonFromModel_removesTagInMapping() {","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"rui-han-crh"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"rui-han-crh"},"content":"        String tagName \u003d \"TagRemovedOnLastPerson\";","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"rui-han-crh"},"content":"        String nameA \u003d \"personA\";","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"rui-han-crh"},"content":"        String nameB \u003d \"personB\";","lastModifiedDate":"2022-10-15"},{"lineNumber":123,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":124,"author":{"gitId":"rui-han-crh"},"content":"        assertAll(() -\u003e new AddCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-15"},{"lineNumber":125,"author":{"gitId":"rui-han-crh"},"content":"                        + CliSyntax.PREFIX_NAME + nameA + \" \"","lastModifiedDate":"2022-10-15"},{"lineNumber":126,"author":{"gitId":"rui-han-crh"},"content":"                        + CliSyntax.PREFIX_PHONE + PersonBuilder.DEFAULT_PHONE + \" \"","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"rui-han-crh"},"content":"                        + CliSyntax.PREFIX_ADDRESS + PersonBuilder.DEFAULT_ADDRESS + \" \"","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"czhongwei"},"content":"                        + CliSyntax.PREFIX_BIRTHDAY + PersonBuilder.DEFAULT_BIRTHDAY + \" \"","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"rui-han-crh"},"content":"                        + CliSyntax.PREFIX_EMAIL + PersonBuilder.DEFAULT_EMAIL + \" \"","lastModifiedDate":"2022-10-15"},{"lineNumber":130,"author":{"gitId":"rui-han-crh"},"content":"                        + CliSyntax.PREFIX_TAG + tagName)","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"rui-han-crh"},"content":"                .execute(model));","lastModifiedDate":"2022-10-15"},{"lineNumber":132,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":133,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-15"},{"lineNumber":134,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":135,"author":{"gitId":"rui-han-crh"},"content":"        assertAll(() -\u003e new AddCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-15"},{"lineNumber":136,"author":{"gitId":"rui-han-crh"},"content":"                        + CliSyntax.PREFIX_NAME + nameB + \" \"","lastModifiedDate":"2022-10-15"},{"lineNumber":137,"author":{"gitId":"rui-han-crh"},"content":"                        + CliSyntax.PREFIX_PHONE + PersonBuilder.DEFAULT_PHONE + \" \"","lastModifiedDate":"2022-10-15"},{"lineNumber":138,"author":{"gitId":"rui-han-crh"},"content":"                        + CliSyntax.PREFIX_ADDRESS + PersonBuilder.DEFAULT_ADDRESS + \" \"","lastModifiedDate":"2022-10-15"},{"lineNumber":139,"author":{"gitId":"czhongwei"},"content":"                        + CliSyntax.PREFIX_BIRTHDAY + PersonBuilder.DEFAULT_BIRTHDAY + \" \"","lastModifiedDate":"2022-10-26"},{"lineNumber":140,"author":{"gitId":"rui-han-crh"},"content":"                        + CliSyntax.PREFIX_EMAIL + PersonBuilder.DEFAULT_EMAIL + \" \"","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"rui-han-crh"},"content":"                        + CliSyntax.PREFIX_TAG + tagName)","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"rui-han-crh"},"content":"                .execute(model));","lastModifiedDate":"2022-10-15"},{"lineNumber":143,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":144,"author":{"gitId":"rui-han-crh"},"content":"        assertAll(() -\u003e new DeleteCommandParser(model).parse(nameB).execute(model));","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"rui-han-crh"},"content":"        assertAll(() -\u003e new DeleteCommandParser(model).parse(nameA).execute(model));","lastModifiedDate":"2022-10-15"},{"lineNumber":147,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":148,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-15"},{"lineNumber":149,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":150,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":151,"author":{"gitId":"ryanczx"},"content":"    // Tag is not deleted from UniqueTagMapping when there still exists a Note with that Tag","lastModifiedDate":"2022-10-24"},{"lineNumber":152,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":153,"author":{"gitId":"ryanczx"},"content":"    public void execute_deletePersonWithTag_doesNotDeletesTagFromTagMapping() {","lastModifiedDate":"2022-10-24"},{"lineNumber":154,"author":{"gitId":"ryanczx"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-24"},{"lineNumber":155,"author":{"gitId":"ryanczx"},"content":"        String tagName \u003d \"Operations\";","lastModifiedDate":"2022-10-24"},{"lineNumber":156,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":157,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddNoteCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":158,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TITLE + NoteBuilder.DEFAULT_TITLE + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":159,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_CONTENT + NoteBuilder.DEFAULT_CONTENT + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":160,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TAG + tagName)","lastModifiedDate":"2022-10-24"},{"lineNumber":161,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":162,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":163,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":164,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NAME + PersonBuilder.DEFAULT_NAME + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":165,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_PHONE + PersonBuilder.DEFAULT_PHONE + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":166,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_ADDRESS + PersonBuilder.DEFAULT_ADDRESS + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":167,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_EMAIL + PersonBuilder.DEFAULT_EMAIL + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":168,"author":{"gitId":"czhongwei"},"content":"                        + CliSyntax.PREFIX_BIRTHDAY + PersonBuilder.DEFAULT_BIRTHDAY + \" \"","lastModifiedDate":"2022-10-26"},{"lineNumber":169,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_TAG + tagName)","lastModifiedDate":"2022-10-24"},{"lineNumber":170,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":171,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":172,"author":{"gitId":"ryanczx"},"content":"        assertTrue(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-24"},{"lineNumber":173,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":174,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new DeleteCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":175,"author":{"gitId":"ryanczx"},"content":"                        + \"1\")","lastModifiedDate":"2022-10-24"},{"lineNumber":176,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":177,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":178,"author":{"gitId":"ryanczx"},"content":"        assertTrue(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-24"},{"lineNumber":179,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"czhongwei":3,"ryanczx":31,"rui-han-crh":37,"-":109}},{"path":"src/test/java/seedu/address/logic/commands/DeleteNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanczx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"ryanczx"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"ryanczx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"ryanczx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"ryanczx"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"ryanczx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"ryanczx"},"content":"import seedu.address.logic.parser.AddCommandParser;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"ryanczx"},"content":"import seedu.address.logic.parser.AddNoteCommandParser;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"ryanczx"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"ryanczx"},"content":"import seedu.address.logic.parser.DeleteNoteCommandParser;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"ryanczx"},"content":"import seedu.address.testutil.NoteBuilder;","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"ryanczx"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"ryanczx"},"content":"public class DeleteNoteCommandTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"ryanczx"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"ryanczx"},"content":"    public void execute_removeLastNoteFromModel_removesTagInMapping() {","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"ryanczx"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"ryanczx"},"content":"        String tagName \u003d \"TagRemovedOnLastNote\";","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"ryanczx"},"content":"        String titleA \u003d \"noteA\";","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"ryanczx"},"content":"        String titleB \u003d \"noteB\";","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddNoteCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TITLE + titleA + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_CONTENT + NoteBuilder.DEFAULT_CONTENT + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TAG + tagName)","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"ryanczx"},"content":"        assertTrue(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddNoteCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TITLE + titleB + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_CONTENT + NoteBuilder.DEFAULT_CONTENT + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TAG + tagName)","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new DeleteNoteCommandParser().parse(\"2\").execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"ryanczx"},"content":"        assertTrue(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new DeleteNoteCommandParser().parse(\"1\").execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"ryanczx"},"content":"        assertFalse(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"ryanczx"},"content":"    // Tag is not deleted from UniqueTagMapping when there still exists a Person with that Tag","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"ryanczx"},"content":"    public void execute_deleteNoteWithTag_doesNotDeletesTagFromTagMapping() {","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"ryanczx"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"ryanczx"},"content":"        String tagName \u003d \"Operations\";","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NAME + PersonBuilder.DEFAULT_NAME + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_PHONE + PersonBuilder.DEFAULT_PHONE + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_ADDRESS + PersonBuilder.DEFAULT_ADDRESS + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_EMAIL + PersonBuilder.DEFAULT_EMAIL + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"czhongwei"},"content":"                        + CliSyntax.PREFIX_BIRTHDAY + PersonBuilder.DEFAULT_BIRTHDAY + \" \"","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_TAG + tagName)","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddNoteCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TITLE + NoteBuilder.DEFAULT_TITLE + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_CONTENT + NoteBuilder.DEFAULT_CONTENT + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TAG + tagName)","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"ryanczx"},"content":"        assertTrue(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new DeleteNoteCommandParser().parse(\"1\").execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"ryanczx"},"content":"        assertTrue(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"ryanczx"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"czhongwei":1,"ryanczx":80}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"ryanczx"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"ryanczx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"ryanczx"},"content":"import static org.junit.jupiter.api.Assertions.assertSame;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"ryanczx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"ryanczx"},"content":"import java.util.List;","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":28,"author":{"gitId":"ryanczx"},"content":"import seedu.address.logic.parser.AddCommandParser;","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"ryanczx"},"content":"import seedu.address.logic.parser.AddNoteCommandParser;","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"ryanczx"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"ryanczx"},"content":"import seedu.address.logic.parser.EditCommandParser;","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"ryanczx"},"content":"import seedu.address.testutil.NoteBuilder;","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":161,"author":{"gitId":"ryanczx"},"content":"    public void execute_editPersonWithTag_addsTagIntoTagMapping() throws Exception {","lastModifiedDate":"2022-10-22"},{"lineNumber":162,"author":{"gitId":"ryanczx"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-22"},{"lineNumber":163,"author":{"gitId":"ryanczx"},"content":"        String tagName \u003d \"Operations\";","lastModifiedDate":"2022-10-22"},{"lineNumber":164,"author":{"gitId":"ryanczx"},"content":"        model.addPerson(new PersonBuilder().build());","lastModifiedDate":"2022-10-22"},{"lineNumber":165,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":166,"author":{"gitId":"ryanczx"},"content":"        assertFalse(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-22"},{"lineNumber":167,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":168,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new EditCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-22"},{"lineNumber":169,"author":{"gitId":"ryanczx"},"content":"                        + \"1\" + \" \"","lastModifiedDate":"2022-10-22"},{"lineNumber":170,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_TAG + tagName + \" \")","lastModifiedDate":"2022-10-22"},{"lineNumber":171,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-22"},{"lineNumber":172,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":173,"author":{"gitId":"ryanczx"},"content":"        assertTrue(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-22"},{"lineNumber":174,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":175,"author":{"gitId":"ryanczx"},"content":"        assertEquals(1,","lastModifiedDate":"2022-10-22"},{"lineNumber":176,"author":{"gitId":"ryanczx"},"content":"                model.getTagMapping()","lastModifiedDate":"2022-10-22"},{"lineNumber":177,"author":{"gitId":"ryanczx"},"content":"                        .get(tagName)","lastModifiedDate":"2022-10-22"},{"lineNumber":178,"author":{"gitId":"ryanczx"},"content":"                        .getDeepCopiedPersonList()","lastModifiedDate":"2022-10-22"},{"lineNumber":179,"author":{"gitId":"ryanczx"},"content":"                        .stream()","lastModifiedDate":"2022-10-22"},{"lineNumber":180,"author":{"gitId":"ryanczx"},"content":"                        .filter(p -\u003e p.getName().fullName.equals(PersonBuilder.DEFAULT_NAME))","lastModifiedDate":"2022-10-22"},{"lineNumber":181,"author":{"gitId":"ryanczx"},"content":"                        .count());","lastModifiedDate":"2022-10-22"},{"lineNumber":182,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":183,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":184,"author":{"gitId":"ryanczx"},"content":"    // Ensure that if a Person is edited with a Tag that already exists in the address book, the","lastModifiedDate":"2022-10-22"},{"lineNumber":185,"author":{"gitId":"ryanczx"},"content":"    // Tag that the Person points to is the same object as the Tag that exists in the address book.","lastModifiedDate":"2022-10-22"},{"lineNumber":186,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":187,"author":{"gitId":"ryanczx"},"content":"    public void execute_editPersonWithTag_tagAlreadyExistsInTagMapping() throws Exception {","lastModifiedDate":"2022-10-22"},{"lineNumber":188,"author":{"gitId":"ryanczx"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-22"},{"lineNumber":189,"author":{"gitId":"ryanczx"},"content":"        String tagName \u003d \"Operations\";","lastModifiedDate":"2022-10-22"},{"lineNumber":190,"author":{"gitId":"ryanczx"},"content":"        model.addPerson(new PersonBuilder().build());","lastModifiedDate":"2022-10-22"},{"lineNumber":191,"author":{"gitId":"ryanczx"},"content":"        model.addTag(new Tag(tagName));","lastModifiedDate":"2022-10-22"},{"lineNumber":192,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":193,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new EditCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-22"},{"lineNumber":194,"author":{"gitId":"ryanczx"},"content":"                        + \"1\" + \" \"","lastModifiedDate":"2022-10-22"},{"lineNumber":195,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_TAG + tagName + \" \")","lastModifiedDate":"2022-10-22"},{"lineNumber":196,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-22"},{"lineNumber":197,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":198,"author":{"gitId":"ryanczx"},"content":"        List\u003cTag\u003e listOfTagsFromPerson \u003d new ArrayList\u003c\u003e(model.getAddressBook().getPersonList().get(0).getTags());","lastModifiedDate":"2022-10-22"},{"lineNumber":199,"author":{"gitId":"ryanczx"},"content":"        Tag tagFromPerson \u003d listOfTagsFromPerson.get(0);","lastModifiedDate":"2022-10-22"},{"lineNumber":200,"author":{"gitId":"ryanczx"},"content":"        Tag tagFromTagMapping \u003d model.getTagMapping().get(tagName);","lastModifiedDate":"2022-10-22"},{"lineNumber":201,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":202,"author":{"gitId":"ryanczx"},"content":"        assertSame(tagFromTagMapping, tagFromPerson);","lastModifiedDate":"2022-10-22"},{"lineNumber":203,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":204,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":205,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":206,"author":{"gitId":"ryanczx"},"content":"    public void execute_editPersonWithTag_deletesTagFromTagMapping() {","lastModifiedDate":"2022-10-22"},{"lineNumber":207,"author":{"gitId":"ryanczx"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-22"},{"lineNumber":208,"author":{"gitId":"ryanczx"},"content":"        String tagName \u003d \"Operations\";","lastModifiedDate":"2022-10-22"},{"lineNumber":209,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":210,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-22"},{"lineNumber":211,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NAME + PersonBuilder.DEFAULT_NAME + \" \"","lastModifiedDate":"2022-10-22"},{"lineNumber":212,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_PHONE + PersonBuilder.DEFAULT_PHONE + \" \"","lastModifiedDate":"2022-10-22"},{"lineNumber":213,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_ADDRESS + PersonBuilder.DEFAULT_ADDRESS + \" \"","lastModifiedDate":"2022-10-22"},{"lineNumber":214,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_EMAIL + PersonBuilder.DEFAULT_EMAIL + \" \"","lastModifiedDate":"2022-10-22"},{"lineNumber":215,"author":{"gitId":"czhongwei"},"content":"                        + CliSyntax.PREFIX_BIRTHDAY + PersonBuilder.DEFAULT_BIRTHDAY + \" \"","lastModifiedDate":"2022-10-26"},{"lineNumber":216,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_TAG + tagName)","lastModifiedDate":"2022-10-22"},{"lineNumber":217,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-22"},{"lineNumber":218,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":219,"author":{"gitId":"ryanczx"},"content":"        assertTrue(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-22"},{"lineNumber":220,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":221,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new EditCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-22"},{"lineNumber":222,"author":{"gitId":"ryanczx"},"content":"                        + \"1\" + \" \"","lastModifiedDate":"2022-10-22"},{"lineNumber":223,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_TAG + \" \")","lastModifiedDate":"2022-10-22"},{"lineNumber":224,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-22"},{"lineNumber":225,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":226,"author":{"gitId":"ryanczx"},"content":"        assertFalse(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-22"},{"lineNumber":227,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":228,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":229,"author":{"gitId":"ryanczx"},"content":"    // Tag being added already exists in UniqueTagMapping because a Note has it","lastModifiedDate":"2022-10-24"},{"lineNumber":230,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":231,"author":{"gitId":"ryanczx"},"content":"    public void execute_editPersonWithTag_tagAlreadyExistsInTagMappingDueToNote() throws Exception {","lastModifiedDate":"2022-10-24"},{"lineNumber":232,"author":{"gitId":"ryanczx"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-24"},{"lineNumber":233,"author":{"gitId":"ryanczx"},"content":"        model.addPerson(new PersonBuilder().build());","lastModifiedDate":"2022-10-24"},{"lineNumber":234,"author":{"gitId":"ryanczx"},"content":"        String tagName \u003d \"Operations\";","lastModifiedDate":"2022-10-24"},{"lineNumber":235,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":236,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddNoteCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":237,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TITLE + NoteBuilder.DEFAULT_TITLE + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":238,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_CONTENT + NoteBuilder.DEFAULT_CONTENT + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":239,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TAG + tagName)","lastModifiedDate":"2022-10-24"},{"lineNumber":240,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":241,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":242,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new EditCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":243,"author":{"gitId":"ryanczx"},"content":"                        + \"1\" + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":244,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_TAG + tagName + \" \")","lastModifiedDate":"2022-10-24"},{"lineNumber":245,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":246,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":247,"author":{"gitId":"ryanczx"},"content":"        List\u003cTag\u003e listOfTagsFromPerson \u003d new ArrayList\u003c\u003e(model.getAddressBook().getPersonList().get(0).getTags());","lastModifiedDate":"2022-10-24"},{"lineNumber":248,"author":{"gitId":"ryanczx"},"content":"        Tag tagFromPerson \u003d listOfTagsFromPerson.get(0);","lastModifiedDate":"2022-10-24"},{"lineNumber":249,"author":{"gitId":"ryanczx"},"content":"        Tag tagFromTagMapping \u003d model.getTagMapping().get(tagName);","lastModifiedDate":"2022-10-24"},{"lineNumber":250,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":251,"author":{"gitId":"ryanczx"},"content":"        assertSame(tagFromTagMapping, tagFromPerson);","lastModifiedDate":"2022-10-24"},{"lineNumber":252,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":253,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":254,"author":{"gitId":"ryanczx"},"content":"    // Tag is not deleted from UniqueTagMapping when there still exists a Note with that Tag","lastModifiedDate":"2022-10-24"},{"lineNumber":255,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":256,"author":{"gitId":"ryanczx"},"content":"    public void execute_editPersonWithTag_doesNotDeletesTagFromTagMapping() {","lastModifiedDate":"2022-10-24"},{"lineNumber":257,"author":{"gitId":"ryanczx"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-24"},{"lineNumber":258,"author":{"gitId":"ryanczx"},"content":"        String tagName \u003d \"Operations\";","lastModifiedDate":"2022-10-24"},{"lineNumber":259,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":260,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddNoteCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":261,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TITLE + NoteBuilder.DEFAULT_TITLE + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":262,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_CONTENT + NoteBuilder.DEFAULT_CONTENT + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":263,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TAG + tagName)","lastModifiedDate":"2022-10-24"},{"lineNumber":264,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":265,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":266,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":267,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NAME + PersonBuilder.DEFAULT_NAME + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":268,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_PHONE + PersonBuilder.DEFAULT_PHONE + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":269,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_ADDRESS + PersonBuilder.DEFAULT_ADDRESS + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":270,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_EMAIL + PersonBuilder.DEFAULT_EMAIL + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":271,"author":{"gitId":"czhongwei"},"content":"                        + CliSyntax.PREFIX_BIRTHDAY + PersonBuilder.DEFAULT_BIRTHDAY + \" \"","lastModifiedDate":"2022-10-26"},{"lineNumber":272,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_TAG + tagName)","lastModifiedDate":"2022-10-24"},{"lineNumber":273,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":274,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":275,"author":{"gitId":"ryanczx"},"content":"        assertTrue(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-24"},{"lineNumber":276,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":277,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new EditCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":278,"author":{"gitId":"ryanczx"},"content":"                        + \"1\" + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":279,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_TAG + \" \")","lastModifiedDate":"2022-10-24"},{"lineNumber":280,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":281,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":282,"author":{"gitId":"ryanczx"},"content":"        assertTrue(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-24"},{"lineNumber":283,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":284,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"czhongwei":2,"ryanczx":135,"-":173}},{"path":"src/test/java/seedu/address/logic/commands/EditNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanczx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"ryanczx"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"ryanczx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"ryanczx"},"content":"import static org.junit.jupiter.api.Assertions.assertSame;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"ryanczx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"ryanczx"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"ryanczx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"ryanczx"},"content":"import java.util.List;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"ryanczx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"ryanczx"},"content":"import seedu.address.logic.parser.AddCommandParser;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"ryanczx"},"content":"import seedu.address.logic.parser.AddNoteCommandParser;","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"ryanczx"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"ryanczx"},"content":"import seedu.address.logic.parser.EditNoteCommandParser;","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"ryanczx"},"content":"import seedu.address.testutil.NoteBuilder;","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"ryanczx"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"ryanczx"},"content":"public class EditNoteCommandTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"ryanczx"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"ryanczx"},"content":"    public void execute_editNoteWithTag_addsTagIntoTagMapping() throws Exception {","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"ryanczx"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"ryanczx"},"content":"        String tagName \u003d \"Operations\";","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"ryanczx"},"content":"        model.addNote(new NoteBuilder().build());","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"ryanczx"},"content":"        assertFalse(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new EditNoteCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"ryanczx"},"content":"                        + \"1\" + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TAG + tagName + \" \")","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"ryanczx"},"content":"        assertTrue(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"ryanczx"},"content":"    // Ensure that if a Note is edited with a Tag that already exists in the address book, the","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"ryanczx"},"content":"    // Tag that the Note points to is the same object as the Tag that exists in the address book.","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"ryanczx"},"content":"    public void execute_editNoteWithTag_tagAlreadyExistsInTagMapping() throws Exception {","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"ryanczx"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"ryanczx"},"content":"        String tagName \u003d \"Operations\";","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"ryanczx"},"content":"        model.addNote(new NoteBuilder().build());","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"ryanczx"},"content":"        model.addTag(new Tag(tagName));","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new EditNoteCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"ryanczx"},"content":"                        + \"1\" + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TAG + tagName + \" \")","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"ryanczx"},"content":"        List\u003cTag\u003e listOfTagsFromNote \u003d new ArrayList\u003c\u003e(model.getAddressBook().getNoteBook().get(0).getTags());","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"ryanczx"},"content":"        Tag tagFromNote \u003d listOfTagsFromNote.get(0);","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"ryanczx"},"content":"        Tag tagFromTagMapping \u003d model.getTagMapping().get(tagName);","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"ryanczx"},"content":"        assertSame(tagFromTagMapping, tagFromNote);","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"ryanczx"},"content":"    public void execute_editNoteWithTag_deletesTagFromTagMapping() {","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"ryanczx"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"ryanczx"},"content":"        String tagName \u003d \"Operations\";","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddNoteCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TITLE + NoteBuilder.DEFAULT_TITLE + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_CONTENT + NoteBuilder.DEFAULT_CONTENT + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TAG + tagName)","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"ryanczx"},"content":"        assertTrue(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new EditNoteCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"ryanczx"},"content":"                        + \"1\" + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TAG + \" \")","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"ryanczx"},"content":"        assertFalse(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"ryanczx"},"content":"    // Tag being added already exists in UniqueTagMapping because a Person has it","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"ryanczx"},"content":"    public void execute_editNoteWithTag_tagAlreadyExistsInTagMappingDueToPerson() throws Exception {","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"ryanczx"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"ryanczx"},"content":"        model.addNote(new NoteBuilder().build());","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"ryanczx"},"content":"        String tagName \u003d \"Operations\";","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NAME + PersonBuilder.DEFAULT_NAME + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_PHONE + PersonBuilder.DEFAULT_PHONE + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_EMAIL + PersonBuilder.DEFAULT_EMAIL + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_ADDRESS + PersonBuilder.DEFAULT_ADDRESS + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"czhongwei"},"content":"                        + CliSyntax.PREFIX_BIRTHDAY + PersonBuilder.DEFAULT_BIRTHDAY + \" \"","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_TAG + tagName + \" \")","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new EditNoteCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"ryanczx"},"content":"                        + \"1\" + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TAG + tagName + \" \")","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"ryanczx"},"content":"        List\u003cTag\u003e listOfTagsFromNote \u003d new ArrayList\u003c\u003e(model.getAddressBook().getNoteBook().get(0).getTags());","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"ryanczx"},"content":"        Tag tagFromNote \u003d listOfTagsFromNote.get(0);","lastModifiedDate":"2022-10-24"},{"lineNumber":110,"author":{"gitId":"ryanczx"},"content":"        Tag tagFromTagMapping \u003d model.getTagMapping().get(tagName);","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":112,"author":{"gitId":"ryanczx"},"content":"        assertSame(tagFromTagMapping, tagFromNote);","lastModifiedDate":"2022-10-24"},{"lineNumber":113,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":114,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":115,"author":{"gitId":"ryanczx"},"content":"    // Tag is not deleted from UniqueTagMapping when there still exists a Person with that Tag","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"ryanczx"},"content":"    public void execute_editNoteWithTag_doesNotDeletesTagFromTagMapping() {","lastModifiedDate":"2022-10-24"},{"lineNumber":118,"author":{"gitId":"ryanczx"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-24"},{"lineNumber":119,"author":{"gitId":"ryanczx"},"content":"        String tagName \u003d \"Operations\";","lastModifiedDate":"2022-10-24"},{"lineNumber":120,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":121,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":122,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NAME + PersonBuilder.DEFAULT_NAME + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":123,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_PHONE + PersonBuilder.DEFAULT_PHONE + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":124,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_ADDRESS + PersonBuilder.DEFAULT_ADDRESS + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":125,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_EMAIL + PersonBuilder.DEFAULT_EMAIL + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":126,"author":{"gitId":"czhongwei"},"content":"                        + CliSyntax.PREFIX_BIRTHDAY + PersonBuilder.DEFAULT_BIRTHDAY + \" \"","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_TAG + tagName)","lastModifiedDate":"2022-10-24"},{"lineNumber":128,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":129,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":130,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddNoteCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":131,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TITLE + NoteBuilder.DEFAULT_TITLE + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":132,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_CONTENT + NoteBuilder.DEFAULT_CONTENT + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":133,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TAG + tagName)","lastModifiedDate":"2022-10-24"},{"lineNumber":134,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":135,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":136,"author":{"gitId":"ryanczx"},"content":"        assertTrue(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-24"},{"lineNumber":137,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":138,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new EditNoteCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":139,"author":{"gitId":"ryanczx"},"content":"                        + \"1\" + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":140,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TAG + \" \")","lastModifiedDate":"2022-10-24"},{"lineNumber":141,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":142,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":143,"author":{"gitId":"ryanczx"},"content":"        assertTrue(model.getTagMapping().containsKey(tagName));","lastModifiedDate":"2022-10-24"},{"lineNumber":144,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":145,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":146,"author":{"gitId":"ryanczx"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"czhongwei":2,"ryanczx":144}},{"path":"src/test/java/seedu/address/logic/commands/FindTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"ryanczx"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"ryanczx"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"ryanczx"},"content":"import seedu.address.logic.parser.AddNoteCommandParser;","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"ryanczx"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.note.Content;","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.note.NoteTagsContainsKeywordsPredicate;","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.note.Title;","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.person.PersonTagsContainsKeywordsPredicate;","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"public class FindTagCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"    public void equals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"ryanczx"},"content":"        PersonTagsContainsKeywordsPredicate firstPersonPredicate \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"ryanczx"},"content":"                new PersonTagsContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"ryanczx"},"content":"        PersonTagsContainsKeywordsPredicate secondPersonPredicate \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"ryanczx"},"content":"                new PersonTagsContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"ryanczx"},"content":"        NoteTagsContainsKeywordsPredicate firstNotePredicate \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"ryanczx"},"content":"                new NoteTagsContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"ryanczx"},"content":"        NoteTagsContainsKeywordsPredicate secondNotePredicate \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"ryanczx"},"content":"                new NoteTagsContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"ryanczx"},"content":"        FindTagCommand findTagFirstCommand \u003d new FindTagCommand(firstPersonPredicate, firstNotePredicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"ryanczx"},"content":"        FindTagCommand findTagSecondCommand \u003d new FindTagCommand(secondPersonPredicate, secondNotePredicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(findTagFirstCommand.equals(findTagFirstCommand));","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"ryanczx"},"content":"        FindTagCommand findTagFirstCommandCopy \u003d new FindTagCommand(firstPersonPredicate, firstNotePredicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(findTagFirstCommand.equals(findTagFirstCommandCopy));","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(findTagFirstCommand.equals(1));","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(findTagFirstCommand.equals(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(findTagFirstCommand.equals(findTagSecondCommand));","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"ryanczx"},"content":"        PersonTagsContainsKeywordsPredicate personPredicate \u003d preparePersonPredicate(\" \");","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"ryanczx"},"content":"        NoteTagsContainsKeywordsPredicate notePredicate \u003d prepareNotePredicate(\" \");","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"ryanczx"},"content":"        FindTagCommand command \u003d new FindTagCommand(personPredicate, notePredicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"ryanczx"},"content":"        expectedModel.updateFilteredPersonList(personPredicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"ryanczx"},"content":"        expectedModel.updateFilteredNoteList(notePredicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"rui-han-crh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"ryanczx"},"content":"        PersonTagsContainsKeywordsPredicate personPredicate \u003d preparePersonPredicate(\"friends owesMoney\");","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"ryanczx"},"content":"        NoteTagsContainsKeywordsPredicate notePredicate \u003d prepareNotePredicate(\"friends owesMoney\");","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"ryanczx"},"content":"        FindTagCommand command \u003d new FindTagCommand(personPredicate, notePredicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"ryanczx"},"content":"        expectedModel.updateFilteredPersonList(personPredicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"ryanczx"},"content":"        expectedModel.updateFilteredNoteList(notePredicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"rui-han-crh"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"ryanczx"},"content":"    public void execute_zeroKeywords_noPersonOrNoteFound() {","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"ryanczx"},"content":"        String noteTitle \u003d \"Club meeting soon!\";","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"ryanczx"},"content":"        String noteContent \u003d \"Remind club members to attend meeting.\";","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"ryanczx"},"content":"        String tagName \u003d \"friends\";","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddNoteCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TITLE + noteTitle + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_CONTENT + noteContent + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TAG + tagName)","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"ryanczx"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"ryanczx"},"content":"        PersonTagsContainsKeywordsPredicate personPredicate \u003d preparePersonPredicate(\" \");","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"ryanczx"},"content":"        NoteTagsContainsKeywordsPredicate notePredicate \u003d prepareNotePredicate(\" \");","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"ryanczx"},"content":"        FindTagCommand command \u003d new FindTagCommand(personPredicate, notePredicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":110,"author":{"gitId":"ryanczx"},"content":"        expectedModel.updateFilteredPersonList(personPredicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"ryanczx"},"content":"        expectedModel.updateFilteredNoteList(notePredicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":112,"author":{"gitId":"ryanczx"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":113,"author":{"gitId":"ryanczx"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-10-24"},{"lineNumber":114,"author":{"gitId":"ryanczx"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredNoteList());","lastModifiedDate":"2022-10-24"},{"lineNumber":115,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":118,"author":{"gitId":"ryanczx"},"content":"    public void execute_multipleKeywords_multiplePersonsAndNotesFound() {","lastModifiedDate":"2022-10-24"},{"lineNumber":119,"author":{"gitId":"ryanczx"},"content":"        String noteTitleA \u003d \"Club meeting soon!\";","lastModifiedDate":"2022-10-24"},{"lineNumber":120,"author":{"gitId":"ryanczx"},"content":"        String noteContentA \u003d \"Remind club members to attend meeting.\";","lastModifiedDate":"2022-10-24"},{"lineNumber":121,"author":{"gitId":"ryanczx"},"content":"        String tagNameA \u003d \"friends\";","lastModifiedDate":"2022-10-24"},{"lineNumber":122,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":123,"author":{"gitId":"ryanczx"},"content":"        String noteTitleB \u003d \"T-Shirt payment due\";","lastModifiedDate":"2022-10-24"},{"lineNumber":124,"author":{"gitId":"ryanczx"},"content":"        String noteContentB \u003d \"Collect money\";","lastModifiedDate":"2022-10-24"},{"lineNumber":125,"author":{"gitId":"ryanczx"},"content":"        String tagNameB \u003d \"owesMoney\";","lastModifiedDate":"2022-10-24"},{"lineNumber":126,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":127,"author":{"gitId":"ryanczx"},"content":"        Note noteA \u003d new Note(","lastModifiedDate":"2022-10-24"},{"lineNumber":128,"author":{"gitId":"ryanczx"},"content":"                new Title(noteTitleA),","lastModifiedDate":"2022-10-24"},{"lineNumber":129,"author":{"gitId":"ryanczx"},"content":"                new Content(noteContentA),","lastModifiedDate":"2022-10-24"},{"lineNumber":130,"author":{"gitId":"ryanczx"},"content":"                new HashSet\u003c\u003e(Arrays.asList(new Tag(tagNameA))));","lastModifiedDate":"2022-10-24"},{"lineNumber":131,"author":{"gitId":"ryanczx"},"content":"        Note noteB \u003d new Note(","lastModifiedDate":"2022-10-24"},{"lineNumber":132,"author":{"gitId":"ryanczx"},"content":"                new Title(noteTitleB),","lastModifiedDate":"2022-10-24"},{"lineNumber":133,"author":{"gitId":"ryanczx"},"content":"                new Content(noteContentB),","lastModifiedDate":"2022-10-24"},{"lineNumber":134,"author":{"gitId":"ryanczx"},"content":"                new HashSet\u003c\u003e(Arrays.asList(new Tag(tagNameB))));","lastModifiedDate":"2022-10-24"},{"lineNumber":135,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":136,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddNoteCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":137,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TITLE + noteTitleA + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":138,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_CONTENT + noteContentA + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":139,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TAG + tagNameA)","lastModifiedDate":"2022-10-24"},{"lineNumber":140,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":141,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":142,"author":{"gitId":"ryanczx"},"content":"        assertAll(() -\u003e new AddNoteCommandParser(model).parse(\" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":143,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TITLE + noteTitleB + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":144,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_CONTENT + noteContentB + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":145,"author":{"gitId":"ryanczx"},"content":"                        + CliSyntax.PREFIX_NOTES_TAG + tagNameB)","lastModifiedDate":"2022-10-24"},{"lineNumber":146,"author":{"gitId":"ryanczx"},"content":"                .execute(model));","lastModifiedDate":"2022-10-24"},{"lineNumber":147,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":148,"author":{"gitId":"ryanczx"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-24"},{"lineNumber":149,"author":{"gitId":"ryanczx"},"content":"        PersonTagsContainsKeywordsPredicate personPredicate \u003d preparePersonPredicate(\"friends owesMoney\");","lastModifiedDate":"2022-10-24"},{"lineNumber":150,"author":{"gitId":"ryanczx"},"content":"        NoteTagsContainsKeywordsPredicate notePredicate \u003d prepareNotePredicate(\"friends owesMoney\");","lastModifiedDate":"2022-10-24"},{"lineNumber":151,"author":{"gitId":"ryanczx"},"content":"        FindTagCommand command \u003d new FindTagCommand(personPredicate, notePredicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":152,"author":{"gitId":"ryanczx"},"content":"        expectedModel.updateFilteredPersonList(personPredicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":153,"author":{"gitId":"ryanczx"},"content":"        expectedModel.updateFilteredNoteList(notePredicate);","lastModifiedDate":"2022-10-24"},{"lineNumber":154,"author":{"gitId":"ryanczx"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":155,"author":{"gitId":"ryanczx"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2022-10-24"},{"lineNumber":156,"author":{"gitId":"ryanczx"},"content":"        assertEquals(Arrays.asList(noteA, noteB), model.getFilteredNoteList());","lastModifiedDate":"2022-10-24"},{"lineNumber":157,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":158,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":159,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"ryanczx"},"content":"     * Parses {@code userInput} into a {@code PersonTagsContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-24"},{"lineNumber":161,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"ryanczx"},"content":"    private PersonTagsContainsKeywordsPredicate preparePersonPredicate(String userInput) {","lastModifiedDate":"2022-10-24"},{"lineNumber":163,"author":{"gitId":"ryanczx"},"content":"        return new PersonTagsContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-24"},{"lineNumber":164,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":166,"author":{"gitId":"ryanczx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":167,"author":{"gitId":"ryanczx"},"content":"     * Parses {@code userInput} into a {@code NoteTagsContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-24"},{"lineNumber":168,"author":{"gitId":"ryanczx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":169,"author":{"gitId":"ryanczx"},"content":"    private NoteTagsContainsKeywordsPredicate prepareNotePredicate(String userInput) {","lastModifiedDate":"2022-10-24"},{"lineNumber":170,"author":{"gitId":"ryanczx"},"content":"        return new NoteTagsContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-24"},{"lineNumber":171,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":172,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ryanczx":106,"rui-han-crh":66}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"czhongwei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"czhongwei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"czhongwei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BIRTHDAY_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"czhongwei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"czhongwei"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"    private AddCommandParser parser \u003d new AddCommandParser(model);","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"czhongwei"},"content":"                + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"czhongwei"},"content":"                + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"czhongwei"},"content":"                + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"czhongwei"},"content":"                + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"czhongwei"},"content":"                + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"czhongwei"},"content":"        // multiple birthdays - last birthday accepted","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"czhongwei"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"czhongwei"},"content":"                + BIRTHDAY_DESC_AMY + BIRTHDAY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"czhongwei"},"content":"                + BIRTHDAY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":93,"author":{"gitId":"czhongwei"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"czhongwei"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + BIRTHDAY_DESC_AMY,","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"czhongwei"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"czhongwei"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"czhongwei"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"czhongwei"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"czhongwei"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"czhongwei"},"content":"                        + VALID_EMAIL_BOB + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"czhongwei"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"czhongwei"},"content":"                        + EMAIL_DESC_BOB + VALID_ADDRESS_BOB + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"czhongwei"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":122,"author":{"gitId":"czhongwei"},"content":"        // missing birthday prefix","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"czhongwei"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"czhongwei"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + VALID_BIRTHDAY_BOB,","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"czhongwei"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"czhongwei"},"content":"                        + VALID_EMAIL_BOB + VALID_ADDRESS_BOB + VALID_BIRTHDAY_BOB,","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"czhongwei"},"content":"                + BIRTHDAY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"czhongwei"},"content":"                + BIRTHDAY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":145,"author":{"gitId":"czhongwei"},"content":"                + BIRTHDAY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":149,"author":{"gitId":"czhongwei"},"content":"                + BIRTHDAY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"czhongwei"},"content":"        // invalid birthday","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"czhongwei"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":153,"author":{"gitId":"czhongwei"},"content":"                + INVALID_BIRTHDAY_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":157,"author":{"gitId":"czhongwei"},"content":"                + BIRTHDAY_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"czhongwei"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-10-26"},{"lineNumber":161,"author":{"gitId":"czhongwei"},"content":"                + BIRTHDAY_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":165,"author":{"gitId":"czhongwei"},"content":"                + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"czhongwei":44,"rui-han-crh":4,"-":120}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"Neethesh26"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Neethesh26"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"Neethesh26"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"Neethesh26"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person), model);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"Neethesh26"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD, model) instanceof ClearCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\", model)","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"                instanceof ClearCommand);","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"Neethesh26"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased(), model);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"Neethesh26"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor),","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"Neethesh26"},"content":"                model);","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"Neethesh26"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD, model) instanceof ExitCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"Neethesh26"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\", model) instanceof ExitCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"            FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")),","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"            model);","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"Neethesh26"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD, model) instanceof HelpCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"Neethesh26"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\", model) instanceof HelpCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"Neethesh26"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD, model) instanceof ListCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"Neethesh26"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\", model) instanceof ListCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"Neethesh26"},"content":"            -\u003e parser.parseCommand(\"\", model));","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"rui-han-crh"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND,","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"rui-han-crh"},"content":"                //CHECKSTYLE.OFF: SeparatorWrap","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"rui-han-crh"},"content":"                () -\u003e parser.parseCommand(\"unknownCommand\", model));","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Neethesh26":15,"rui-han-crh":8,"-":87}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"Neethesh26"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"Neethesh26"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser(new ModelManager());","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Neethesh26":2,"-":24}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"czhongwei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"czhongwei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"czhongwei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BIRTHDAY_DESC;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"czhongwei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"czhongwei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"czhongwei"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"    private EditCommandParser parser \u003d new EditCommandParser(new ModelManager());","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"czhongwei"},"content":"        assertParseFailure(parser, \"1\" + INVALID_BIRTHDAY_DESC, Birthday.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"czhongwei"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY","lastModifiedDate":"2022-10-26"},{"lineNumber":113,"author":{"gitId":"czhongwei"},"content":"                + VALID_PHONE_AMY + VALID_ADDRESS_AMY,","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":121,"author":{"gitId":"czhongwei"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + BIRTHDAY_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"czhongwei"},"content":"                .withBirthday(VALID_BIRTHDAY_AMY)","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"czhongwei"},"content":"        // birthday","lastModifiedDate":"2022-10-26"},{"lineNumber":172,"author":{"gitId":"czhongwei"},"content":"        userInput \u003d targetIndex.getOneBased() + BIRTHDAY_DESC_AMY;","lastModifiedDate":"2022-10-26"},{"lineNumber":173,"author":{"gitId":"czhongwei"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withBirthday(VALID_BIRTHDAY_AMY).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":174,"author":{"gitId":"czhongwei"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"czhongwei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"czhongwei"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + BIRTHDAY_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-26"},{"lineNumber":189,"author":{"gitId":"czhongwei"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_BOB + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-26"},{"lineNumber":190,"author":{"gitId":"czhongwei"},"content":"                + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"czhongwei"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withBirthday(VALID_BIRTHDAY_BOB)","lastModifiedDate":"2022-10-26"},{"lineNumber":194,"author":{"gitId":"czhongwei"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":212,"author":{"gitId":"czhongwei"},"content":"                + PHONE_DESC_BOB + BIRTHDAY_DESC_BOB;","lastModifiedDate":"2022-10-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"czhongwei"},"content":"                .withAddress(VALID_ADDRESS_BOB).withBirthday(VALID_BIRTHDAY_BOB).build();","lastModifiedDate":"2022-10-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"czhongwei":24,"rui-han-crh":2,"-":203}},{"path":"src/test/java/seedu/address/logic/parser/FindTagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.logic.commands.FindTagCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.note.NoteTagsContainsKeywordsPredicate;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.person.PersonTagsContainsKeywordsPredicate;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"public class FindTagCommandParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"    private FindTagCommandParser parser \u003d new FindTagCommandParser();","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"    public void parse_validArgs_returnsFindTagCommand() {","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"        FindTagCommand expectedFindTagCommand \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"ryanczx"},"content":"                new FindTagCommand(new PersonTagsContainsKeywordsPredicate(Arrays.asList(\"Tech\", \"Finance\")),","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"ryanczx"},"content":"                        new NoteTagsContainsKeywordsPredicate(Arrays.asList(\"Tech\", \"Finance\")));","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"        assertParseSuccess(parser, \"Tech Finance\", expectedFindTagCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"        assertParseSuccess(parser, \" \\n Tech \\n \\t Finance  \\t\", expectedFindTagCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ryanczx":4,"rui-han-crh":33}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"czhongwei"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"czhongwei"},"content":"    private static final String INVALID_BIRTHDAY \u003d \"75435\";","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"czhongwei"},"content":"    private static final String VALID_BIRTHDAY \u003d \"01/01/2000\";","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"czhongwei"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":157,"author":{"gitId":"czhongwei"},"content":"    public void parseBirthday_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":158,"author":{"gitId":"czhongwei"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseBirthday((String) null));","lastModifiedDate":"2022-10-26"},{"lineNumber":159,"author":{"gitId":"czhongwei"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":160,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":161,"author":{"gitId":"czhongwei"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":162,"author":{"gitId":"czhongwei"},"content":"    public void parseBirthday_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":163,"author":{"gitId":"czhongwei"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBirthday(INVALID_BIRTHDAY));","lastModifiedDate":"2022-10-26"},{"lineNumber":164,"author":{"gitId":"czhongwei"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":165,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"czhongwei"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"czhongwei"},"content":"    public void parseBirthday_validValueWithoutWhitespace_returnsBirthday() throws Exception {","lastModifiedDate":"2022-10-26"},{"lineNumber":168,"author":{"gitId":"czhongwei"},"content":"        Birthday expectedBirthday \u003d new Birthday(VALID_BIRTHDAY);","lastModifiedDate":"2022-10-26"},{"lineNumber":169,"author":{"gitId":"czhongwei"},"content":"        assertEquals(expectedBirthday, ParserUtil.parseBirthday(VALID_BIRTHDAY));","lastModifiedDate":"2022-10-26"},{"lineNumber":170,"author":{"gitId":"czhongwei"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":171,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":172,"author":{"gitId":"czhongwei"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":173,"author":{"gitId":"czhongwei"},"content":"    public void parseBirthday_validValueWithWhitespace_returnsTrimmedBirthday() throws Exception {","lastModifiedDate":"2022-10-26"},{"lineNumber":174,"author":{"gitId":"czhongwei"},"content":"        String birthdayWithWhitespace \u003d WHITESPACE + VALID_BIRTHDAY + WHITESPACE;","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"czhongwei"},"content":"        Birthday expectedBirthday \u003d new Birthday(VALID_BIRTHDAY);","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"czhongwei"},"content":"        assertEquals(expectedBirthday, ParserUtil.parseBirthday(birthdayWithWhitespace));","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"czhongwei"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"rui-han-crh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null, new ModelManager()));","lastModifiedDate":"2022-10-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"rui-han-crh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG, new ModelManager()));","lastModifiedDate":"2022-10-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"rui-han-crh"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-14"},{"lineNumber":193,"author":{"gitId":"rui-han-crh"},"content":"        model.addTag(expectedTag);","lastModifiedDate":"2022-10-14"},{"lineNumber":194,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":195,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1, model));","lastModifiedDate":"2022-10-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"rui-han-crh"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-14"},{"lineNumber":203,"author":{"gitId":"rui-han-crh"},"content":"        model.addTag(expectedTag);","lastModifiedDate":"2022-10-14"},{"lineNumber":204,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":205,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace, model));","lastModifiedDate":"2022-10-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":210,"author":{"gitId":"rui-han-crh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null, new ModelManager()));","lastModifiedDate":"2022-10-14"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":215,"author":{"gitId":"rui-han-crh"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2022-10-14"},{"lineNumber":216,"author":{"gitId":"rui-han-crh"},"content":"                // CHECKSTYLE.OFF: SeparatorWrap","lastModifiedDate":"2022-10-14"},{"lineNumber":217,"author":{"gitId":"rui-han-crh"},"content":"                () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG), new ModelManager()));","lastModifiedDate":"2022-10-14"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList(), new ModelManager()).isEmpty());","lastModifiedDate":"2022-10-14"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":227,"author":{"gitId":"rui-han-crh"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-14"},{"lineNumber":228,"author":{"gitId":"rui-han-crh"},"content":"        model.addTag(new Tag(VALID_TAG_1));","lastModifiedDate":"2022-10-14"},{"lineNumber":229,"author":{"gitId":"rui-han-crh"},"content":"        model.addTag(new Tag(VALID_TAG_2));","lastModifiedDate":"2022-10-14"},{"lineNumber":230,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":231,"author":{"gitId":"rui-han-crh"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2), model);","lastModifiedDate":"2022-10-14"},{"lineNumber":232,"author":{"gitId":"rui-han-crh"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2022-10-14"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"czhongwei":26,"rui-han-crh":23,"-":187}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"Pinran-J"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"Pinran-J"},"content":"        private final ObservableList\u003cNote\u003e notes \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"rui-han-crh"},"content":"        private final ObservableMap\u003cString, Tag\u003e tags \u003d FXCollections.observableHashMap();","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"Pinran-J"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"Pinran-J"},"content":"        public ObservableList\u003cNote\u003e getNoteBook() {","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"Pinran-J"},"content":"            return notes;","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"Pinran-J"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"Pinran-J"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"rui-han-crh"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"rui-han-crh"},"content":"        public ObservableMap\u003cString, Tag\u003e getTagMapping() {","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"rui-han-crh"},"content":"            return tags;","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"rui-han-crh":7,"Pinran-J":8,"-":102}},{"path":"src/test/java/seedu/address/model/note/NoteTagsContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanczx"},"content":"package seedu.address.model.note;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"ryanczx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"ryanczx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"ryanczx"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"ryanczx"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"ryanczx"},"content":"import java.util.List;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"ryanczx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"ryanczx"},"content":"import seedu.address.testutil.NoteBuilder;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"ryanczx"},"content":"public class NoteTagsContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"ryanczx"},"content":"    public void equals() {","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"ryanczx"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"ryanczx"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"ryanczx"},"content":"        NoteTagsContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"ryanczx"},"content":"                new NoteTagsContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"ryanczx"},"content":"        NoteTagsContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"ryanczx"},"content":"                new NoteTagsContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"ryanczx"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"ryanczx"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"ryanczx"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"ryanczx"},"content":"        NoteTagsContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"ryanczx"},"content":"                new NoteTagsContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"ryanczx"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"ryanczx"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"ryanczx"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"ryanczx"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"ryanczx"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"ryanczx"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"ryanczx"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"ryanczx"},"content":"    public void test_tagsContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"ryanczx"},"content":"        // One keyword","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"ryanczx"},"content":"        NoteTagsContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"ryanczx"},"content":"                new NoteTagsContainsKeywordsPredicate(Collections.singletonList(\"Tech\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"ryanczx"},"content":"        assertTrue(predicate.test(new NoteBuilder().withTags(\"Tech\").build()));","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"ryanczx"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"ryanczx"},"content":"        predicate \u003d new NoteTagsContainsKeywordsPredicate(Arrays.asList(\"Tech\", \"Finance\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"ryanczx"},"content":"        assertTrue(predicate.test(new NoteBuilder().withTags(\"Tech\").build()));","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"ryanczx"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"ryanczx"},"content":"        predicate \u003d new NoteTagsContainsKeywordsPredicate(Arrays.asList(\"Finance\", \"Operations\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"ryanczx"},"content":"        assertTrue(predicate.test(new NoteBuilder().withTags(\"Finance\").build()));","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"ryanczx"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"ryanczx"},"content":"        predicate \u003d new NoteTagsContainsKeywordsPredicate(Arrays.asList(\"TeCh\", \"fINANce\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"ryanczx"},"content":"        assertTrue(predicate.test(new NoteBuilder().withTags(\"Finance\").build()));","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"ryanczx"},"content":"        // Multiple tags","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"ryanczx"},"content":"        predicate \u003d new NoteTagsContainsKeywordsPredicate(Arrays.asList(\"Operations\", \"Tech\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"ryanczx"},"content":"        assertTrue(predicate.test(new NoteBuilder().withTags(\"Finance\", \"Operations\", \"Tech\").build()));","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"ryanczx"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"ryanczx"},"content":"    public void test_tagsDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"ryanczx"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"ryanczx"},"content":"        NoteTagsContainsKeywordsPredicate predicate \u003d new NoteTagsContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"ryanczx"},"content":"        assertFalse(predicate.test(new NoteBuilder().withTags(\"Tech\").build()));","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"ryanczx"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"ryanczx"},"content":"        predicate \u003d new NoteTagsContainsKeywordsPredicate(Arrays.asList(\"Operations\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"ryanczx"},"content":"        assertFalse(predicate.test(new NoteBuilder().withTags(\"Tech\").build()));","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"ryanczx"},"content":"        // Keywords match title and content, but do not match any tags","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"ryanczx"},"content":"        predicate \u003d new NoteTagsContainsKeywordsPredicate(Arrays.asList(\"Event\", \"Party\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"ryanczx"},"content":"        assertFalse(predicate.test(new NoteBuilder().withTitle(\"Event\").withContent(\"Party\")","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"ryanczx"},"content":"                .withTags(\"People\").build()));","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"ryanczx"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"ryanczx":82}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotSame;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"    public void deepCopy_copyNotSameButEqual() {","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"        Address address \u003d new Address(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\");","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"        Address deepCopy \u003d address.deepCopy();","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"        assertNotSame(address, deepCopy);","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(address, deepCopy);","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"rui-han-crh":10,"-":36}},{"path":"src/test/java/seedu/address/model/person/BirthdayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"czhongwei"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"czhongwei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"czhongwei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"czhongwei"},"content":"import static org.junit.jupiter.api.Assertions.assertNotSame;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"czhongwei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"czhongwei"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"czhongwei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"czhongwei"},"content":"public class BirthdayTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"czhongwei"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"czhongwei"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"czhongwei"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Birthday(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"czhongwei"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"czhongwei"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"czhongwei"},"content":"    public void constructor_invalidBirthday_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"czhongwei"},"content":"        String invalidBirthday \u003d \"\";","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"czhongwei"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidBirthday));","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"czhongwei"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"czhongwei"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"czhongwei"},"content":"    public void isValidBirthday() {","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"czhongwei"},"content":"        // null address","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"czhongwei"},"content":"        assertThrows(NullPointerException.class, () -\u003e Birthday.isValidBirthday(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"czhongwei"},"content":"        // invalid addresses","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"czhongwei"},"content":"        assertFalse(Birthday.isValidBirthday(\"\")); // empty string","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"czhongwei"},"content":"        assertFalse(Birthday.isValidBirthday(\" \")); // spaces only","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"czhongwei"},"content":"        assertFalse(Birthday.isValidBirthday(\"00/01/2000\")); // Boundary case for start of month","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"czhongwei"},"content":"        assertFalse(Birthday.isValidBirthday(\"32/05/2000\")); // Boundary case at end of month","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"czhongwei"},"content":"        assertFalse(Birthday.isValidBirthday(\"01/00/2000\")); // Boundary case for start of year","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"czhongwei"},"content":"        assertFalse(Birthday.isValidBirthday(\"01/13/2000\")); // Boundary case for end of year","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"czhongwei"},"content":"        assertFalse(Birthday.isValidBirthday(\"01/01/19999\")); // invalid year only","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"czhongwei"},"content":"        assertFalse(Birthday.isValidBirthday(\"1/01/2000\")); // day field not long enough","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"czhongwei"},"content":"        assertFalse(Birthday.isValidBirthday(\"01/6/2000\")); // day field not long enough","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"czhongwei"},"content":"        assertFalse(Birthday.isValidBirthday(\"29/02/2001\")); // 29th February on a non-leap year","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"czhongwei"},"content":"        assertFalse(Birthday.isValidBirthday(\"31/06/2000\")); // day that does not exist","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"czhongwei"},"content":"        // valid addresses","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"czhongwei"},"content":"        assertTrue(Birthday.isValidBirthday(\"15/06/2000\")); // Normal date","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"czhongwei"},"content":"        assertTrue(Birthday.isValidBirthday(\"01/01/2000\")); // Boundary case for start of month","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"czhongwei"},"content":"        assertTrue(Birthday.isValidBirthday(\"30/06/2000\")); // Boundary case for end of month","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"czhongwei"},"content":"        assertTrue(Birthday.isValidBirthday(\"29/02/2000\")); // 29th February on a leap year","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"czhongwei"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"czhongwei"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"czhongwei"},"content":"    public void deepCopy_copyNotSameButEqual() {","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"czhongwei"},"content":"        Birthday birthday \u003d new Birthday(\"01/01/2000\");","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"czhongwei"},"content":"        Birthday deepCopy \u003d birthday.deepCopy();","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"czhongwei"},"content":"        assertNotSame(birthday, deepCopy);","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"czhongwei"},"content":"        assertEquals(birthday, deepCopy);","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"czhongwei"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"czhongwei"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"czhongwei":59}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotSame;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"    public void deepCopy_copyNotSameButEqual() {","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"        Email email \u003d new Email(\"e1234567@u.nus.edu\");","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"        Email deepCopy \u003d email.deepCopy();","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"        assertNotSame(email, deepCopy);","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(email, deepCopy);","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"rui-han-crh":10,"-":68}},{"path":"src/test/java/seedu/address/model/person/LoanTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotSame;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"public class LoanTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Loan(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"    public void constructor_invalidLoan_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"        String invalidLoan \u003d \"\";","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Loan(invalidLoan));","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"    public void isValidLoan() {","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"        // null loan","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"        assertThrows(NullPointerException.class, () -\u003e Loan.isValidLoan(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"        // invalid loan strings","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(Loan.isValidLoan(\"\")); // empty string","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(Loan.isValidLoan(\" \")); // spaces only","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(Loan.isValidLoan(\"^\u002692\")); // unacceptable symbols","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(Loan.isValidLoan(\"loan\")); // non-numeric","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(Loan.isValidLoan(\"9p0\")); // alphabets within digits","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(Loan.isValidLoan(\"2 4\")); // spaces within digits","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(Loan.isValidLoan(\"2 4\")); // spaces within digits","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(Loan.isValidLoan(\"2$4\")); // dollar sign in the middle","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"        // valid phone numbers","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(Loan.isValidLoan(\"-12\")); // negative numbers","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(Loan.isValidLoan(\"-10.57\")); // negative numbers with decimal point","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(Loan.isValidLoan(\"12\")); // positive numbers","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(Loan.isValidLoan(\"11.88\")); // positive numbers with decimal point","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(Loan.isValidLoan(\"11.882399123\")); // very precise decimal point","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(Loan.isValidLoan(\"19946024893\")); // large positive number","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(Loan.isValidLoan(\"-19946024893\")); // large negative number","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(Loan.isValidLoan(\"-$190\")); // dollar sign gets parsed out","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(Loan.isValidLoan(\"$53\")); // dollar sign gets parsed out","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(Loan.isValidLoan(\"53$\")); // dollar sign gets parsed out","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"    public void deepCopy_copyNotSameButEqual() {","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"        Loan loan \u003d new Loan(\"309\");","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"        Loan deepCopy \u003d loan.deepCopy();","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"        assertNotSame(loan, deepCopy);","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(loan, deepCopy);","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"rui-han-crh":59}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"czhongwei"},"content":"        // Matching phone number","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"czhongwei"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"123\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"czhongwei"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"czhongwei"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"czhongwei"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"123456789\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"czhongwei"},"content":"        // Non-matching keywords","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"czhongwei"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\", \"123\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"czhongwei"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").withPhone(\"456789\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"czhongwei"},"content":"        // Keywords match email and address, but does not match name or phone","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"czhongwei"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"czhongwei":11,"-":69}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotSame;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"    public void deepCopy_copyNotSameButEqual() {","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"        Name name \u003d new Name(\"Capital Tan\");","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"        Name deepCopy \u003d name.deepCopy();","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"        assertNotSame(name, deepCopy);","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(name, deepCopy);","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"rui-han-crh":10,"-":40}},{"path":"src/test/java/seedu/address/model/person/PersonTagsContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"ryanczx"},"content":"public class PersonTagsContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"    public void equals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"ryanczx"},"content":"        PersonTagsContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"ryanczx"},"content":"                new PersonTagsContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"ryanczx"},"content":"        PersonTagsContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"ryanczx"},"content":"                new PersonTagsContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"ryanczx"},"content":"        PersonTagsContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"ryanczx"},"content":"                new PersonTagsContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"    public void test_tagsContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"        // One keyword","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"ryanczx"},"content":"        PersonTagsContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"ryanczx"},"content":"                new PersonTagsContainsKeywordsPredicate(Collections.singletonList(\"Tech\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Tech\").build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"ryanczx"},"content":"        predicate \u003d new PersonTagsContainsKeywordsPredicate(Arrays.asList(\"Tech\", \"Finance\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Tech\").build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"ryanczx"},"content":"        predicate \u003d new PersonTagsContainsKeywordsPredicate(Arrays.asList(\"Finance\", \"Operations\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Finance\").build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"ryanczx"},"content":"        predicate \u003d new PersonTagsContainsKeywordsPredicate(Arrays.asList(\"TeCh\", \"fINANce\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Finance\").build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"        // Multiple tags","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"ryanczx"},"content":"        predicate \u003d new PersonTagsContainsKeywordsPredicate(Arrays.asList(\"Operations\", \"Tech\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Finance\", \"Operations\", \"Tech\").build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"    public void test_tagsDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"ryanczx"},"content":"        PersonTagsContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"ryanczx"},"content":"                new PersonTagsContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"Tech\").build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"ryanczx"},"content":"        predicate \u003d new PersonTagsContainsKeywordsPredicate(Arrays.asList(\"Operations\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"Tech\").build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"        // Keywords match phone, email and address, but do not match any tags","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"ryanczx"},"content":"        predicate \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"ryanczx"},"content":"                new PersonTagsContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withTags(\"Tech\").build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ryanczx":18,"rui-han-crh":66}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotSame;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertSame;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"import java.lang.reflect.Field;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"rui-han-crh"},"content":"    public void deepCopy_notSameButEqual() {","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"rui-han-crh"},"content":"        String tagName \u003d \"House\";","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"rui-han-crh"},"content":"        Person personA \u003d new PersonBuilder().withName(\"PersonA\").withTags(tagName).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"rui-han-crh"},"content":"        Person deepCopy \u003d personA.deepCopy();","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"rui-han-crh"},"content":"        assertNotSame(personA, deepCopy);","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(personA, deepCopy);","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"rui-han-crh"},"content":"    public void deepCopy_tagsCopiedNotSame() {","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"rui-han-crh"},"content":"        String tagName \u003d \"House\";","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"rui-han-crh"},"content":"        Tag tag \u003d new Tag(tagName);","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"rui-han-crh"},"content":"        Person personA \u003d new Person(","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"rui-han-crh"},"content":"                new Name(\"PersonA\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"rui-han-crh"},"content":"                new Phone(PersonBuilder.DEFAULT_PHONE),","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"rui-han-crh"},"content":"                new Email(PersonBuilder.DEFAULT_EMAIL),","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"rui-han-crh"},"content":"                new Address(PersonBuilder.DEFAULT_ADDRESS),","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"czhongwei"},"content":"                new Birthday(PersonBuilder.DEFAULT_BIRTHDAY),","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"rui-han-crh"},"content":"                Set.of(tag),","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"rui-han-crh"},"content":"                new Loan(PersonBuilder.DEFAULT_LOAN));","lastModifiedDate":"2022-10-15"},{"lineNumber":123,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":124,"author":{"gitId":"rui-han-crh"},"content":"        tag.addPerson(personA);","lastModifiedDate":"2022-10-15"},{"lineNumber":125,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":126,"author":{"gitId":"rui-han-crh"},"content":"        Person deepCopy \u003d personA.deepCopy();","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(1, personA.getTags().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(1, deepCopy.getTags().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":130,"author":{"gitId":"rui-han-crh"},"content":"        assertNotSame(personA.getTags().toArray()[0], deepCopy.getTags().toArray()[0]);","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(personA.getTags().toArray()[0], deepCopy.getTags().toArray()[0]);","lastModifiedDate":"2022-10-15"},{"lineNumber":132,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":133,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":134,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":135,"author":{"gitId":"rui-han-crh"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-10-15"},{"lineNumber":136,"author":{"gitId":"rui-han-crh"},"content":"    public void deepCopy_tagsCopiedPointToOtherSamePerson() {","lastModifiedDate":"2022-10-15"},{"lineNumber":137,"author":{"gitId":"rui-han-crh"},"content":"        String tagName \u003d \"House\";","lastModifiedDate":"2022-10-15"},{"lineNumber":138,"author":{"gitId":"rui-han-crh"},"content":"        Tag tag \u003d new Tag(tagName);","lastModifiedDate":"2022-10-15"},{"lineNumber":139,"author":{"gitId":"rui-han-crh"},"content":"        Set\u003cTag\u003e tagSet \u003d Set.of(tag);","lastModifiedDate":"2022-10-15"},{"lineNumber":140,"author":{"gitId":"rui-han-crh"},"content":"        Person personA \u003d new Person(","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"rui-han-crh"},"content":"                new Name(\"PersonA\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"rui-han-crh"},"content":"                new Phone(PersonBuilder.DEFAULT_PHONE),","lastModifiedDate":"2022-10-15"},{"lineNumber":143,"author":{"gitId":"rui-han-crh"},"content":"                new Email(PersonBuilder.DEFAULT_EMAIL),","lastModifiedDate":"2022-10-15"},{"lineNumber":144,"author":{"gitId":"rui-han-crh"},"content":"                new Address(PersonBuilder.DEFAULT_ADDRESS),","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"czhongwei"},"content":"                new Birthday(PersonBuilder.DEFAULT_BIRTHDAY),","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"rui-han-crh"},"content":"                tagSet,","lastModifiedDate":"2022-10-15"},{"lineNumber":147,"author":{"gitId":"rui-han-crh"},"content":"                new Loan(PersonBuilder.DEFAULT_LOAN));","lastModifiedDate":"2022-10-15"},{"lineNumber":148,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":149,"author":{"gitId":"rui-han-crh"},"content":"        Person personB \u003d new Person(","lastModifiedDate":"2022-10-15"},{"lineNumber":150,"author":{"gitId":"rui-han-crh"},"content":"                new Name(\"PersonB\"),","lastModifiedDate":"2022-10-15"},{"lineNumber":151,"author":{"gitId":"rui-han-crh"},"content":"                new Phone(PersonBuilder.DEFAULT_PHONE),","lastModifiedDate":"2022-10-15"},{"lineNumber":152,"author":{"gitId":"rui-han-crh"},"content":"                new Email(PersonBuilder.DEFAULT_EMAIL),","lastModifiedDate":"2022-10-15"},{"lineNumber":153,"author":{"gitId":"rui-han-crh"},"content":"                new Address(PersonBuilder.DEFAULT_ADDRESS),","lastModifiedDate":"2022-10-15"},{"lineNumber":154,"author":{"gitId":"czhongwei"},"content":"                new Birthday(PersonBuilder.DEFAULT_BIRTHDAY),","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"rui-han-crh"},"content":"                tagSet,","lastModifiedDate":"2022-10-15"},{"lineNumber":156,"author":{"gitId":"rui-han-crh"},"content":"                new Loan(PersonBuilder.DEFAULT_LOAN));","lastModifiedDate":"2022-10-15"},{"lineNumber":157,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":158,"author":{"gitId":"rui-han-crh"},"content":"        tag.addPerson(personA);","lastModifiedDate":"2022-10-15"},{"lineNumber":159,"author":{"gitId":"rui-han-crh"},"content":"        tag.addPerson(personB);","lastModifiedDate":"2022-10-15"},{"lineNumber":160,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":161,"author":{"gitId":"rui-han-crh"},"content":"        Person deepCopy \u003d personA.deepCopy();","lastModifiedDate":"2022-10-15"},{"lineNumber":162,"author":{"gitId":"rui-han-crh"},"content":"        Tag deepCopyTag \u003d deepCopy.getTags().toArray(Tag[]::new)[0];","lastModifiedDate":"2022-10-15"},{"lineNumber":163,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":164,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(1, personA.getTags().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":165,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(1, deepCopy.getTags().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":166,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":167,"author":{"gitId":"rui-han-crh"},"content":"        // By equality, personA and personB exist","lastModifiedDate":"2022-10-15"},{"lineNumber":168,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(deepCopyTag.getDeepCopiedPersonList().contains(personA));","lastModifiedDate":"2022-10-15"},{"lineNumber":169,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(deepCopyTag.getDeepCopiedPersonList().contains(personB));","lastModifiedDate":"2022-10-15"},{"lineNumber":170,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":171,"author":{"gitId":"rui-han-crh"},"content":"        // for testing purposes, use reflection to set accessibility of a normally hidden field to true","lastModifiedDate":"2022-10-15"},{"lineNumber":172,"author":{"gitId":"rui-han-crh"},"content":"        List\u003cPerson\u003e personList;","lastModifiedDate":"2022-10-15"},{"lineNumber":173,"author":{"gitId":"rui-han-crh"},"content":"        try {","lastModifiedDate":"2022-10-15"},{"lineNumber":174,"author":{"gitId":"rui-han-crh"},"content":"            Field personListField \u003d deepCopyTag.getClass().getDeclaredField(\"personList\");","lastModifiedDate":"2022-10-15"},{"lineNumber":175,"author":{"gitId":"rui-han-crh"},"content":"            personListField.setAccessible(true);","lastModifiedDate":"2022-10-15"},{"lineNumber":176,"author":{"gitId":"rui-han-crh"},"content":"            personList \u003d (List\u003cPerson\u003e) personListField.get(deepCopyTag);","lastModifiedDate":"2022-10-15"},{"lineNumber":177,"author":{"gitId":"rui-han-crh"},"content":"        } catch (NoSuchFieldException | IllegalAccessException e) {","lastModifiedDate":"2022-10-15"},{"lineNumber":178,"author":{"gitId":"rui-han-crh"},"content":"            personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":179,"author":{"gitId":"rui-han-crh"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":180,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":181,"author":{"gitId":"rui-han-crh"},"content":"        // By reference, personB exists, but personA does not exist and is","lastModifiedDate":"2022-10-15"},{"lineNumber":182,"author":{"gitId":"rui-han-crh"},"content":"        // instead replaced by deepCopy","lastModifiedDate":"2022-10-15"},{"lineNumber":183,"author":{"gitId":"rui-han-crh"},"content":"        assertSame(personB, personList","lastModifiedDate":"2022-10-15"},{"lineNumber":184,"author":{"gitId":"rui-han-crh"},"content":"                .stream()","lastModifiedDate":"2022-10-15"},{"lineNumber":185,"author":{"gitId":"rui-han-crh"},"content":"                .filter(p -\u003e p.equals(personB))","lastModifiedDate":"2022-10-15"},{"lineNumber":186,"author":{"gitId":"rui-han-crh"},"content":"                .findFirst()","lastModifiedDate":"2022-10-15"},{"lineNumber":187,"author":{"gitId":"rui-han-crh"},"content":"                .orElseGet(() -\u003e new PersonBuilder().build()));","lastModifiedDate":"2022-10-15"},{"lineNumber":188,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":189,"author":{"gitId":"rui-han-crh"},"content":"        assertNotSame(personA, personList","lastModifiedDate":"2022-10-15"},{"lineNumber":190,"author":{"gitId":"rui-han-crh"},"content":"                .stream()","lastModifiedDate":"2022-10-15"},{"lineNumber":191,"author":{"gitId":"rui-han-crh"},"content":"                .filter(p -\u003e p.equals(personA))","lastModifiedDate":"2022-10-15"},{"lineNumber":192,"author":{"gitId":"rui-han-crh"},"content":"                .findFirst()","lastModifiedDate":"2022-10-15"},{"lineNumber":193,"author":{"gitId":"rui-han-crh"},"content":"                .orElseGet(() -\u003e new PersonBuilder().build()));","lastModifiedDate":"2022-10-15"},{"lineNumber":194,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":195,"author":{"gitId":"rui-han-crh"},"content":"        assertSame(deepCopy, personList","lastModifiedDate":"2022-10-15"},{"lineNumber":196,"author":{"gitId":"rui-han-crh"},"content":"                .stream()","lastModifiedDate":"2022-10-15"},{"lineNumber":197,"author":{"gitId":"rui-han-crh"},"content":"                .filter(p -\u003e p.equals(personA))","lastModifiedDate":"2022-10-15"},{"lineNumber":198,"author":{"gitId":"rui-han-crh"},"content":"                .findFirst()","lastModifiedDate":"2022-10-15"},{"lineNumber":199,"author":{"gitId":"rui-han-crh"},"content":"                .orElseGet(() -\u003e new PersonBuilder().build()));","lastModifiedDate":"2022-10-15"},{"lineNumber":200,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"czhongwei":3,"rui-han-crh":107,"-":91}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotSame;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"    public void deepCopy_copyNotSameButEqual() {","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"        Phone phone \u003d new Phone(\"93121534\");","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"        Phone deepCopy \u003d phone.deepCopy();","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"        assertNotSame(phone, deepCopy);","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(phone, deepCopy);","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"rui-han-crh":10,"-":40}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":171,"author":{"gitId":"rui-han-crh"},"content":"        UniquePersonList anotherUniqueList \u003d new UniquePersonList();","lastModifiedDate":"2022-10-14"},{"lineNumber":172,"author":{"gitId":"rui-han-crh"},"content":"        anotherUniqueList.add(","lastModifiedDate":"2022-10-14"},{"lineNumber":173,"author":{"gitId":"rui-han-crh"},"content":"                new Person(new Name(\"A\"),","lastModifiedDate":"2022-10-14"},{"lineNumber":174,"author":{"gitId":"rui-han-crh"},"content":"                        new Phone(\"99998888\"),","lastModifiedDate":"2022-10-14"},{"lineNumber":175,"author":{"gitId":"rui-han-crh"},"content":"                        new Email(\"abc@fmail.com\"),","lastModifiedDate":"2022-10-14"},{"lineNumber":176,"author":{"gitId":"rui-han-crh"},"content":"                        new Address(\"123 street\"),","lastModifiedDate":"2022-10-14"},{"lineNumber":177,"author":{"gitId":"czhongwei"},"content":"                        new Birthday(\"01/01/2000\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"rui-han-crh"},"content":"                        new HashSet\u003c\u003e(),","lastModifiedDate":"2022-10-14"},{"lineNumber":179,"author":{"gitId":"rui-han-crh"},"content":"                        new Loan(\"0\")","lastModifiedDate":"2022-10-14"},{"lineNumber":180,"author":{"gitId":"rui-han-crh"},"content":"                )","lastModifiedDate":"2022-10-14"},{"lineNumber":181,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-10-14"},{"lineNumber":182,"author":{"gitId":"rui-han-crh"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-14"},{"lineNumber":183,"author":{"gitId":"rui-han-crh"},"content":"                -\u003e anotherUniqueList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"czhongwei":1,"rui-han-crh":14,"-":170}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotSame;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(Tag.isValidTagName(\"abcd\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(Tag.isValidTagName(\"1234\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(Tag.isValidTagName(\"ab34\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(Tag.isValidTagName(\"Vice-President\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(Tag.isValidTagName(\"Vice President\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(Tag.isValidTagName(\"VicePresident\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"    public void shallowCopy_copyNotSameButEqual() {","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"        Tag tag \u003d new Tag(\"Operations\");","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"        Person personA \u003d new PersonBuilder().withName(\"PersonA\").build();","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"        Person personB \u003d new PersonBuilder().withName(\"PersonB\").build();","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"        tag.addPerson(personA);","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"        tag.addPerson(personB);","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"        Tag copy \u003d tag.shallowCopy();","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"        assertNotSame(tag, copy);","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(tag, copy);","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(tag.getDeepCopiedPersonList(), copy.getDeepCopiedPersonList());","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"    public void getUnmodifiableCopiedPersonList_modifyPerson_doesNotMutateOriginalPerson() {","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"        Person personA \u003d new PersonBuilder().withName(\"PersonA\").build();","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"        Tag tag \u003d new Tag(\"Operations\");","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"        tag.addPerson(personA);","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"        Person reference \u003d tag.getDeepCopiedPersonList().get(0);","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(reference, personA);","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"        assertNotSame(reference, personA);","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"        reference.getLoan().increaseLoan(100);","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"        assertNotEquals(personA.getLoan().getAmount(), reference.getLoan().getAmount());","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"rui-han-crh":48,"-":26}},{"path":"src/test/java/seedu/address/model/tag/UniqueTagMappingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rui-han-crh"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"rui-han-crh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"rui-han-crh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"rui-han-crh"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"rui-han-crh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.tag.exceptions.DuplicateTagException;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.tag.exceptions.TagNotFoundException;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"public class UniqueTagMappingTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"rui-han-crh"},"content":"    private final UniqueTagMapping uniqueTagMap \u003d new UniqueTagMapping();","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"rui-han-crh"},"content":"    public void contains_nullTag_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"rui-han-crh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagMap.contains((Tag) null));","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"rui-han-crh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagMap.contains((String) null));","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"rui-han-crh"},"content":"    public void contains_tagNotInList_returnsFalse() {","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(uniqueTagMap.contains(new Tag(\"Operations\")));","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"rui-han-crh"},"content":"    public void contains_tagInList_returnsTrue() {","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"        Tag tag \u003d new Tag(\"Operations\");","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"rui-han-crh"},"content":"        uniqueTagMap.add(tag);","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(uniqueTagMap.contains(tag));","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"rui-han-crh"},"content":"    public void add_nullTag_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagMap.add(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"    public void remove_nullTag_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagMap.remove(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"rui-han-crh"},"content":"    public void remove_tagDoesNotExist_throwsTagNotFoundException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"rui-han-crh"},"content":"        assertThrows(TagNotFoundException.class, () -\u003e uniqueTagMap.remove(new Tag(\"Operations\")));","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"rui-han-crh"},"content":"    public void remove_existingTag_removesTags() {","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"rui-han-crh"},"content":"        uniqueTagMap.add(new Tag(\"Operations\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"rui-han-crh"},"content":"        uniqueTagMap.remove(new Tag(\"Operations\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"rui-han-crh"},"content":"        UniqueTagMapping expectedUniqueTagMapping \u003d new UniqueTagMapping();","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(expectedUniqueTagMapping, uniqueTagMap);","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"rui-han-crh"},"content":"    public void setTags_nullUniqueTagList_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"rui-han-crh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagMap.setTags((UniqueTagMapping) null));","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"rui-han-crh"},"content":"    public void setPersons_uniqueTagList_replacesOwnListWithProvidedUniqueTagList() {","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"rui-han-crh"},"content":"        uniqueTagMap.add(new Tag(\"Operations\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"rui-han-crh"},"content":"        UniqueTagMapping expectedUniqueTagMapping \u003d new UniqueTagMapping();","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"rui-han-crh"},"content":"        expectedUniqueTagMapping.add(new Tag(\"Finance\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"rui-han-crh"},"content":"        uniqueTagMap.setTags(expectedUniqueTagMapping);","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(expectedUniqueTagMapping, uniqueTagMap);","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"rui-han-crh"},"content":"    public void setTags_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"rui-han-crh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTagMap.setTags((HashMap\u003cString, Tag\u003e) null));","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"rui-han-crh"},"content":"    public void setTags_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"rui-han-crh"},"content":"        uniqueTagMap.add(new Tag(\"Operations\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"rui-han-crh"},"content":"        Map\u003cString, Tag\u003e tagList \u003d Collections.singletonMap(\"Finance\", new Tag(\"Finance\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"rui-han-crh"},"content":"        uniqueTagMap.setTags(tagList);","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"rui-han-crh"},"content":"        UniqueTagMapping expectedUniqueTagMapping \u003d new UniqueTagMapping();","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"rui-han-crh"},"content":"        expectedUniqueTagMapping.add(new Tag(\"Finance\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(expectedUniqueTagMapping, uniqueTagMap);","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"rui-han-crh"},"content":"    public void setTags_listWithDuplicateTags_throwsDuplicateTagException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"rui-han-crh"},"content":"        Tag uniqueTag \u003d new Tag(\"Operations\");","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"rui-han-crh"},"content":"        Map\u003cString, Tag\u003e mappingWithDuplicateTags \u003d Map.of(","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"rui-han-crh"},"content":"                \"Op1\", uniqueTag,","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"rui-han-crh"},"content":"                \"Op2\", uniqueTag","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"rui-han-crh"},"content":"        assertThrows(DuplicateTagException.class,","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"rui-han-crh"},"content":"                // CHECKSTYLE.OFF: SeparatorWrap","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"rui-han-crh"},"content":"                () -\u003e uniqueTagMap.setTags(mappingWithDuplicateTags)","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"rui-han-crh"},"content":"        );","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"rui-han-crh"},"content":"    public void addTags_duplicateTagsAdded_doesNotAddAgain() {","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"rui-han-crh"},"content":"        Tag firstTag \u003d new Tag(\"Backstage\");","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"rui-han-crh"},"content":"        Tag secondTag \u003d new Tag(\"Backstage\");","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"rui-han-crh"},"content":"        uniqueTagMap.add(firstTag);","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"rui-han-crh"},"content":"        assertTrue(uniqueTagMap.contains(secondTag));","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"rui-han-crh"},"content":"        int initialCount \u003d uniqueTagMap.asUnmodifiableObservableMap().size();","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"rui-han-crh"},"content":"        uniqueTagMap.add(secondTag);","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(initialCount, uniqueTagMap.asUnmodifiableObservableMap().size());","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"rui-han-crh"},"content":"    public void removeTag_removeByEquivalentTag_removesTagInMapping() {","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"rui-han-crh"},"content":"        Tag firstTag \u003d new Tag(\"Ensemble\");","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"rui-han-crh"},"content":"        Tag secondTag \u003d new Tag(\"Ensemble\");","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"rui-han-crh"},"content":"        int initialCount \u003d uniqueTagMap.asUnmodifiableObservableMap().size();","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"rui-han-crh"},"content":"        uniqueTagMap.add(firstTag);","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"rui-han-crh"},"content":"        uniqueTagMap.remove(secondTag);","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"rui-han-crh"},"content":"        assertEquals(initialCount, uniqueTagMap.asUnmodifiableObservableMap().size());","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(uniqueTagMap.contains(firstTag));","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"rui-han-crh"},"content":"        assertFalse(uniqueTagMap.contains(firstTag.tagName));","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":132,"author":{"gitId":"rui-han-crh"},"content":"    /* TEST REMOVED, ObservableMap::remove is a supported method -- Rui Han","lastModifiedDate":"2022-10-14"},{"lineNumber":133,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"rui-han-crh"},"content":"    public void asUnmodifiableObservableMap_modifyMap_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"rui-han-crh"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"rui-han-crh"},"content":"            -\u003e uniqueTagMap.asUnmodifiableObservableMap().remove(\"0\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"rui-han-crh"},"content":"    */","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"rui-han-crh"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"rui-han-crh":140}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.person.Loan;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"czhongwei"},"content":"    private static final String INVALID_BIRTHDAY \u003d \"2000\";","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"rui-han-crh"},"content":"    private static final String INVALID_LOAN \u003d \"abc\";","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"czhongwei"},"content":"    private static final String VALID_BIRTHDAY \u003d BENSON.getBirthday().toString();","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"rui-han-crh"},"content":"    private static final String VALID_LOAN \u003d BENSON.getLoan().toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"rui-han-crh"},"content":"    private final List\u003cTag\u003e tagList \u003d new ArrayList\u003c\u003e(BENSON.getTags());","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"ryanczx"},"content":"        assertEquals(BENSON, person.toModelType(tagList));","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"czhongwei"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"czhongwei"},"content":"                        VALID_ADDRESS, VALID_BIRTHDAY, VALID_TAGS, VALID_LOAN);","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"ryanczx"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e person.toModelType(tagList));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"rui-han-crh"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"czhongwei"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"czhongwei"},"content":"                        VALID_ADDRESS, VALID_BIRTHDAY, VALID_TAGS, VALID_LOAN);","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"ryanczx"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e person.toModelType(tagList));","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"czhongwei"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"czhongwei"},"content":"                        VALID_ADDRESS, VALID_BIRTHDAY, VALID_TAGS, VALID_LOAN);","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"ryanczx"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e person.toModelType(tagList));","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"rui-han-crh"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"czhongwei"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"czhongwei"},"content":"                        VALID_ADDRESS, VALID_BIRTHDAY, VALID_TAGS, VALID_LOAN);","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"ryanczx"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e person.toModelType(tagList));","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"czhongwei"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"czhongwei"},"content":"                        VALID_ADDRESS, VALID_BIRTHDAY, VALID_TAGS, VALID_LOAN);","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"ryanczx"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e person.toModelType(tagList));","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"rui-han-crh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"czhongwei"},"content":"                VALID_ADDRESS, VALID_BIRTHDAY, VALID_TAGS, VALID_LOAN);","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"ryanczx"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e person.toModelType(tagList));","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"czhongwei"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"czhongwei"},"content":"                        INVALID_ADDRESS, VALID_BIRTHDAY, VALID_TAGS, VALID_LOAN);","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"ryanczx"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e person.toModelType(tagList));","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"rui-han-crh"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"czhongwei"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"czhongwei"},"content":"                        null, VALID_BIRTHDAY, VALID_TAGS, VALID_LOAN);","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"ryanczx"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e person.toModelType(tagList));","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"czhongwei"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"czhongwei"},"content":"                        VALID_ADDRESS, VALID_BIRTHDAY, invalidTags, VALID_LOAN);","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"ryanczx"},"content":"        assertThrows(IllegalValueException.class, () -\u003e person.toModelType(tagList));","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"rui-han-crh"},"content":"    public void toModelType_invalidLoan_throwsIllegalValueException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"rui-han-crh"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"czhongwei"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"czhongwei"},"content":"                        VALID_ADDRESS, VALID_BIRTHDAY, VALID_TAGS, INVALID_LOAN);","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"rui-han-crh"},"content":"        String expectedMessage \u003d Loan.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"rui-han-crh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e person.toModelType(tagList));","lastModifiedDate":"2022-10-15"},{"lineNumber":138,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"rui-han-crh"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"rui-han-crh"},"content":"    public void toModelType_nullLoan_throwsIllegalValueException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"rui-han-crh"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"czhongwei"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"czhongwei"},"content":"                        VALID_ADDRESS, VALID_BIRTHDAY, VALID_TAGS, null);","lastModifiedDate":"2022-10-26"},{"lineNumber":145,"author":{"gitId":"rui-han-crh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Loan.class.getSimpleName());","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"rui-han-crh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e person.toModelType(tagList));","lastModifiedDate":"2022-10-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"czhongwei":23,"ryanczx":11,"rui-han-crh":21,"-":94}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"czhongwei"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"czhongwei"},"content":"        descriptor.setBirthday(person.getBirthday());","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"czhongwei"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"czhongwei"},"content":"     * Sets the {@code Birthday} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"czhongwei"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"czhongwei"},"content":"    public EditPersonDescriptorBuilder withBirthday(String birthday) {","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"czhongwei"},"content":"        descriptor.setBirthday(new Birthday(birthday));","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"czhongwei"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"czhongwei"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"czhongwei":10,"-":87}},{"path":"src/test/java/seedu/address/testutil/NoteBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanczx"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"ryanczx"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"ryanczx"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.note.Content;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.note.Title;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"ryanczx"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"ryanczx"},"content":" * A utility class to help with building Note objects.","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"ryanczx"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"ryanczx"},"content":"public class NoteBuilder {","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"ryanczx"},"content":"    public static final String DEFAULT_TITLE \u003d \"Todo\";","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"ryanczx"},"content":"    public static final String DEFAULT_CONTENT \u003d \"Collect money\";","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"ryanczx"},"content":"    private Title title;","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"ryanczx"},"content":"    private Content content;","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"ryanczx"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"ryanczx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"ryanczx"},"content":"     * Creates a {@code NoteBuilder} with the default details.","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"ryanczx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"ryanczx"},"content":"    public NoteBuilder() {","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"ryanczx"},"content":"        title \u003d new Title(DEFAULT_TITLE);","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"ryanczx"},"content":"        content \u003d new Content(DEFAULT_CONTENT);","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"ryanczx"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"ryanczx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"ryanczx"},"content":"     * Initializes the NoteBuilder with the data of {@code noteToCopy}.","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"ryanczx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"ryanczx"},"content":"    public NoteBuilder(Note noteToCopy) {","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"ryanczx"},"content":"        title \u003d noteToCopy.getTitle();","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"ryanczx"},"content":"        content \u003d noteToCopy.getContent();","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"ryanczx"},"content":"        tags \u003d new HashSet\u003c\u003e(noteToCopy.getTags());","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"ryanczx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"ryanczx"},"content":"     * Sets the {@code Title} of the {@code Note} that we are building.","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"ryanczx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"ryanczx"},"content":"    public NoteBuilder withTitle(String title) {","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"ryanczx"},"content":"        this.title \u003d new Title(title);","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"ryanczx"},"content":"        return this;","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"ryanczx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"ryanczx"},"content":"     * Sets the {@code Content} of the {@code Note} that we are building.","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"ryanczx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"ryanczx"},"content":"    public NoteBuilder withContent(String content) {","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"ryanczx"},"content":"        this.content \u003d new Content(content);","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"ryanczx"},"content":"        return this;","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"ryanczx"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"ryanczx"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Note} that we are building.","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"ryanczx"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"ryanczx"},"content":"    public NoteBuilder withTags(String ... tags) {","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"ryanczx"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"ryanczx"},"content":"        return this;","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"ryanczx"},"content":"    public Note build() {","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"ryanczx"},"content":"        return new Note(title, content, tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"ryanczx"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"ryanczx"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"ryanczx"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"ryanczx":70}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"czhongwei"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"rui-han-crh"},"content":"import seedu.address.model.person.Loan;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"czhongwei"},"content":"    public static final String DEFAULT_BIRTHDAY \u003d \"01/01/2000\";","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"rui-han-crh"},"content":"    public static final String DEFAULT_LOAN \u003d \"0\";","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"czhongwei"},"content":"    private Birthday birthday;","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"rui-han-crh"},"content":"    private Loan loan;","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"czhongwei"},"content":"        birthday \u003d new Birthday(DEFAULT_BIRTHDAY);","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"rui-han-crh"},"content":"        loan \u003d new Loan(DEFAULT_LOAN);","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"czhongwei"},"content":"        birthday \u003d personToCopy.getBirthday();","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"rui-han-crh"},"content":"        loan \u003d personToCopy.getLoan();","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"czhongwei"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"czhongwei"},"content":"     * Sets the {@code Birthday} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"czhongwei"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"czhongwei"},"content":"    public PersonBuilder withBirthday(String birthday) {","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"czhongwei"},"content":"        this.birthday \u003d new Birthday(birthday);","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"czhongwei"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":108,"author":{"gitId":"czhongwei"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"czhongwei"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"rui-han-crh"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"rui-han-crh"},"content":"     * Sets the {@code Loan} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"rui-han-crh"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"rui-han-crh"},"content":"    public PersonBuilder withLoan(String loan) {","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"rui-han-crh"},"content":"        this.loan \u003d new Loan(loan);","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"rui-han-crh"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"rui-han-crh"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"rui-han-crh"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":119,"author":{"gitId":"czhongwei"},"content":"        return new Person(name, phone, email, address, birthday, tags, loan);","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"czhongwei":14,"rui-han-crh":13,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"czhongwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"czhongwei"},"content":"        sb.append(PREFIX_BIRTHDAY + person.getBirthday().value + \" \");","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"czhongwei"},"content":"        descriptor.getBirthday().ifPresent(birthday -\u003e sb.append(PREFIX_BIRTHDAY).append(birthday.value).append(\" \"));","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"czhongwei":3,"-":62}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"ryanczx"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"czhongwei"},"content":"            .withPhone(\"94351253\").withBirthday(\"02/02/2000\")","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":33,"author":{"gitId":"czhongwei"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withBirthday(\"01/01/2000\")","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"ryanczx"},"content":"            .withTags(\"owesMoney\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"czhongwei"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withBirthday(\"03/03/2000\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"czhongwei"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withBirthday(\"11/11/2000\")","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"czhongwei"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"czhongwei"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"czhongwei"},"content":"            .withPhone(\"9482224\").withBirthday(\"04/04/2000\")","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"rui-han-crh"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withLoan(\"-10.0\").build();","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"czhongwei"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"czhongwei"},"content":"            .withPhone(\"9482427\").withBirthday(\"05/05/2000\")","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"rui-han-crh"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withLoan(\"50.0\").build();","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"czhongwei"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withBirthday(\"06/06/2000\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"czhongwei"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withBirthday(\"07/07/2000\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"czhongwei"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withBirthday(\"08/08/2000\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"ryanczx"},"content":"            for (Tag tag : person.getTags()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"ryanczx"},"content":"                ab.addTag(tag);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"ryanczx"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"czhongwei":12,"ryanczx":5,"rui-han-crh":2,"-":64}}]
