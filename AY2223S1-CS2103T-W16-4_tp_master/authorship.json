[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"[![Java CI](https://github.com/AY2223S1-CS2103T-W16-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W16-4/tp/actions)","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"# MyInsuRec","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"*MyInsuRec* is a desktop app for financial advisors to manage and organize their clients and meetings, helping","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"financial advisors stay connected with their clients. *MyInsuRec* is best suited for the quick typist, as it is ","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"optimized for use via a Command Line Interface (CLI), with all the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"rexong"},"content":"* The project simulates an ongoing software project for a desktop application (called _MyInsuRec_) used for managing clients\u0027 details and meetings for an insurance agent.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"* It is named `MyInsuRec` because it helps financial advisors to keep track of their clients and meetings.","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"junweimoo"},"content":"## Links","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"junweimoo"},"content":"* [MyInsuRec Product Website](https://ay2223s1-cs2103t-w16-4.github.io/tp)","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"junweimoo"},"content":"* [MyInsuRec Developer Guide](https://ay2223s1-cs2103t-w16-4.github.io/tp/DeveloperGuide)","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"junweimoo"},"content":"* [MyInsuRec User Guide](https://ay2223s1-cs2103t-w16-4.github.io/tp/UserGuide)","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"junweimoo"},"content":"## Acknowledgements","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"junweimoo"},"content":"* The project is based on the [AB3 project template](https://github.com/se-edu/addressbook-level3) by ","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"junweimoo"},"content":"[se-education.org](https://se-education.org).","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"sikai00":5,"junweimoo":9,"rexong":1,"-":3,"ThomasHoooo":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"### Thomas Ho","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"\u003cimg src\u003d\"images/thomashoooo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"[[github](http://github.com/ThomasHoooo)]","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"[[portfolio](team/thomashoooo.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"* Role:","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    * Team Lead","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    * Git expert","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"### Chang Si Kai","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"\u003cimg src\u003d\"images/sikai00.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"[[github](http://github.com/sikai00)]","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"[[portfolio](team/sikai00.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"* Role:","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    * Developer","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"* Responsibilities: ","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"    * Testing","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"    * Integration","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"### Ong Han Wei","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"rexong"},"content":"\u003cimg src\u003d\"images/rexong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"[[github](http://github.com/rexong)]","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"[[portfolio](team/rexong.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"* Role:","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"    * Developer","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"* Responsibilities:","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"    * Code quality","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"    * Testing","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"### Moo Jun Wei","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"\u003cimg src\u003d\"images/junweimoo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"[[github](http://github.com/junweimoo)]","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"[[portfolio](team/junweimoo.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"* Role:","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"    * Developer","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"* Responsibilities:","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"    * UI","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"    * Deliverables and deadlines","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":"    * Scheduling and tracking","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"sikai00"},"content":"### Tina Agarwal","lastModifiedDate":"2022-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"Thing1Thing2"},"content":"\u003cimg src\u003d\"images/thing1thing2.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"sikai00"},"content":"[[github](http://github.com/Thing1Thing2)]","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"sikai00"},"content":"[[portfolio](team/thing1thing2.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"sikai00"},"content":"* Role:","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"sikai00"},"content":"    * Developer","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"sikai00"},"content":"* Responsibilities:","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"sikai00"},"content":"    * Documentation","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"Thing1Thing2":1,"sikai00":40,"rexong":1,"-":30,"ThomasHoooo":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"rexong"},"content":"* insurance agent","lastModifiedDate":"2022-09-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"rexong"},"content":"* has a need to look up client\u0027s information","lastModifiedDate":"2022-09-29"},{"lineNumber":263,"author":{"gitId":"rexong"},"content":"* has a need to track a significant amount of meetings","lastModifiedDate":"2022-09-29"},{"lineNumber":264,"author":{"gitId":"rexong"},"content":"* requires reminders regarding meeting schedules.","lastModifiedDate":"2022-09-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":268,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"rexong"},"content":"**Value proposition**:","lastModifiedDate":"2022-09-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"rexong"},"content":"* manage clients\u0027 information faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-09-29"},{"lineNumber":273,"author":{"gitId":"rexong"},"content":"* view scheduled meetings with client\u0027s details in one glance","lastModifiedDate":"2022-09-29"},{"lineNumber":274,"author":{"gitId":"rexong"},"content":"* less effort to recall client\u0027s information, more effort to satisfy client\u0027s needs","lastModifiedDate":"2022-09-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"Thing1Thing2"},"content":"| Priority | As a(n) …​      | I want to …​            | So that I can…​                             |","lastModifiedDate":"2022-09-30"},{"lineNumber":281,"author":{"gitId":"Thing1Thing2"},"content":"|----------|-----------------|-------------------------|---------------------------------------------|","lastModifiedDate":"2022-09-30"},{"lineNumber":282,"author":{"gitId":"Thing1Thing2"},"content":"| `* * *`  | insurance agent | add client meetings     | keep track of when to meet clients          |","lastModifiedDate":"2022-09-30"},{"lineNumber":283,"author":{"gitId":"Thing1Thing2"},"content":"| `* * *`  | insurance agent | add client details      | keep track of my client\u0027s details           |","lastModifiedDate":"2022-09-30"},{"lineNumber":284,"author":{"gitId":"Thing1Thing2"},"content":"| `* * *`  | insurance agent | delete clients\u0027 details | remove clients whom I am no longer serving. |","lastModifiedDate":"2022-09-30"},{"lineNumber":285,"author":{"gitId":"Thing1Thing2"},"content":"| `* * *`  | insurance agent | view all my clients     | see who I am providing services to          |","lastModifiedDate":"2022-09-30"},{"lineNumber":286,"author":{"gitId":"Thing1Thing2"},"content":"| `* * *`  | insurance agent | delete client meetings  | remove meetings that are canceled           |","lastModifiedDate":"2022-09-30"},{"lineNumber":287,"author":{"gitId":"Thing1Thing2"},"content":"| `* * *`  | insurance agent | view client meetings    | see when I have meetings                    |","lastModifiedDate":"2022-09-30"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"rexong"},"content":"(For all use cases below, the **System** is the `MyInsuRec` and the **Actor** is the `insurance agent`, unless specified otherwise)","lastModifiedDate":"2022-09-30"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"sikai00"},"content":"#### Use case: UC1 - Add a client","lastModifiedDate":"2022-10-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"sikai00"},"content":"1. User requests to add a client.","lastModifiedDate":"2022-09-29"},{"lineNumber":300,"author":{"gitId":"sikai00"},"content":"2. System adds the client.","lastModifiedDate":"2022-09-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"sikai00"},"content":"* 1a. User inputs incomplete client data.","lastModifiedDate":"2022-09-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":308,"author":{"gitId":"sikai00"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":310,"author":{"gitId":"sikai00"},"content":"      Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":312,"author":{"gitId":"sikai00"},"content":"#### Use case: UC2 - View a client","lastModifiedDate":"2022-10-02"},{"lineNumber":313,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":314,"author":{"gitId":"junweimoo"},"content":"**MSS**","lastModifiedDate":"2022-10-01"},{"lineNumber":315,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":316,"author":{"gitId":"junweimoo"},"content":"1. User selects client to view.","lastModifiedDate":"2022-10-01"},{"lineNumber":317,"author":{"gitId":"junweimoo"},"content":"2. System displays the client information.","lastModifiedDate":"2022-10-01"},{"lineNumber":318,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":319,"author":{"gitId":"junweimoo"},"content":"   Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":320,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":321,"author":{"gitId":"junweimoo"},"content":"**Extensions**","lastModifiedDate":"2022-10-01"},{"lineNumber":322,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":323,"author":{"gitId":"junweimoo"},"content":"* 1a. User selects non-existent client.","lastModifiedDate":"2022-10-01"},{"lineNumber":324,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":325,"author":{"gitId":"junweimoo"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2022-10-01"},{"lineNumber":326,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":327,"author":{"gitId":"junweimoo"},"content":"      Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":328,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":329,"author":{"gitId":"sikai00"},"content":"#### Use case: UC3 - List all clients","lastModifiedDate":"2022-10-02"},{"lineNumber":330,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":331,"author":{"gitId":"junweimoo"},"content":"**MSS**","lastModifiedDate":"2022-10-01"},{"lineNumber":332,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":333,"author":{"gitId":"junweimoo"},"content":"1. User requests for a list of all clients.","lastModifiedDate":"2022-10-01"},{"lineNumber":334,"author":{"gitId":"junweimoo"},"content":"2. System shows a list of all clients.","lastModifiedDate":"2022-10-01"},{"lineNumber":335,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":336,"author":{"gitId":"junweimoo"},"content":"   Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":337,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":338,"author":{"gitId":"sikai00"},"content":"#### Use case: UC4 - List all meetings","lastModifiedDate":"2022-10-02"},{"lineNumber":339,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":340,"author":{"gitId":"sikai00"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":341,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":342,"author":{"gitId":"sikai00"},"content":"1. User requests for a list of all meetings.","lastModifiedDate":"2022-09-29"},{"lineNumber":343,"author":{"gitId":"sikai00"},"content":"2. System shows a list of all meetings.","lastModifiedDate":"2022-09-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"sikai00"},"content":"#### Use case: UC5 - Delete a meeting","lastModifiedDate":"2022-10-02"},{"lineNumber":348,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":349,"author":{"gitId":"rexong"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":350,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":351,"author":{"gitId":"sikai00"},"content":"1. User requests for a [list of all meetings (UC4)](#use-case-uc4---list-all-meetings).","lastModifiedDate":"2022-10-02"},{"lineNumber":352,"author":{"gitId":"rexong"},"content":"2. System shows a list of all meetings.","lastModifiedDate":"2022-09-30"},{"lineNumber":353,"author":{"gitId":"rexong"},"content":"3. User requests to delete one meeting from the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":354,"author":{"gitId":"rexong"},"content":"4. System deletes the meeting specified by the user.","lastModifiedDate":"2022-09-30"},{"lineNumber":355,"author":{"gitId":"rexong"},"content":"5. System informs user that the specified meeting is deleted.","lastModifiedDate":"2022-09-30"},{"lineNumber":356,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":357,"author":{"gitId":"rexong"},"content":"   Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":358,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":359,"author":{"gitId":"sikai00"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":360,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":361,"author":{"gitId":"rexong"},"content":"* 3a. User deletes a meeting that was not shown in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"rexong"},"content":"    * 3a1. System shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":364,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":365,"author":{"gitId":"sikai00"},"content":"      Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"junweimoo"},"content":"4.  Should be usable by a novice who has never used a command line interface.","lastModifiedDate":"2022-09-30"},{"lineNumber":376,"author":{"gitId":"junweimoo"},"content":"5.  Common actions should require 5 or less input phrases to accomplish.","lastModifiedDate":"2022-10-01"},{"lineNumber":377,"author":{"gitId":"junweimoo"},"content":"6.  UI should be intuitive and easy to understand.","lastModifiedDate":"2022-09-30"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"sikai00"},"content":"* **Mainstream OS**: Windows, MacOS, Unix","lastModifiedDate":"2022-10-02"},{"lineNumber":382,"author":{"gitId":"ThomasHoooo"},"content":"* **Meeting**: An event that the user with the client at a specific date and time.","lastModifiedDate":"2022-09-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Thing1Thing2":8,"sikai00":21,"junweimoo":27,"rexong":21,"-":357,"ThomasHoooo":1}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Thing1Thing2"},"content":"MyInsuRec is a **desktop app for financial advisors, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, MyInsuRec can get your client and meeting management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"1. Download the latest `MyInsuRec.jar` from [here](https://github.com/AY2223S1-CS2103T-W16-4/tp/releases).","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your MyInsuRec.","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Thing1Thing2"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Thing1Thing2"},"content":"   1. `viewClient`: View a particular client","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"Thing1Thing2"},"content":"   2. `addClient`: Add a client","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"Thing1Thing2"},"content":"   3. `delClient`: Delete client","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"rexong"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by you.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"rexong"},"content":"  e.g. in `addClient n/NAME ...`, `NAME` is a parameter which can be used as `addClient n/John Tan ...`.","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"rexong"},"content":"* Items in square brackets are optional, while those not in square brackets are compulsory.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":45,"author":{"gitId":"rexong"},"content":"  e.g `addClient n/NAME p/PHONE_NUMBER [e/EMAIL]` can be used as `addClient n/John Tan p/12345678 e/John@abc.com` or as `addClient n/John Tan p/12345678`.","lastModifiedDate":"2022-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"rexong"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":51,"author":{"gitId":"rexong"},"content":"  e.g. if you specify `d/28092022 d/30092022`, only `d/30092022` will be taken.","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":53,"author":{"gitId":"rexong"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `exit`, `listClient` and `listMeeting`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"rexong"},"content":"  e.g. if the command specifies `exit 123`, it will be interpreted as `exit`.","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"sikai00"},"content":"### Adding a client: `addClient`","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"sikai00"},"content":"Adds a new client to MyInsuRec.","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"sikai00"},"content":"Format: `addClient n/NAME p/PHONE_NUMBER [e/EMAIL]`","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":73,"author":{"gitId":"sikai00"},"content":"* Adds a client having name `NAME`.","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"sikai00"},"content":"* A client must have a NAME and a PHONE_NUMBER.","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"sikai00"},"content":"* Email is optional.","lastModifiedDate":"2022-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"sikai00"},"content":"* `addClient n/John Tan p/0123456789`","lastModifiedDate":"2022-09-28"},{"lineNumber":79,"author":{"gitId":"sikai00"},"content":"* `addClient n/John Tan p/0123456789 e/johntan@insurec.com`","lastModifiedDate":"2022-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"Thing1Thing2"},"content":"### Listing all clients : `listClient`","lastModifiedDate":"2022-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"Thing1Thing2"},"content":"List all clients in MyInsuRec.","lastModifiedDate":"2022-10-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"Thing1Thing2"},"content":"Format: `listClient`","lastModifiedDate":"2022-10-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"Thing1Thing2"},"content":"### Viewing a client: `viewClient`","lastModifiedDate":"2022-10-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":89,"author":{"gitId":"Thing1Thing2"},"content":"View details associated with a client, such as client\u0027s name and phone number.","lastModifiedDate":"2022-10-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":91,"author":{"gitId":"Thing1Thing2"},"content":"Format: `viewClient i/INDEX`","lastModifiedDate":"2022-10-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":93,"author":{"gitId":"Thing1Thing2"},"content":"* Displays information about the client at the specific `INDEX`.","lastModifiedDate":"2022-10-01"},{"lineNumber":94,"author":{"gitId":"Thing1Thing2"},"content":"* The index refers to the index number shown in the displayed clients\u0027 list.","lastModifiedDate":"2022-10-01"},{"lineNumber":95,"author":{"gitId":"Thing1Thing2"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-01"},{"lineNumber":98,"author":{"gitId":"Thing1Thing2"},"content":"* `viewClient i/1`","lastModifiedDate":"2022-10-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":100,"author":{"gitId":"Thing1Thing2"},"content":"### Deleting a client : `delClient`","lastModifiedDate":"2022-10-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"Thing1Thing2"},"content":"Deletes the specified client from MyInsuRec.","lastModifiedDate":"2022-10-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"Thing1Thing2"},"content":"Format: `delClient i/INDEX`","lastModifiedDate":"2022-10-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"Thing1Thing2"},"content":"* Deletes the client at the specified `INDEX`.","lastModifiedDate":"2022-10-01"},{"lineNumber":107,"author":{"gitId":"Thing1Thing2"},"content":"* The index refers to the index number shown in the displayed clients\u0027 list.","lastModifiedDate":"2022-10-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"Thing1Thing2"},"content":"* `delClient i/2`","lastModifiedDate":"2022-10-01"},{"lineNumber":112,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":113,"author":{"gitId":"rexong"},"content":"### Adding a meeting : `addMeeting`","lastModifiedDate":"2022-09-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":115,"author":{"gitId":"rexong"},"content":"Adds a new meeting to MyInsuRec. ","lastModifiedDate":"2022-09-29"},{"lineNumber":116,"author":{"gitId":"rexong"},"content":"DATE should be in DDMMYYYY format and TIME should be in 24-hour format.","lastModifiedDate":"2022-09-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":118,"author":{"gitId":"Thing1Thing2"},"content":"Format: `addMeeting i/INDEX d/DATE t/TIME dn/DESCRIPTION`","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":120,"author":{"gitId":"rexong"},"content":"* Adds a meeting.","lastModifiedDate":"2022-09-29"},{"lineNumber":121,"author":{"gitId":"Thing1Thing2"},"content":"* A meeting contains INDEX, DATE, TIME and DESCRIPTION.","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"Thing1Thing2"},"content":"* Adds the client at the specific `INDEX` to the meeting.","lastModifiedDate":"2022-10-04"},{"lineNumber":123,"author":{"gitId":"Thing1Thing2"},"content":"* The index refers to the index number shown in the displayed clients\u0027 list.","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":125,"author":{"gitId":"rexong"},"content":"Examples:","lastModifiedDate":"2022-09-29"},{"lineNumber":126,"author":{"gitId":"Thing1Thing2"},"content":"* `addMeeting i/1 d/28092022 t/1400 dn/Team meeting`","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"Thing1Thing2"},"content":"* `addMeeting i/1 t/1400 d/28092022 dn/Follow up meeting`","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":129,"author":{"gitId":"Thing1Thing2"},"content":"### Listing meetings: `listMeeting`","lastModifiedDate":"2022-10-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":131,"author":{"gitId":"Thing1Thing2"},"content":"List all meetings in MyInsuRec.","lastModifiedDate":"2022-10-01"},{"lineNumber":132,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":133,"author":{"gitId":"Thing1Thing2"},"content":"Format: `listMeeting`","lastModifiedDate":"2022-10-01"},{"lineNumber":134,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":135,"author":{"gitId":"ThomasHoooo"},"content":"### Viewing a meeting: `viewMeeting`","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"ThomasHoooo"},"content":"View details associated with a meeting, such as meeting\u0027s date and time.","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"ThomasHoooo"},"content":"Format: `viewMeeting i/INDEX`","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"ThomasHoooo"},"content":"* Displays information about the meeting at the specific `INDEX`.","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"ThomasHoooo"},"content":"* The index refers to the index number shown in the displayed meetings\u0027 list.","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"ThomasHoooo"},"content":"* `viewMeeting i/1`","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"rexong"},"content":"### Deleting a Meeting : `delMeeting`","lastModifiedDate":"2022-09-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":150,"author":{"gitId":"rexong"},"content":"Deletes a meeting from MyInsuRec.","lastModifiedDate":"2022-09-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":152,"author":{"gitId":"rexong"},"content":"Format: `delMeeting i/INDEX`","lastModifiedDate":"2022-09-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":154,"author":{"gitId":"rexong"},"content":"* Deletes the meeting at the specified `INDEX`.","lastModifiedDate":"2022-09-29"},{"lineNumber":155,"author":{"gitId":"rexong"},"content":"* The index refers to the index number shown in the displayed meeting list.","lastModifiedDate":"2022-09-29"},{"lineNumber":156,"author":{"gitId":"rexong"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-09-29"},{"lineNumber":157,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":158,"author":{"gitId":"rexong"},"content":"Examples:","lastModifiedDate":"2022-09-29"},{"lineNumber":159,"author":{"gitId":"Thing1Thing2"},"content":"* `delMeeting i/2`","lastModifiedDate":"2022-10-01"},{"lineNumber":160,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":161,"author":{"gitId":"sikai00"},"content":"### Exiting MyInsuRec : `exit`","lastModifiedDate":"2022-09-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"Thing1Thing2"},"content":"MyInsuRec data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-10-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":173,"author":{"gitId":"Thing1Thing2"},"content":"MyInsuRec data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-10-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":176,"author":{"gitId":"Thing1Thing2"},"content":"If your changes to the data file makes its format invalid, MyInsuRec will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-10-01"},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"Thing1Thing2"},"content":"**A**: Install the app, then overwrite the myinsurec_data.json file created by the app with the version of the file from the previous computer.","lastModifiedDate":"2022-10-01"},{"lineNumber":189,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":190,"author":{"gitId":"Thing1Thing2"},"content":"**Q**: I accidentally closed the app, will my data still be there?\u003cbr\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":191,"author":{"gitId":"Thing1Thing2"},"content":"**A**: Yes, your data is saved automatically after every action.","lastModifiedDate":"2022-10-01"},{"lineNumber":192,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":193,"author":{"gitId":"Thing1Thing2"},"content":"**Q**: My computer does not recognise the file type jar. How do I open the app?\u003cbr\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":194,"author":{"gitId":"Thing1Thing2"},"content":"**A**: Install Java version 11 and above from the official Java website.","lastModifiedDate":"2022-10-01"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"sikai00"},"content":"| Action                | Format, Examples                                                                                                                                                   |","lastModifiedDate":"2022-09-28"},{"lineNumber":201,"author":{"gitId":"sikai00"},"content":"|-----------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-01"},{"lineNumber":202,"author":{"gitId":"sikai00"},"content":"| **Add client**        | `addClient n/NAME p/PHONE_NUMBER [e/EMAIL]` \u003cbr\u003e e.g., \u003cbr\u003e • `addClient n/John Tan p/0123456789` \u003cbr\u003e • `addClient n/John Tan p/0123456789 e/johntan@insurec.com` |","lastModifiedDate":"2022-10-01"},{"lineNumber":203,"author":{"gitId":"sikai00"},"content":"| **List all clients**  | `listClient`                                                                                                                                                       |","lastModifiedDate":"2022-09-28"},{"lineNumber":204,"author":{"gitId":"sikai00"},"content":"| **View client**       | `viewClient i/INDEX` \u003cbr\u003e e.g., \u003cbr\u003e • `viewClient i/1`                                                                                                            |","lastModifiedDate":"2022-10-01"},{"lineNumber":205,"author":{"gitId":"Thing1Thing2"},"content":"| **Delete client**     | `delClient i/INDEX` \u003cbr\u003e e.g., \u003cbr\u003e • `delClient i/1`                                                                                                              |","lastModifiedDate":"2022-10-01"},{"lineNumber":206,"author":{"gitId":"Thing1Thing2"},"content":"| **Add meeting**       | `addMeeting n/NAME d/DATE t/TIME dn/DESCRIPTION` \u003cbr\u003e e.g., \u003cbr\u003e • `addMeeting n/Thomas d/28092022 t/1400 dn/Team meeting`                                         |","lastModifiedDate":"2022-10-05"},{"lineNumber":207,"author":{"gitId":"sikai00"},"content":"| **List all meetings** | `listMeeting`                                                                                                                                                      |","lastModifiedDate":"2022-09-28"},{"lineNumber":208,"author":{"gitId":"sikai00"},"content":"| **View meeting**      | `viewMeeting i/INDEX` \u003cbr\u003e e.g., \u003cbr\u003e • `viewMeeting i/1`                                                                                                          |","lastModifiedDate":"2022-10-01"},{"lineNumber":209,"author":{"gitId":"sikai00"},"content":"| **Delete meeting**    | `delMeeting i/INDEX` \u003cbr\u003e e.g., \u003cbr\u003e • `delMeeting i/1`                                                                                                            |","lastModifiedDate":"2022-10-01"},{"lineNumber":210,"author":{"gitId":"sikai00"},"content":"| **Exit**              | `exit`                                                                                                                                                             |","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"Thing1Thing2":48,"sikai00":19,"rexong":24,"-":110,"ThomasHoooo":9}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"ThomasHoooo"},"content":"    content: \"MyInsuRec\";","lastModifiedDate":"2022-09-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"ThomasHoooo":1}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Thing1Thing2"},"content":"title: MyInsuRec","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Thing1Thing2"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W16-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W16-4/tp/actions)","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Thing1Thing2"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W16-4/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S1-CS2103T-W16-4/tp)","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Thing1Thing2"},"content":"**MyInsuRec is a desktop app for financial advisors to manage and organize their clients and meetings, helping","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Thing1Thing2"},"content":"financial advisors stay connected with their clients.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Thing1Thing2"},"content":"* If you are interested in using MyInsuRec, head over to the [_Quick Start_ section of the **User Guide**](https://ay2223s1-cs2103t-w16-4.github.io/tp/UserGuide.html#quick-start).","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":"* If you are interested about developing MyInsuRec, the [**Developer Guide**](https://ay2223s1-cs2103t-w16-4.github.io/tp/DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":22,"author":{"gitId":"Thing1Thing2"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W16-4/tp/branch/master/graph/badge.svg?token\u003dA2FU6P932B)](https://codecov.io/gh/AY2223S1-CS2103T-W16-4/tp)","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Thing1Thing2":8,"-":14}},{"path":"docs/team/junweimoo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"junweimoo"},"content":"---","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"junweimoo"},"content":"layout: page","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"junweimoo"},"content":"title: Moo Jun Wei\u0027s Project Portfolio Page","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"junweimoo"},"content":"---","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"junweimoo"},"content":"### Project: MyInsuRec","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"junweimoo"},"content":"*MyInsuRec* is a desktop app for financial advisors to manage and organize their clients and meetings, helping","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"junweimoo"},"content":"financial advisors stay connected with their clients. *MyInsuRec* is best suited for the quick typist, as it is","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"junweimoo"},"content":"optimized for use via a Command Line Interface (CLI), with all the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"junweimoo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"junweimoo"},"content":"* **Code contributed**: ","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"junweimoo"},"content":"  * to be added soon","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"junweimoo"},"content":"* **Project management**:","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"junweimoo"},"content":"  * to be added soon","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"junweimoo"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"junweimoo"},"content":"  * to be added soon","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"junweimoo"},"content":"* **Documentation**:","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"junweimoo"},"content":"  * to be added soon","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"junweimoo"},"content":"* **Community**:","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"junweimoo"},"content":"  * to be added soon","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"junweimoo"},"content":"* **Tools**:","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"junweimoo"},"content":"  * to be added soon","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"junweimoo":29}},{"path":"docs/team/rexong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rexong"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"rexong"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"rexong"},"content":"title: Ong Han Wei\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"rexong"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"rexong"},"content":"### Project: MyInsuRec","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"rexong"},"content":"MyInsuRec is a desktop app for financial advisors to manage and organize their clients and meetings,","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"rexong"},"content":"helping financial advisors stay connected with their clients.","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"rexong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"rexong"},"content":"* **New Feature**: [To be updated]","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"rexong"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003drexong\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"rexong"},"content":"* **Project management**: [To be updated]","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"rexong"},"content":"* **Enhancements to existing features**: [To be updated]","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"rexong"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"rexong"},"content":"    * README:","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"rexong"},"content":"        * Update the Target Users","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"rexong"},"content":"    * User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"rexong"},"content":"        * Added documentation for the features `addMeeting` and `delMeeting`","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"rexong"},"content":"        * Added documentation for command feature","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"rexong"},"content":"    * Developer Guide: [To be updated]","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"rexong"},"content":"* **Community**: [To be updated]","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"rexong"},"content":"* **Tools**: [To be updated]","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"rexong":31}},{"path":"docs/team/sikai00.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"title: Chang Si Kai\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"### Project: MyInsuRec","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"MyInsuRec is a clients and meetings management app for insurance agents.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dsikai00\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    * About Us:","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"        * Updated everyone\u0027s roles and responsibilities and made necessary changes to its formatting: [#22](https://github.com/AY2223S1-CS2103T-W16-4/tp/pull/22)","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    * README:","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"        * Added project description: [\\#25](https://github.com/AY2223S1-CS2103T-W16-4/tp/pull/25)","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"    * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"        * Added documentation for the features `addClient`, `listMeeting`, `exit`","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"        * Added documentation for the command summary","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    * PRs reviewed (with non-trivial review comments): [#30](https://github.com/nus-cs2103-AY2223S1/ip/pull/30/files/8747b6733960793f58073631497b68ef093b584a), [#402](https://github.com/nus-cs2103-AY2223S1/ip/pull/402/files/3e90719169c9d34d360f5f543bf639817b2e78ac), ","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"    * Contributed to forum discussions (examples: [#25](https://github.com/nus-cs2103-AY2223S1/forum/issues/25), [#136](https://github.com/nus-cs2103-AY2223S1/forum/issues/136), [#140](https://github.com/nus-cs2103-AY2223S1/forum/issues/140))","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"sikai00":31}},{"path":"docs/team/thing1thing2.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Thing1Thing2"},"content":"layout: page","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Thing1Thing2"},"content":"title: Tina Agarwal\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Thing1Thing2"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Thing1Thing2"},"content":"### Project: MyInsuRec","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Thing1Thing2"},"content":"MyInsuRec is a desktop app for financial advisors to manage and organize their clients and meetings,","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Thing1Thing2"},"content":"helping financial advisors stay connected with their clients.","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"Thing1Thing2"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"Thing1Thing2"},"content":"* **New Feature**: [To be updated]","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dthing1thing2\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"* **Project management**: [To be updated]","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":"* **Enhancements to existing features**: [To be updated]","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"Thing1Thing2"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Thing1Thing2"},"content":"    * User Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"Thing1Thing2"},"content":"        * Added documentation for \u0027Getting Started\u0027 section","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"Thing1Thing2"},"content":"        * Added documentation for `deleteClient` feature","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"Thing1Thing2"},"content":"    * Developer Guide: ","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"Thing1Thing2"},"content":"        * Added user stories for v1.2 (next iteration)","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"Thing1Thing2"},"content":"* **Community**: [To be updated]","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"Thing1Thing2"},"content":"* **Tools**: [To be updated]","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Thing1Thing2":30}},{"path":"docs/team/thomashoooo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"title: Thomas Ho\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"### Project: MyInsuRec","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"*MyInsuRec* is a desktop app for financial advisors to manage and organize their clients and meetings, helping","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"financial advisors stay connected with their clients. *MyInsuRec* is best suited for the quick typist, as it is","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"optimized for use via a Command Line Interface (CLI), with all the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"  * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"  ","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"* **Code contributed**: to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"* **Project management**:","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"  * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"  * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"  * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"* **Community**:","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"  * to be added soon","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"* **Tools**:","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"  * to be added soon","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"ThomasHoooo":31}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"Thing1Thing2"},"content":"Create a new `Remark` in `seedu.address.model.client`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-10-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"Thing1Thing2":1,"-":400}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Thing1Thing2"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.client.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Thing1Thing2":1,"-":111}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"rexong"},"content":"import seedu.address.model.MyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"rexong"},"content":"import seedu.address.model.ReadOnlyMyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"rexong"},"content":"import seedu.address.storage.JsonMyInsuRecStorage;","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"rexong"},"content":"import seedu.address.storage.MyInsuRecStorage;","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"Thing1Thing2"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing MyInsuRec ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"rexong"},"content":"        MyInsuRecStorage myInsuRecStorage \u003d new JsonMyInsuRecStorage(userPrefs.getMyInsuRecFilePath());","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"rexong"},"content":"        storage \u003d new StorageManager(myInsuRecStorage, userPrefsStorage);","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"rexong"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s MyInsuRec and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"rexong"},"content":"     * The data from the sample MyInsuRec will be used instead if {@code storage}\u0027s MyInsuRec is not found,","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"rexong"},"content":"     * or an empty MyInsuRec will be used instead if errors occur when reading {@code storage}\u0027s MyInsuRec.","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"rexong"},"content":"        Optional\u003cReadOnlyMyInsuRec\u003e myInsuRecOptional;","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"rexong"},"content":"        ReadOnlyMyInsuRec initialData;","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"rexong"},"content":"            myInsuRecOptional \u003d storage.readMyInsuRec();","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"rexong"},"content":"            if (!myInsuRecOptional.isPresent()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"rexong"},"content":"                logger.info(\"Data file not found. Will be starting with a sample MyInsuRec\");","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"rexong"},"content":"            initialData \u003d myInsuRecOptional.orElseGet(SampleDataUtil::getSampleMyInsuRec);","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"rexong"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty MyInsuRec\");","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"rexong"},"content":"            initialData \u003d new MyInsuRec();","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"rexong"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty MyInsuRec\");","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"rexong"},"content":"            initialData \u003d new MyInsuRec();","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"rexong"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty MyInsuRec\");","lastModifiedDate":"2022-10-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"Thing1Thing2"},"content":"        logger.info(\"Starting MyInsuRec \" + MainApp.VERSION);","lastModifiedDate":"2022-10-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"Thing1Thing2"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping MyInsuRec ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Thing1Thing2":3,"rexong":20,"-":160}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Thing1Thing2"},"content":"    public static final String MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX \u003d \"The client index provided is invalid\";","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"Thing1Thing2"},"content":"    public static final String MESSAGE_CLIENTS_LISTED_OVERVIEW \u003d \"%1$d client listed!\";","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"    public static final String MESSAGE_INVALID_MEETING_DISPLAYED_INDEX \u003d \"The meeting index provided is invalid\";","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Thing1Thing2":2,"-":11,"ThomasHoooo":1}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"rexong"},"content":"import seedu.address.model.ReadOnlyMyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"rexong"},"content":"     * Returns the MyInsuRec.","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"rexong"},"content":"     * @see seedu.address.model.Model#getMyInsuRec()","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"rexong"},"content":"    ReadOnlyMyInsuRec getMyInsuRec();","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"Thing1Thing2"},"content":"    /** Returns an unmodifiable view of the filtered list of clients */","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"Thing1Thing2"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"    /** Returns an unmodifiable view of the filtered list of meetings */","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"rexong"},"content":"     * Returns the user prefs\u0027 MyInsuRec file path.","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"rexong"},"content":"    Path getMyInsuRecFilePath();","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Thing1Thing2":3,"sikai00":3,"rexong":6,"-":42}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"rexong"},"content":"import seedu.address.logic.parser.MyInsuRecParser;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"rexong"},"content":"import seedu.address.model.ReadOnlyMyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"rexong"},"content":"    private final MyInsuRecParser myInsuRecParser;","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"rexong"},"content":"        myInsuRecParser \u003d new MyInsuRecParser();","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"rexong"},"content":"        Command command \u003d myInsuRecParser.parseCommand(commandText);","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"rexong"},"content":"            storage.saveMyInsuRec(model.getMyInsuRec());","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"rexong"},"content":"    public ReadOnlyMyInsuRec getMyInsuRec() {","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"rexong"},"content":"        return model.getMyInsuRec();","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"Thing1Thing2"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"Thing1Thing2"},"content":"        return model.getFilteredClientList();","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"sikai00"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"sikai00"},"content":"        return model.getFilteredMeetingList();","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"rexong"},"content":"    public Path getMyInsuRecFilePath() {","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"rexong"},"content":"        return model.getMyInsuRecFilePath();","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Thing1Thing2":3,"sikai00":5,"rexong":10,"-":69}},{"path":"src/main/java/seedu/address/logic/commands/AddClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":" * Adds a client to MyInsuRec.","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"public class AddClientCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":"    public static final String COMMAND_WORD \u003d \"addClient\";","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Thing1Thing2"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a client to MyInsuRec. \"","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"Thing1Thing2"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New client added: %1$s\";","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"Thing1Thing2"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in MyInsuRec\";","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"Thing1Thing2"},"content":"    private final Client toAdd;","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"Thing1Thing2"},"content":"     * Creates an AddClientCommand to add the specified {@code Client}","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"Thing1Thing2"},"content":"    public AddClientCommand(Client client) {","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"Thing1Thing2"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"Thing1Thing2"},"content":"        toAdd \u003d client;","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"Thing1Thing2"},"content":"        if (model.hasClient(toAdd)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"Thing1Thing2"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"Thing1Thing2"},"content":"        model.addClient(toAdd);","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), false, false, true, false);","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"Thing1Thing2"},"content":"                || (other instanceof AddClientCommand // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"Thing1Thing2"},"content":"                \u0026\u0026 toAdd.equals(((AddClientCommand) other).toAdd));","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Thing1Thing2":17,"sikai00":1,"-":48}},{"path":"src/main/java/seedu/address/logic/commands/AddMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junweimoo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"junweimoo"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"junweimoo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"junweimoo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"junweimoo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"junweimoo"},"content":"import seedu.address.model.ReadOnlyMyInsuRec;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"junweimoo"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"junweimoo"},"content":"import seedu.address.model.meeting.Description;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"junweimoo"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"junweimoo"},"content":"import seedu.address.model.meeting.MeetingDate;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"junweimoo"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"junweimoo"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"junweimoo"},"content":" * Adds a meeting to MyInsuRec.","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"junweimoo"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"junweimoo"},"content":"public class AddMeetingCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"junweimoo"},"content":"    public static final String COMMAND_WORD \u003d \"addMeeting\";","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"junweimoo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New meeting added: %1$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"junweimoo"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"This meeting already exists in MyInsuRec\";","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"junweimoo"},"content":"    private final MeetingDate meetingDate;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"junweimoo"},"content":"    private final MeetingTime meetingTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"junweimoo"},"content":"    private final String linkedClientName;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"junweimoo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"junweimoo"},"content":"     * Creates an AddMeetingCommand to add the specified meeting.","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"junweimoo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"junweimoo"},"content":"    public AddMeetingCommand(String clientName, MeetingDate date, MeetingTime time) {","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"junweimoo"},"content":"        meetingDate \u003d date;","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"junweimoo"},"content":"        meetingTime \u003d time;","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"junweimoo"},"content":"        linkedClientName \u003d clientName;","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"junweimoo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"junweimoo"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"junweimoo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"junweimoo"},"content":"        ReadOnlyMyInsuRec clientBook \u003d model.getMyInsuRec();","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"junweimoo"},"content":"        List\u003cClient\u003e filteredClientList \u003d clientBook.getClientList().stream().filter(","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"junweimoo"},"content":"                client -\u003e client.getName().toString().equals(linkedClientName)","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"junweimoo"},"content":"        ).collect(Collectors.toList());","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"junweimoo"},"content":"        Client oldClient \u003d filteredClientList.get(0);","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"junweimoo"},"content":"        Client newClient \u003d new Client(","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"junweimoo"},"content":"                oldClient.getName(),","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"junweimoo"},"content":"                oldClient.getPhone(),","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"junweimoo"},"content":"                oldClient.getEmail(),","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"junweimoo"},"content":"                oldClient.getAddress(),","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"junweimoo"},"content":"                oldClient.getTags());","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"junweimoo"},"content":"        Meeting meetingToAdd \u003d new Meeting(newClient, new Description(\"desc\"), meetingDate, meetingTime);","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"junweimoo"},"content":"        if (model.hasMeeting(meetingToAdd)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"junweimoo"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"junweimoo"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"junweimoo"},"content":"        newClient.setMeeting(meetingToAdd);","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"junweimoo"},"content":"        model.addMeeting(meetingToAdd);","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"junweimoo"},"content":"        model.setClient(oldClient, newClient);","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"junweimoo"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, meetingToAdd),","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"junweimoo"},"content":"                false, false, false, true);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"junweimoo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"junweimoo"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"junweimoo":63}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"rexong"},"content":"import seedu.address.model.MyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"rexong"},"content":" * Clears MyInsuRec.","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"rexong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"MyInsuRec has been cleared!\";","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"rexong"},"content":"        model.setMyInsuRec(new MyInsuRec());","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rexong":4,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    /** Denotes whether the command is client specific. */","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    private final boolean isClient;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"    /** Denotes whether the command is meeting specific. */","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    private final boolean isMeeting;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean isClient, boolean isMeeting) {","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"        if (isClient \u0026\u0026 isMeeting) {","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"            throw new IllegalArgumentException(\"A command should not be both client and meeting specific.\");","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"        this.isClient \u003d isClient;","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"        this.isMeeting \u003d isMeeting;","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}, {@code showHelp}, {@code exit}.","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"     * Client/meeting specific fields are set to their default value.","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"        this(feedbackToUser, showHelp, exit, false, false);","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"sikai00"},"content":"    public boolean isClientSpecific() {","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"sikai00"},"content":"        return isClient;","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"sikai00"},"content":"    public boolean isMeetingSpecific() {","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"sikai00"},"content":"        return isMeeting;","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sikai00":29,"-":70}},{"path":"src/main/java/seedu/address/logic/commands/DeleteClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Thing1Thing2"},"content":" * Deletes a client identified using it\u0027s displayed index from MyInsuRec.","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":"public class DeleteClientCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":"    public static final String COMMAND_WORD \u003d \"delClient\";","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Thing1Thing2"},"content":"            + \": Deletes the client identified by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"Thing1Thing2"},"content":"    public static final String MESSAGE_DELETE_CLIENT_SUCCESS \u003d \"Deleted Client: %1$s\";","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Thing1Thing2"},"content":"    public DeleteClientCommand(Index targetIndex) {","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"Thing1Thing2"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"Thing1Thing2"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"Thing1Thing2"},"content":"        Client clientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"Thing1Thing2"},"content":"        model.deleteClient(clientToDelete);","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete),","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"                false, false, true, false);","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"Thing1Thing2"},"content":"                || (other instanceof DeleteClientCommand // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"Thing1Thing2"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteClientCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Thing1Thing2":13,"sikai00":2,"-":39}},{"path":"src/main/java/seedu/address/logic/commands/DeleteMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rexong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"rexong"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"rexong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"rexong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"rexong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"rexong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"rexong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"rexong"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"rexong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"rexong"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"rexong"},"content":" * Deletes a Meeting of specified client identified using it\u0027s displayed index from MyInsuRec.","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"rexong"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"rexong"},"content":"public class DeleteMeetingCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"rexong"},"content":"    public static final String COMMAND_WORD \u003d \"delMeeting\";","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"rexong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"rexong"},"content":"            + \": Deletes the meeting of the client \"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"rexong"},"content":"            + \"by the index number of the client. \\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"rexong"},"content":"            + \"Parameters: INDEX (must be a positive integer) \\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"rexong"},"content":"            + \"Example: \" + COMMAND_WORD + \" i/1\";","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"rexong"},"content":"    public static final String MESSAGE_DELETE_MEETING_SUCCESS \u003d \"Remove meeting from Client: %1$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"rexong"},"content":"    private final Index index;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"rexong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"rexong"},"content":"     * Creates an DeleteMeetingCommand to delete the specified client\u0027s meeting","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"rexong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"rexong"},"content":"    public DeleteMeetingCommand(Index index) {","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"rexong"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"rexong"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"rexong"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"rexong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"rexong"},"content":"        List\u003cMeeting\u003e lastShownMeetingList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"rexong"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownMeetingList.size()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"rexong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"rexong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"rexong"},"content":"        Meeting meeting \u003d lastShownMeetingList.get(index.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"rexong"},"content":"        Client clientToEdit \u003d meeting.getClient();","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"rexong"},"content":"        Client editedClient \u003d new Client(","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"rexong"},"content":"                clientToEdit.getName(), clientToEdit.getPhone(), clientToEdit.getEmail(),","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"rexong"},"content":"                clientToEdit.getAddress(), clientToEdit.getTags()","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"rexong"},"content":"        );","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"rexong"},"content":"        model.deleteMeeting(meeting);","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"rexong"},"content":"        model.setClient(clientToEdit, editedClient);","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"rexong"},"content":"        return new CommandResult(generateSuccessMessage(editedClient), false, false, false, true);","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"rexong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"rexong"},"content":"     * Generates a command execution success message when the meeting","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"rexong"},"content":"     * is removed from {@code clientToEdit}","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"rexong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"rexong"},"content":"    private String generateSuccessMessage(Client clientToEdit) {","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"rexong"},"content":"        return String.format(MESSAGE_DELETE_MEETING_SUCCESS, clientToEdit);","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"rexong"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"rexong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"rexong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"rexong"},"content":"            return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"rexong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"rexong"},"content":"        if (!(other instanceof DeleteMeetingCommand)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"rexong"},"content":"            return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"rexong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"rexong"},"content":"        DeleteMeetingCommand e \u003d (DeleteMeetingCommand) other;","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"rexong"},"content":"        return index.equals(e.index);","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"rexong"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"rexong":80}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"rexong"},"content":" * Edits the details of an existing client in MyInsuRec.","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"Thing1Thing2"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the client identified \"","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"Thing1Thing2"},"content":"            + \"by the index number used in the displayed client list. \"","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"Thing1Thing2"},"content":"    public static final String MESSAGE_EDIT_CLIENT_SUCCESS \u003d \"Edited Client: %1$s\";","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"rexong"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in MyInsuRec.\";","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"Thing1Thing2"},"content":"    private final EditClientDescriptor editClientDescriptor;","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"Thing1Thing2"},"content":"     * @param index of the client in the filtered client list to edit","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"Thing1Thing2"},"content":"     * @param editClientDescriptor details to edit the client with","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"Thing1Thing2"},"content":"    public EditCommand(Index index, EditClientDescriptor editClientDescriptor) {","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"Thing1Thing2"},"content":"        requireNonNull(editClientDescriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"Thing1Thing2"},"content":"        this.editClientDescriptor \u003d new EditClientDescriptor(editClientDescriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"Thing1Thing2"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"Thing1Thing2"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"Thing1Thing2"},"content":"        Client clientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"Thing1Thing2"},"content":"        Client editedClient \u003d createEditedClient(clientToEdit, editClientDescriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"Thing1Thing2"},"content":"        if (!clientToEdit.isSameClient(editedClient) \u0026\u0026 model.hasClient(editedClient)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"Thing1Thing2"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"Thing1Thing2"},"content":"        model.setClient(clientToEdit, editedClient);","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"Thing1Thing2"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"Thing1Thing2"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CLIENT_SUCCESS, editedClient));","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"Thing1Thing2"},"content":"     * Creates and returns a {@code Client} with the details of {@code clientToEdit}","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"Thing1Thing2"},"content":"     * edited with {@code EditClientDescriptor}.","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"Thing1Thing2"},"content":"    private static Client createEditedClient(Client clientToEdit, EditClientDescriptor editClientDescriptor) {","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"Thing1Thing2"},"content":"        assert clientToEdit !\u003d null;","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"Thing1Thing2"},"content":"        Name updatedName \u003d editClientDescriptor.getName().orElse(clientToEdit.getName());","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"Thing1Thing2"},"content":"        Phone updatedPhone \u003d editClientDescriptor.getPhone().orElse(clientToEdit.getPhone());","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"Thing1Thing2"},"content":"        Email updatedEmail \u003d editClientDescriptor.getEmail().orElse(clientToEdit.getEmail());","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"Thing1Thing2"},"content":"        Address updatedAddress \u003d editClientDescriptor.getAddress().orElse(clientToEdit.getAddress());","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"Thing1Thing2"},"content":"        Set\u003cTag\u003e updatedTags \u003d editClientDescriptor.getTags().orElse(clientToEdit.getTags());","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"Thing1Thing2"},"content":"        return new Client(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"Thing1Thing2"},"content":"                \u0026\u0026 editClientDescriptor.equals(e.editClientDescriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"Thing1Thing2"},"content":"     * Stores the details to edit the client with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-04"},{"lineNumber":125,"author":{"gitId":"Thing1Thing2"},"content":"     * corresponding field value of the client.","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"Thing1Thing2"},"content":"    public static class EditClientDescriptor {","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"Thing1Thing2"},"content":"        public EditClientDescriptor() {}","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"Thing1Thing2"},"content":"        public EditClientDescriptor(EditClientDescriptor toCopy) {","lastModifiedDate":"2022-10-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"Thing1Thing2"},"content":"            if (!(other instanceof EditClientDescriptor)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"Thing1Thing2"},"content":"            EditClientDescriptor e \u003d (EditClientDescriptor) other;","lastModifiedDate":"2022-10-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Thing1Thing2":42,"rexong":2,"-":182}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"rexong"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting MyInsuRec as requested ...\";","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"rexong":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"rexong"},"content":" * Finds and lists all clients in MyInsuRec whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all clients whose names contain any of \"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"Thing1Thing2"},"content":"        model.updateFilteredClientList(predicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"Thing1Thing2"},"content":"                String.format(Messages.MESSAGE_CLIENTS_LISTED_OVERVIEW, model.getFilteredClientList().size()));","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Thing1Thing2":4,"rexong":1,"-":37}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"rexong"},"content":" * Lists all persons in MyInsuRec to the user.","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all clients\";","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"Thing1Thing2"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, true, false);","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Thing1Thing2":3,"sikai00":1,"rexong":1,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/ListMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEETING;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" * Lists all meetings in the client book to the user.","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"public class ListMeetingCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    public static final String COMMAND_WORD \u003d \"listMeeting\";","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all meetings\";","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"        model.updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETING);","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, false, true);","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"sikai00":25}},{"path":"src/main/java/seedu/address/logic/commands/ViewMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":" * Views a meeting.","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"public class ViewMeetingCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"    public static final String COMMAND_WORD \u003d \"viewMeeting\";","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"            + \": Views the meeting identified by the index number used in the displayed meeting list.\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Viewed meeting: %1$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Thing1Thing2"},"content":"     * Creates a ViewMeetingCommand to view the specified {@code Meeting}","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"    public ViewMeetingCommand(Index targetIndex) {","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"ThomasHoooo"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"ThomasHoooo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"ThomasHoooo"},"content":"        Meeting meetingToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"ThomasHoooo"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, meetingToView), false, false, false, true);","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"ThomasHoooo"},"content":"                || (other instanceof ViewMeetingCommand // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"ThomasHoooo"},"content":"                \u0026\u0026 targetIndex.equals(((ViewMeetingCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Thing1Thing2":1,"-":39,"ThomasHoooo":16}},{"path":"src/main/java/seedu/address/logic/parser/AddClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.logic.commands.AddClientCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"Thing1Thing2"},"content":" * Parses input arguments and creates a new AddClientCommand object","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"Thing1Thing2"},"content":"public class AddClientCommandParser implements Parser\u003cAddClientCommand\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"Thing1Thing2"},"content":"     * Parses the given {@code String} of arguments in the context of the AddClientCommand","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"Thing1Thing2"},"content":"     * and returns an AddClientCommand object for execution.","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"Thing1Thing2"},"content":"    public AddClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"Thing1Thing2"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"Thing1Thing2"},"content":"        Client client \u003d new Client(name, phone, email, address, tagList);","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"Thing1Thing2"},"content":"        return new AddClientCommand(client);","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Thing1Thing2":14,"-":46}},{"path":"src/main/java/seedu/address/logic/parser/AddMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junweimoo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"junweimoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"junweimoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"junweimoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"junweimoo"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"junweimoo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"junweimoo"},"content":"import seedu.address.model.meeting.MeetingDate;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"junweimoo"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"junweimoo"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"junweimoo"},"content":" * Parses input arguments and creates a new AddMeetingCommand object.","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"junweimoo"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"junweimoo"},"content":"public class AddMeetingCommandParser implements Parser\u003cAddMeetingCommand\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"junweimoo"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"junweimoo"},"content":"    public AddMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"junweimoo"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"junweimoo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DATE, PREFIX_TIME);","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"junweimoo"},"content":"        String clientName \u003d argMultimap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"junweimoo"},"content":"        MeetingDate date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"junweimoo"},"content":"        MeetingTime time \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).get());;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"junweimoo"},"content":"        return new AddMeetingCommand(clientName, date, time);","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"junweimoo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"junweimoo"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"junweimoo":29}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"rexong"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"tg/\");","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"rexong"},"content":"    public static final Prefix PREFIX_INDEX \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"junweimoo"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"junweimoo"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"junweimoo":2,"rexong":2,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.logic.commands.DeleteClientCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"Thing1Thing2"},"content":" * Parses input arguments and creates a new DeleteClientCommand object","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"Thing1Thing2"},"content":"public class DeleteClientCommandParser implements Parser\u003cDeleteClientCommand\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteClientCommand","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":"     * and returns a DeleteClientCommand object for execution.","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":"    public DeleteClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"Thing1Thing2"},"content":"            return new DeleteClientCommand(index);","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"Thing1Thing2"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteClientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Thing1Thing2":8,"-":20}},{"path":"src/main/java/seedu/address/logic/parser/DeleteMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rexong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"rexong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"rexong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"rexong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"rexong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"rexong"},"content":"import seedu.address.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"rexong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"rexong"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"rexong"},"content":" * Parses input arguments and creates a new DeleteMeetingCommand object","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"rexong"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"rexong"},"content":"public class DeleteMeetingCommandParser implements Parser\u003cDeleteMeetingCommand\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"rexong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"rexong"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteMeetingCommand","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"rexong"},"content":"     * and returns a DeleteMeetingCommand object for execution.","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"rexong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"rexong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"rexong"},"content":"    public DeleteMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"rexong"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"rexong"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"rexong"},"content":"        Index index;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"rexong"},"content":"        try {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"rexong"},"content":"            index \u003d ParserUtil.parseIndex(argumentMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"rexong"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"rexong"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"rexong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMeetingCommand.MESSAGE_USAGE),","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"rexong"},"content":"                    pe","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"rexong"},"content":"            );","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"rexong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"rexong"},"content":"        return new DeleteMeetingCommand(index);","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"rexong"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"rexong":36}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"Thing1Thing2"},"content":"        EditClientDescriptor editClientDescriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"Thing1Thing2"},"content":"            editClientDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"Thing1Thing2"},"content":"            editClientDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"Thing1Thing2"},"content":"            editClientDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"Thing1Thing2"},"content":"            editClientDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"Thing1Thing2"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editClientDescriptor::setTags);","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"Thing1Thing2"},"content":"        if (!editClientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"Thing1Thing2"},"content":"        return new EditCommand(index, editClientDescriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Thing1Thing2":9,"-":73}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Thing1Thing2":1,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/MyInsuRecParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.logic.commands.AddClientCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"junweimoo"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.logic.commands.DeleteClientCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"rexong"},"content":"import seedu.address.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"import seedu.address.logic.commands.ListMeetingCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.logic.commands.ViewMeetingCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"rexong"},"content":"public class MyInsuRecParser {","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"Thing1Thing2"},"content":"        case AddClientCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"Thing1Thing2"},"content":"            return new AddClientCommandParser().parse(arguments);","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"Thing1Thing2"},"content":"        case DeleteClientCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"Thing1Thing2"},"content":"            return new DeleteClientCommandParser().parse(arguments);","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"rexong"},"content":"        case DeleteMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"rexong"},"content":"            return new DeleteMeetingCommandParser().parse(arguments);","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"ThomasHoooo"},"content":"        case ViewMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"ThomasHoooo"},"content":"            return new ViewMeetingCommandParser().parse(arguments);","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":81,"author":{"gitId":"junweimoo"},"content":"        case AddMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"junweimoo"},"content":"            return new AddMeetingCommandParser().parse(arguments);","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"sikai00"},"content":"        case ListMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"sikai00"},"content":"            return new ListMeetingCommand();","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Thing1Thing2":6,"sikai00":4,"junweimoo":4,"rexong":4,"-":70,"ThomasHoooo":4}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"junweimoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"junweimoo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"junweimoo"},"content":"import seedu.address.model.meeting.MeetingDate;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"junweimoo"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"junweimoo"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"junweimoo"},"content":"     * Parses {@code String date} into a {@code MeetingDate}.","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"junweimoo"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"junweimoo"},"content":"    public static MeetingDate parseDate(String date) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"junweimoo"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"junweimoo"},"content":"        LocalDate parsedDate \u003d LocalDate.parse(date);","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"junweimoo"},"content":"        return new MeetingDate(parsedDate);","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"junweimoo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"junweimoo"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"junweimoo"},"content":"     * Parses {@code String time} into a {@code MeetingTime}.","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"junweimoo"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"junweimoo"},"content":"    public static MeetingTime parseTime(String time) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"junweimoo"},"content":"        requireNonNull(time);","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"junweimoo"},"content":"        LocalTime parsedTime \u003d LocalTime.parse(time);","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"junweimoo"},"content":"        return new MeetingTime(parsedTime);","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"junweimoo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Thing1Thing2":4,"junweimoo":22,"-":120}},{"path":"src/main/java/seedu/address/logic/parser/ViewMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.logic.commands.ViewMeetingCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":" * Parses input arguments and creates a new ViewMeetingCommand object","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"public class ViewMeetingCommandParser implements Parser\u003cViewMeetingCommand\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewMeetingCommand","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"     * and returns a ViewMeetingCommand object for execution.","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"    public ViewMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"Thing1Thing2"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Thing1Thing2"},"content":"        Index index;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"        try {","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"Thing1Thing2"},"content":"            index \u003d ParserUtil.parseIndex(argumentMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Thing1Thing2"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Thing1Thing2"},"content":"                    ViewMeetingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Thing1Thing2"},"content":"        return new ViewMeetingCommand(index);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Thing1Thing2":10,"ThomasHoooo":24}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"rexong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    /** {@code Predicate} that always evaluate to true. Used for filtered client list. */","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":"    Predicate\u003cClient\u003e PREDICATE_SHOW_ALL_CLIENTS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"    /** {@code Predicate} that always evaluate to true. Used for filtered meeting list. */","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    Predicate\u003cMeeting\u003e PREDICATE_SHOW_ALL_MEETING \u003d unused -\u003e true;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"rexong"},"content":"     * Returns the user prefs\u0027 MyInsuRec file path.","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"rexong"},"content":"    Path getMyInsuRecFilePath();","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"rexong"},"content":"     * Sets the user prefs\u0027 MyInsuRec file path.","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"rexong"},"content":"    void setMyInsuRecFilePath(Path myInsuRecFilePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"rexong"},"content":"     * Replaces MyInsuRec data with the data in {@code MyInsuRec}.","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"rexong"},"content":"    void setMyInsuRec(ReadOnlyMyInsuRec myInsuRec);","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"rexong"},"content":"    /** Returns the MyInsuRec */","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"rexong"},"content":"    ReadOnlyMyInsuRec getMyInsuRec();","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"rexong"},"content":"     * Returns true if a client with the same identity as {@code client} exists in the MyInsuRec.","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"Thing1Thing2"},"content":"    boolean hasClient(Client client);","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"Thing1Thing2"},"content":"     * Deletes the given client.","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"rexong"},"content":"     * The client must exist in the MyInsuRec.","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"Thing1Thing2"},"content":"    void deleteClient(Client target);","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"Thing1Thing2"},"content":"     * Adds the given client.","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"rexong"},"content":"     * {@code client} must not already exist in the MyInsuRec.","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"Thing1Thing2"},"content":"    void addClient(Client client);","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"junweimoo"},"content":"     * Returns true if a meeting with the same time as {@code meeting} exists in the MyInsuRec.","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"junweimoo"},"content":"    boolean hasMeeting(Meeting meeting);","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"junweimoo"},"content":"     * Adds the given client.","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"junweimoo"},"content":"     * {@code meeting} must not already exist in the MyInsuRec.","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"junweimoo"},"content":"    void addMeeting(Meeting meeting);","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"Thing1Thing2"},"content":"     * Replaces the given client {@code target} with {@code editedClient}.","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"rexong"},"content":"     * {@code target} must exist in the MyInsuRec.","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"rexong"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the MyInsuRec.","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"Thing1Thing2"},"content":"    void setClient(Client target, Client editedClient);","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"Thing1Thing2"},"content":"    /** Returns an unmodifiable view of the filtered client list */","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"Thing1Thing2"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"Thing1Thing2"},"content":"     * Updates the filter of the filtered client list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"Thing1Thing2"},"content":"    void updateFilteredClientList(Predicate\u003cClient\u003e predicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"rexong"},"content":"    void deleteMeeting(Meeting meeting);","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"sikai00"},"content":"    /** Returns an unmodifiable view of the filtered meeting list */","lastModifiedDate":"2022-10-08"},{"lineNumber":106,"author":{"gitId":"sikai00"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2022-10-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":109,"author":{"gitId":"rexong"},"content":"     * Updates the filter of the filtered Meeting list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":112,"author":{"gitId":"sikai00"},"content":"    void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Thing1Thing2":13,"sikai00":6,"junweimoo":5,"rexong":17,"-":72}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"rexong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":" * Represents the in-memory model of the client book data.","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"rexong"},"content":"    private final MyInsuRec myInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"Thing1Thing2"},"content":"    private final FilteredList\u003cClient\u003e filteredClients;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"    private final FilteredList\u003cMeeting\u003e filteredMeetings;","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"rexong"},"content":"     * Initializes a ModelManager with the given myInsuRec and userPrefs.","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"rexong"},"content":"    public ModelManager(ReadOnlyMyInsuRec myInsuRec, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"rexong"},"content":"        requireAllNonNull(myInsuRec, userPrefs);","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"rexong"},"content":"        logger.fine(\"Initializing with client book: \" + myInsuRec + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"rexong"},"content":"        this.myInsuRec \u003d new MyInsuRec(myInsuRec);","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"rexong"},"content":"        filteredClients \u003d new FilteredList\u003c\u003e(this.myInsuRec.getClientList());","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"        filteredMeetings \u003d new FilteredList\u003c\u003e(this.myInsuRec.getMeetingList());","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"rexong"},"content":"        this(new MyInsuRec(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"rexong"},"content":"    public Path getMyInsuRecFilePath() {","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"rexong"},"content":"        return userPrefs.getMyInsuRecFilePath();","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"rexong"},"content":"    public void setMyInsuRecFilePath(Path myInsuRecFilePath) {","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"rexong"},"content":"        requireNonNull(myInsuRecFilePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"rexong"},"content":"        userPrefs.setMyInsuRecFilePath(myInsuRecFilePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"rexong"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d myInsuRec \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"rexong"},"content":"    public void setMyInsuRec(ReadOnlyMyInsuRec myInsuRec) {","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"rexong"},"content":"        this.myInsuRec.resetData(myInsuRec);","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"rexong"},"content":"    public ReadOnlyMyInsuRec getMyInsuRec() {","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"rexong"},"content":"        return myInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"Thing1Thing2"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"Thing1Thing2"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"rexong"},"content":"        return myInsuRec.hasClient(client);","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"Thing1Thing2"},"content":"    public void deleteClient(Client target) {","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"rexong"},"content":"        myInsuRec.removeClient(target);","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"Thing1Thing2"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"rexong"},"content":"        myInsuRec.addClient(client);","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"Thing1Thing2"},"content":"        updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"Thing1Thing2"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"Thing1Thing2"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"rexong"},"content":"        myInsuRec.setClient(target, editedClient);","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"rexong"},"content":"    public void deleteMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"rexong"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"rexong"},"content":"        myInsuRec.removeMeeting(meeting);","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"junweimoo"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"junweimoo"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"junweimoo"},"content":"        return myInsuRec.hasMeeting(meeting);","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"junweimoo"},"content":"    public void addMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"rexong"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"junweimoo"},"content":"        myInsuRec.addMeeting(meeting);","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"Thing1Thing2"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Client List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"Thing1Thing2"},"content":"     * Returns an unmodifiable view of the list of {@code Client} backed by the internal list of","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"ThomasHoooo"},"content":"     * {@code versionedMyInsuRec}","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":143,"author":{"gitId":"Thing1Thing2"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":144,"author":{"gitId":"Thing1Thing2"},"content":"        return filteredClients;","lastModifiedDate":"2022-10-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"Thing1Thing2"},"content":"    public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2022-10-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":150,"author":{"gitId":"Thing1Thing2"},"content":"        filteredClients.setPredicate(predicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":153,"author":{"gitId":"sikai00"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Meeting List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":156,"author":{"gitId":"sikai00"},"content":"     * Returns an unmodifiable view of the list of {@code Meeting} backed by the internal list of","lastModifiedDate":"2022-10-08"},{"lineNumber":157,"author":{"gitId":"ThomasHoooo"},"content":"     * {@code versionedMyInsuRec}","lastModifiedDate":"2022-10-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":160,"author":{"gitId":"sikai00"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2022-10-08"},{"lineNumber":161,"author":{"gitId":"sikai00"},"content":"        return filteredMeetings;","lastModifiedDate":"2022-10-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":165,"author":{"gitId":"sikai00"},"content":"    public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2022-10-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":167,"author":{"gitId":"sikai00"},"content":"        filteredMeetings.setPredicate(predicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"rexong"},"content":"        return myInsuRec.equals(other.myInsuRec)","lastModifiedDate":"2022-10-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":186,"author":{"gitId":"Thing1Thing2"},"content":"                \u0026\u0026 filteredClients.equals(other.filteredClients);","lastModifiedDate":"2022-10-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Thing1Thing2":17,"sikai00":9,"junweimoo":5,"rexong":28,"-":128,"ThomasHoooo":2}},{"path":"src/main/java/seedu/address/model/MyInsuRec.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.UniqueClientList;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.model.meeting.NoConflictMeetingList;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"Thing1Thing2"},"content":" * Wraps all data at the client-book level","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":" * Duplicates are not allowed (by .isSameClient comparison)","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"rexong"},"content":"public class MyInsuRec implements ReadOnlyMyInsuRec {","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":"    private final UniqueClientList clients;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"    private final NoConflictMeetingList meetings;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"Thing1Thing2"},"content":"        clients \u003d new UniqueClientList();","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"        meetings \u003d new NoConflictMeetingList();","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"rexong"},"content":"    public MyInsuRec() {}","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"rexong"},"content":"     * Creates a MyInsuRec using the Clients in the {@code toBeCopied}","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"rexong"},"content":"    public MyInsuRec(ReadOnlyMyInsuRec toBeCopied) {","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"Thing1Thing2"},"content":"     * Replaces the contents of the client list with {@code clients}.","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"Thing1Thing2"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"Thing1Thing2"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"Thing1Thing2"},"content":"        this.clients.setClients(clients);","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"     * Replaces the contents of the client list with {@code meetings}.","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"     * {@code meetings} must not contain duplicate meetings.","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"        this.meetings.setMeetings(meetings);","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"rexong"},"content":"     * Resets the existing data of this {@code MyInsuRec} with {@code newData}.","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"rexong"},"content":"    public void resetData(ReadOnlyMyInsuRec newData) {","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"Thing1Thing2"},"content":"        setClients(newData.getClientList());","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"sikai00"},"content":"        setMeetings(newData.getMeetingList());","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"Thing1Thing2"},"content":"    //// client-level operations","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"Thing1Thing2"},"content":"     * Returns true if a client with the same identity as {@code client} exists in the client book.","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"Thing1Thing2"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"Thing1Thing2"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"Thing1Thing2"},"content":"        return clients.contains(client);","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"Thing1Thing2"},"content":"     * Adds a client to the client book.","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"Thing1Thing2"},"content":"     * The client must not already exist in the client book.","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"Thing1Thing2"},"content":"    public void addClient(Client p) {","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"Thing1Thing2"},"content":"        clients.add(p);","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"Thing1Thing2"},"content":"     * Replaces the given client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"Thing1Thing2"},"content":"     * {@code target} must exist in the client book.","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"Thing1Thing2"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the client book.","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"Thing1Thing2"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"Thing1Thing2"},"content":"        requireNonNull(editedClient);","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"Thing1Thing2"},"content":"        clients.setClient(target, editedClient);","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"Thing1Thing2"},"content":"     * Removes {@code key} from this {@code MyInsuRec}.","lastModifiedDate":"2022-10-08"},{"lineNumber":103,"author":{"gitId":"Thing1Thing2"},"content":"     * {@code key} must exist in MyInsuRec.","lastModifiedDate":"2022-10-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"Thing1Thing2"},"content":"    public void removeClient(Client key) {","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"Thing1Thing2"},"content":"        clients.remove(key);","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"sikai00"},"content":"    //// client-level operations","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":111,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"sikai00"},"content":"     * Adds a meeting to the meeting list.","lastModifiedDate":"2022-10-08"},{"lineNumber":113,"author":{"gitId":"sikai00"},"content":"     * There must not be any timing conflicts with any other meeting on the list.","lastModifiedDate":"2022-10-08"},{"lineNumber":114,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"ThomasHoooo"},"content":"    public void addMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"ThomasHoooo"},"content":"        meetings.add(meeting);","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"rexong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"rexong"},"content":"     * Removes meeting.","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"rexong"},"content":"     * The meeting must exist in MyInsuRec.","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"rexong"},"content":"     * @param meeting","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"rexong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"rexong"},"content":"    public void removeMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"rexong"},"content":"        meetings.remove(meeting);","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"junweimoo"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"junweimoo"},"content":"     * Returns true if a meeting with the same identity as {@code meeting} exists in the meetings book.","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"junweimoo"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"junweimoo"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"junweimoo"},"content":"        return meetings.contains(meeting);","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"junweimoo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"Thing1Thing2"},"content":"        return clients.asUnmodifiableObservableList().size() + \" clients\";","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"Thing1Thing2"},"content":"    public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":144,"author":{"gitId":"Thing1Thing2"},"content":"        return clients.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":147,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":148,"author":{"gitId":"sikai00"},"content":"    public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2022-10-08"},{"lineNumber":149,"author":{"gitId":"sikai00"},"content":"        return meetings.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-08"},{"lineNumber":150,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":151,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"rexong"},"content":"                || (other instanceof MyInsuRec // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"rexong"},"content":"                \u0026\u0026 clients.equals(((MyInsuRec) other).clients));","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"Thing1Thing2"},"content":"        return clients.hashCode();","lastModifiedDate":"2022-10-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Thing1Thing2":34,"sikai00":16,"junweimoo":6,"rexong":17,"-":80,"ThomasHoooo":10}},{"path":"src/main/java/seedu/address/model/ReadOnlyMyInsuRec.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"Thing1Thing2"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"Thing1Thing2"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"rexong"},"content":" * Unmodifiable view of a MyInsuRec","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Thing1Thing2"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"rexong"},"content":"public interface ReadOnlyMyInsuRec {","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"Thing1Thing2"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"Thing1Thing2"},"content":"     * Returns an unmodifiable view of the clients list.","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"Thing1Thing2"},"content":"     * This list will not contain any duplicate clients.","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":"    ObservableList\u003cClient\u003e getClientList();","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"     * Returns an unmodifiable view of the meetings list.","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"     * This list will not contain meetings with any timing conflicts.","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    ObservableList\u003cMeeting\u003e getMeetingList();","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"Thing1Thing2"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"Thing1Thing2":15,"sikai00":7,"rexong":2}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"rexong"},"content":"    Path getMyInsuRecFilePath();","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"rexong":1,"-":15}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"rexong"},"content":"    private Path myInsuRecFilePath \u003d Paths.get(\"data\" , \"myinsurec.json\");","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"rexong"},"content":"        setMyInsuRecFilePath(newUserPrefs.getMyInsuRecFilePath());","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"rexong"},"content":"    public Path getMyInsuRecFilePath() {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"rexong"},"content":"        return myInsuRecFilePath;","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"rexong"},"content":"    public void setMyInsuRecFilePath(Path myInsuRecFilePath) {","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"rexong"},"content":"        requireNonNull(myInsuRecFilePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"rexong"},"content":"        this.myInsuRecFilePath \u003d myInsuRecFilePath;","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"rexong"},"content":"                \u0026\u0026 myInsuRecFilePath.equals(o.myInsuRecFilePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"rexong"},"content":"        return Objects.hash(guiSettings, myInsuRecFilePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"rexong"},"content":"        sb.append(\"\\nLocal data file location : \" + myInsuRecFilePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rexong":10,"-":77}},{"path":"src/main/java/seedu/address/model/client/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"rexong"},"content":" * Represents a Client\u0027s address in MyInsuRec.","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Thing1Thing2"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Thing1Thing2":2,"rexong":1,"-":54}},{"path":"src/main/java/seedu/address/model/client/Client.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"junweimoo"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"rexong"},"content":" * Represents a Client in MyInsuRec.","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"public class Client {","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"rexong"},"content":"    private Meeting meeting;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"Thing1Thing2"},"content":"    public Client(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"junweimoo"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"junweimoo"},"content":"     * Construct a client with meetings","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"junweimoo"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"junweimoo"},"content":"    public Client(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Meeting meeting) {","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"junweimoo"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"junweimoo"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"junweimoo"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"junweimoo"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"junweimoo"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"junweimoo"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"junweimoo"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"junweimoo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"sikai00"},"content":"    public boolean hasMeeting() {","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"sikai00"},"content":"        return meeting !\u003d null;","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"rexong"},"content":"    public Meeting getMeeting() {","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"rexong"},"content":"        return meeting;","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"rexong"},"content":"    public void setMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"rexong"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"Thing1Thing2"},"content":"     * Returns true if both clients have the same name.","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"Thing1Thing2"},"content":"     * This defines a weaker notion of equality between two clients.","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"Thing1Thing2"},"content":"    public boolean isSameClient(Client otherClient) {","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"Thing1Thing2"},"content":"        if (otherClient \u003d\u003d this) {","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"Thing1Thing2"},"content":"        return otherClient !\u003d null","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"Thing1Thing2"},"content":"                \u0026\u0026 otherClient.getName().equals(getName());","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"Thing1Thing2"},"content":"     * Returns true if both clients have the same identity and data fields.","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"Thing1Thing2"},"content":"     * This defines a stronger notion of equality between two clients.","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"Thing1Thing2"},"content":"        if (!(other instanceof Client)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"Thing1Thing2"},"content":"        Client otherClient \u003d (Client) other;","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"Thing1Thing2"},"content":"        return otherClient.getName().equals(getName())","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"Thing1Thing2"},"content":"                \u0026\u0026 otherClient.getPhone().equals(getPhone())","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"Thing1Thing2"},"content":"                \u0026\u0026 otherClient.getEmail().equals(getEmail())","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"Thing1Thing2"},"content":"                \u0026\u0026 otherClient.getAddress().equals(getAddress())","lastModifiedDate":"2022-10-04"},{"lineNumber":122,"author":{"gitId":"Thing1Thing2"},"content":"                \u0026\u0026 otherClient.getTags().equals(getTags());","lastModifiedDate":"2022-10-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Thing1Thing2":18,"sikai00":4,"junweimoo":14,"rexong":10,"-":104}},{"path":"src/main/java/seedu/address/model/client/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"rexong"},"content":" * Represents a Client\u0027s email in MyInsuRec.","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Thing1Thing2":1,"rexong":1,"-":69}},{"path":"src/main/java/seedu/address/model/client/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"rexong"},"content":" * Represents a Client\u0027s name in MyInsuRec.","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Thing1Thing2":1,"rexong":1,"-":57}},{"path":"src/main/java/seedu/address/model/client/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"Thing1Thing2"},"content":" * Tests that a {@code Client}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Thing1Thing2"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"Thing1Thing2"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(client.getName().fullName, keyword));","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Thing1Thing2":5,"-":26}},{"path":"src/main/java/seedu/address/model/client/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"rexong"},"content":" * Represents a Client\u0027s phone number in MyInsuRec.","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Thing1Thing2":1,"rexong":1,"-":51}},{"path":"src/main/java/seedu/address/model/client/UniqueClientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.exceptions.ClientNotFoundException;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":" * A list of clients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":" * A client is considered unique by comparing using {@code Client#isSameClient(Client)}. As such, adding and updating of","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":" * persons uses Client#isSameClient(Client) for equality so as to ensure that the client being added or updated is","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":" * unique in terms of identity in the UniqueClientList. However, the removal of a client uses Client#equals(Object) so","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":" * as to ensure that the client with exactly the same fields will be removed.","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"Thing1Thing2"},"content":" * @see Client#isSameClient(Client)","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"Thing1Thing2"},"content":"public class UniqueClientList implements Iterable\u003cClient\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"Thing1Thing2"},"content":"    private final ObservableList\u003cClient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"Thing1Thing2"},"content":"    private final ObservableList\u003cClient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"Thing1Thing2"},"content":"     * Returns true if the list contains an equivalent client as the given argument.","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Thing1Thing2"},"content":"    public boolean contains(Client toCheck) {","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"Thing1Thing2"},"content":"        return internalList.stream().anyMatch(toCheck::isSameClient);","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"Thing1Thing2"},"content":"     * Adds a client to the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"Thing1Thing2"},"content":"     * The client must not already exist in the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"Thing1Thing2"},"content":"    public void add(Client toAdd) {","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"Thing1Thing2"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"Thing1Thing2"},"content":"     * Replaces the client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"Thing1Thing2"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"Thing1Thing2"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"Thing1Thing2"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"Thing1Thing2"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"Thing1Thing2"},"content":"        if (!target.isSameClient(editedClient) \u0026\u0026 contains(editedClient)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"Thing1Thing2"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"Thing1Thing2"},"content":"        internalList.set(index, editedClient);","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"Thing1Thing2"},"content":"    public void setClient(UniqueClientList replacement) {","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"Thing1Thing2"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"Thing1Thing2"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"Thing1Thing2"},"content":"     * Removes the equivalent client from the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"Thing1Thing2"},"content":"     * The client must exist in the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"Thing1Thing2"},"content":"    public void remove(Client toRemove) {","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":83,"author":{"gitId":"Thing1Thing2"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"Thing1Thing2"},"content":"     * Replaces the contents of this list with {@code clients}.","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"Thing1Thing2"},"content":"     * {@code persons} must not contain duplicate clients.","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"Thing1Thing2"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"Thing1Thing2"},"content":"        requireAllNonNull(clients);","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"Thing1Thing2"},"content":"        if (!clientsAreUnique(clients)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"Thing1Thing2"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"Thing1Thing2"},"content":"        internalList.setAll(clients);","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"Thing1Thing2"},"content":"    public ObservableList\u003cClient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"Thing1Thing2"},"content":"    public Iterator\u003cClient\u003e iterator() {","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"Thing1Thing2"},"content":"                || (other instanceof UniqueClientList // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"Thing1Thing2"},"content":"                        \u0026\u0026 internalList.equals(((UniqueClientList) other).internalList));","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"Thing1Thing2"},"content":"     * Returns true if {@code persons} contains only unique clients.","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"Thing1Thing2"},"content":"    private boolean clientsAreUnique(List\u003cClient\u003e clients) {","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"Thing1Thing2"},"content":"        for (int i \u003d 0; i \u003c clients.size() - 1; i++) {","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"Thing1Thing2"},"content":"            for (int j \u003d i + 1; j \u003c clients.size(); j++) {","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"Thing1Thing2"},"content":"                if (clients.get(i).isSameClient(clients.get(j))) {","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Thing1Thing2":52,"-":86}},{"path":"src/main/java/seedu/address/model/client/exceptions/ClientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"package seedu.address.model.client.exceptions;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"Thing1Thing2"},"content":" * Signals that the operation is unable to find the specified client.","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"Thing1Thing2"},"content":"public class ClientNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"Thing1Thing2":3,"-":3}},{"path":"src/main/java/seedu/address/model/client/exceptions/DuplicateClientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"package seedu.address.model.client.exceptions;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"Thing1Thing2"},"content":" * Signals that the operation will result in duplicate Clients (Clients are considered duplicates if they have the same","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"Thing1Thing2"},"content":"public class DuplicateClientException extends RuntimeException {","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"Thing1Thing2"},"content":"    public DuplicateClientException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"Thing1Thing2"},"content":"        super(\"Operation would result in duplicate clients\");","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Thing1Thing2":5,"-":6}},{"path":"src/main/java/seedu/address/model/meeting/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":" * Represents a Meeting\u0027s description in MyInsuRec.","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"public class Description {","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"    private final String details;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"     * @param description A valid description.","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    public Description(String description) {","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"        // check argument in the future","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"        details \u003d description;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"        return details;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"                || (other instanceof Description","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"                \u0026\u0026 details.equals(((Description) other).details));","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"sikai00":33}},{"path":"src/main/java/seedu/address/model/meeting/Meeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" * Represents a Meeting in MyInsuRec.","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"public class Meeting {","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    private final Client client;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"    private final Description description;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    private final MeetingDate meetingDate;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    private final MeetingTime meetingTime;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"     * Constructs a {@code Meeting}. Every field must be present and not null.","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"     * @param client Client to meet with","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"     * @param description Description of meeting","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"     * @param meetingDate Date of meeting","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"     * @param meetingTime Time of meeting","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    public Meeting(Client client, Description description, MeetingDate meetingDate, MeetingTime meetingTime) {","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"        requireAllNonNull(client, description, meetingDate, meetingTime);","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"        this.client \u003d client;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"        this.meetingDate \u003d meetingDate;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        this.meetingTime \u003d meetingTime;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    public Client getClient() {","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"        return client;","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"    public Description getDescription() {","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"        return description;","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"    public MeetingDate getMeetingDate() {","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"        return meetingDate;","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"    public MeetingTime getMeetingTime() {","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"        return meetingTime;","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"     * Returns true only if both {@code Meetings} refer to the same {@code Client}, have the same description, time and","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"     * date. This defines a strong notion of equality between two {@code Meetings}.","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"    public boolean equals(Meeting other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"            return true;","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"        if (other \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"            return false;","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":"        boolean isSameClient \u003d this.getClient().equals(other.getClient());","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"sikai00"},"content":"        boolean isSameDescription \u003d this.getDescription().equals(other.getDescription());","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"sikai00"},"content":"        boolean isSameMeetingDate \u003d this.getMeetingDate().equals(other.getMeetingDate());","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"sikai00"},"content":"        boolean isSameMeetingTime \u003d this.getMeetingTime().equals(other.getMeetingTime());","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"sikai00"},"content":"        return isSameClient \u0026\u0026 isSameDescription \u0026\u0026 isSameMeetingDate \u0026\u0026 isSameMeetingTime;","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"sikai00"},"content":"     * Returns true if both meetings have the same date and time and conflicts.","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"sikai00"},"content":"     * Null inputs are considered to conflict with all meetings.","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"sikai00"},"content":"     * @return Whether both meetings have the same date and time and conflicts","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"sikai00"},"content":"    public boolean willConflict(Meeting other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"sikai00"},"content":"        if (other \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"sikai00"},"content":"            return true;","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"sikai00"},"content":"        boolean isSameMeetingDate \u003d this.getMeetingDate().equals(other.getMeetingDate());","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"sikai00"},"content":"        boolean isSameMeetingTime \u003d this.getMeetingTime().equals(other.getMeetingTime());","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"sikai00"},"content":"        return isSameMeetingDate \u0026\u0026 isSameMeetingTime;","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"sikai00"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"sikai00"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"sikai00"},"content":"        builder.append(\"Client: \")","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"sikai00"},"content":"                .append(getClient().getName())","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"sikai00"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"sikai00"},"content":"                .append(getDescription())","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"sikai00"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"sikai00"},"content":"                .append(getMeetingDate())","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"sikai00"},"content":"                .append(\"; Time: \")","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"sikai00"},"content":"                .append(getMeetingTime());","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"sikai00"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"sikai00":99,"ThomasHoooo":1}},{"path":"src/main/java/seedu/address/model/meeting/MeetingContainsClientPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rexong"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"rexong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"rexong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"rexong"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"rexong"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"rexong"},"content":" * Tests that a {@code Meeting}\u0027s {@code Client} matches the Client given.","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"rexong"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"rexong"},"content":"public class MeetingContainsClientPredicate implements Predicate\u003cMeeting\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"rexong"},"content":"    private final List\u003cClient\u003e clients;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"rexong"},"content":"    public MeetingContainsClientPredicate(List\u003cClient\u003e clients) {","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"rexong"},"content":"        this.clients \u003d clients;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"rexong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"rexong"},"content":"    public boolean test(Meeting meeting) {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"rexong"},"content":"        return clients.stream()","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"rexong"},"content":"                .anyMatch(client -\u003e client.equals(meeting.getClient()));","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"rexong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"rexong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"rexong"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"rexong"},"content":"                || (other instanceof MeetingContainsClientPredicate","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"rexong"},"content":"                \u0026\u0026 clients.equals(((MeetingContainsClientPredicate) other).clients));","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"rexong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"rexong":30}},{"path":"src/main/java/seedu/address/model/meeting/MeetingDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" * Represents a Meeting\u0027s date in MyInsuRec.","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"public class MeetingDate {","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"     * Constructs a {@code MeetingDate}.","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"     * @param meetingDate A valid meeting date.","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"    public MeetingDate(LocalDate meetingDate) {","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"        requireNonNull(meetingDate);","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"        date \u003d meetingDate;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"        return date.toString();","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"                || (other instanceof MeetingDate","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"                \u0026\u0026 date.equals(((MeetingDate) other).date));","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"sikai00":33}},{"path":"src/main/java/seedu/address/model/meeting/MeetingTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":" * Represents a Meeting\u0027s time in MyInsuRec.","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"public class MeetingTime {","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"    private final LocalTime time;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"     * Constructs a {@code MeetingTime}.","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"     * @param meetingTime A valid meeting time.","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"    public MeetingTime(LocalTime meetingTime) {","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"        requireNonNull(meetingTime);","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"        time \u003d meetingTime;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"        return time.toString();","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"                || (other instanceof MeetingTime","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"                \u0026\u0026 time.equals(((MeetingTime) other).time));","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"sikai00":33}},{"path":"src/main/java/seedu/address/model/meeting/NoConflictMeetingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"import seedu.address.model.meeting.exceptions.ConflictingMeetingException;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"import seedu.address.model.meeting.exceptions.MeetingNotFoundException;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":" * A list of meetings that enforces no timing conflicts between its elements and does not allow nulls.","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":" * A meeting is considered to have no timing conflict with another by comparing using {@code Meeting#willConflict}. As","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":" * such, adding and updating of meetings uses Meeting#willConflict(Meeting) for equality to ensure that the meeting","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":" * being added or updated does not conflict with other Meetings in the UniqueMeetingList. However, the removal of a","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":" * meeting uses Meeting#equals(Object) to ensure that the meeting with exactly the same fields will be removed.","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":" * \u003cbr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":" *","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":" * @see Meeting#willConflict(Meeting)","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"public class NoConflictMeetingList implements Iterable\u003cMeeting\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    private final ObservableList\u003cMeeting\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    private final ObservableList\u003cMeeting\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"     * Returns true if the list contains a conflicting meeting as the given argument.","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"     * Any attempts to add a meeting that already exists in the list will be considered to be conflicting, even if they","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"     * are referring to the exact same meeting.","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"    public boolean contains(Meeting toCheck) {","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"        return internalList.stream().anyMatch(toCheck::willConflict);","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"     * Adds a meeting to the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"     * The meeting must not conflict with any meetings in the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"    public void add(Meeting toAdd) {","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"            throw new ConflictingMeetingException();","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"     * Replaces the meeting {@code target} in the list with {@code editedMeeting}.","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"     * The {@code editedMeeting} must not conflict with another existing meeting in the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"sikai00"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"sikai00"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"sikai00"},"content":"        if (contains(editedMeeting) \u0026\u0026 !target.willConflict(editedMeeting)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"sikai00"},"content":"            // Any timing conflicts with the original timing is okay","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"sikai00"},"content":"            throw new ConflictingMeetingException();","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"sikai00"},"content":"        internalList.set(index, editedMeeting);","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"ThomasHoooo"},"content":"    public void setMeeting(NoConflictMeetingList replacement) {","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"ThomasHoooo"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"ThomasHoooo"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"sikai00"},"content":"     * Removes the equivalent meeting from the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"sikai00"},"content":"     * The meeting must exist in the list.","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"sikai00"},"content":"    public void remove(Meeting toRemove) {","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"sikai00"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"sikai00"},"content":"        if (!internalList.remove(toRemove)) { // Checks equivalence through Meeting#equals","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"sikai00"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"sikai00"},"content":"     * Replaces the contents of this list with {@code meetings}.","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"sikai00"},"content":"     * {@code meetings} must not contain conflicting meetings.","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"sikai00"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"sikai00"},"content":"        requireAllNonNull(meetings);","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"sikai00"},"content":"        if (!meetingsDoNotConflict(meetings)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"sikai00"},"content":"            throw new ConflictingMeetingException();","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"sikai00"},"content":"        internalList.setAll(meetings);","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"sikai00"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"sikai00"},"content":"    public ObservableList\u003cMeeting\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"sikai00"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"sikai00"},"content":"    public Iterator\u003cMeeting\u003e iterator() {","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"sikai00"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"sikai00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"sikai00"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"sikai00"},"content":"                || (other instanceof NoConflictMeetingList // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"sikai00"},"content":"                \u0026\u0026 internalList.equals(((NoConflictMeetingList) other).internalList));","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":122,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":123,"author":{"gitId":"sikai00"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"sikai00"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-04"},{"lineNumber":125,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"sikai00"},"content":"     * Returns true if {@code meetings} do not contain conflicting meetings.","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"sikai00"},"content":"    private boolean meetingsDoNotConflict(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"sikai00"},"content":"        for (int i \u003d 0; i \u003c meetings.size() - 1; i++) {","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"sikai00"},"content":"            for (int j \u003d i + 1; j \u003c meetings.size(); j++) {","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"sikai00"},"content":"                if (meetings.get(i).willConflict(meetings.get(j))) {","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"sikai00"},"content":"                    return false;","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"sikai00"},"content":"                }","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"sikai00"},"content":"            }","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"sikai00"},"content":"        return true;","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"sikai00":135,"ThomasHoooo":5}},{"path":"src/main/java/seedu/address/model/meeting/exceptions/ConflictingMeetingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package seedu.address.model.meeting.exceptions;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":" * Signals that the operation will result in conflicting {@code Meeting}.","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"public class ConflictingMeetingException extends RuntimeException {","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"    public ConflictingMeetingException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"        super(\"Operation would result in conflicting meetings\");","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"sikai00":10}},{"path":"src/main/java/seedu/address/model/meeting/exceptions/MeetingNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package seedu.address.model.meeting.exceptions;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":" * Signals that the operation is unable to find the specified meeting.","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"public class MeetingNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"sikai00":6}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"rexong"},"content":" * Represents a Tag in MyInsuRec.","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rexong":1,"-":53}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"rexong"},"content":"import seedu.address.model.MyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"rexong"},"content":"import seedu.address.model.ReadOnlyMyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"rexong"},"content":" * Contains utility methods for populating {@code MyInsuRec} with sample data.","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"Thing1Thing2"},"content":"    public static Client[] getSampleClients() {","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"Thing1Thing2"},"content":"        return new Client[] {","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"Thing1Thing2"},"content":"            new Client(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":25,"author":{"gitId":"Thing1Thing2"},"content":"            new Client(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":28,"author":{"gitId":"Thing1Thing2"},"content":"            new Client(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"Thing1Thing2"},"content":"            new Client(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"Thing1Thing2"},"content":"            new Client(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"Thing1Thing2"},"content":"            new Client(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"rexong"},"content":"    public static ReadOnlyMyInsuRec getSampleMyInsuRec() {","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"rexong"},"content":"        MyInsuRec sampleAb \u003d new MyInsuRec();","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Thing1Thing2"},"content":"        for (Client sampleClient : getSampleClients()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"Thing1Thing2"},"content":"            sampleAb.addClient(sampleClient);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Thing1Thing2":15,"rexong":5,"-":40}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedClient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"junweimoo"},"content":"import com.fasterxml.jackson.annotation.JsonIdentityInfo;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"junweimoo"},"content":"import com.fasterxml.jackson.annotation.ObjectIdGenerators;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"junweimoo"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Thing1Thing2"},"content":" * Jackson-friendly version of {@link Client}.","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"junweimoo"},"content":"@JsonIdentityInfo(generator \u003d ObjectIdGenerators.UUIDGenerator.class, property \u003d \"@UUID\")","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"junweimoo"},"content":"class JsonAdaptedClient {","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"Thing1Thing2"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Client\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"junweimoo"},"content":"    private final List\u003cJsonAdaptedMeeting\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"Thing1Thing2"},"content":"     * Constructs a {@code JsonAdaptedClient} with the given client details.","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"junweimoo"},"content":"    public JsonAdaptedClient(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"junweimoo"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"junweimoo"},"content":"                             @JsonProperty(\"meetings\") List\u003cJsonAdaptedMeeting\u003e meetings) {","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"junweimoo"},"content":"        if (meetings !\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"junweimoo"},"content":"            this.meetings.addAll(meetings);","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"junweimoo"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"Thing1Thing2"},"content":"     * Converts a given {@code Client} into this class for Jackson use.","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"Thing1Thing2"},"content":"    public JsonAdaptedClient(Client source) {","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"junweimoo"},"content":"        if (source.getMeeting() !\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"junweimoo"},"content":"            meetings.add(new JsonAdaptedMeeting(source.getMeeting(), this));","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"junweimoo"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"junweimoo"},"content":"     * Converts a given {@code Client} and {@Code JsonAdaptedMeeting} into this class for Jackson use.","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"junweimoo"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"junweimoo"},"content":"    public JsonAdaptedClient(Client source, JsonAdaptedMeeting adaptedMeeting) {","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"junweimoo"},"content":"        meetings.add(adaptedMeeting);","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"junweimoo"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"junweimoo"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"junweimoo"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"junweimoo"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"junweimoo"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"junweimoo"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"junweimoo"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"junweimoo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"Thing1Thing2"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Client} object.","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"Thing1Thing2"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted client.","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"Thing1Thing2"},"content":"    public Client toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"Thing1Thing2"},"content":"        final List\u003cTag\u003e clientTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"Thing1Thing2"},"content":"            clientTags.add(tag.toModelType());","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"Thing1Thing2"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(clientTags);","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"junweimoo"},"content":"        if (!meetings.isEmpty()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"junweimoo"},"content":"            Client client \u003d new Client(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"junweimoo"},"content":"            final Meeting meeting \u003d meetings.get(0).toModelType(client);","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"junweimoo"},"content":"            client.setMeeting(meeting);","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"junweimoo"},"content":"            return client;","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"junweimoo"},"content":"        } else {","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"junweimoo"},"content":"            return new Client(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"junweimoo"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"Thing1Thing2":16,"junweimoo":36,"-":89}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedMeeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junweimoo"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"junweimoo"},"content":"import com.fasterxml.jackson.annotation.JsonIdentityInfo;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"junweimoo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"junweimoo"},"content":"import com.fasterxml.jackson.annotation.ObjectIdGenerators;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"junweimoo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"junweimoo"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"junweimoo"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"junweimoo"},"content":"import seedu.address.model.meeting.Description;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"junweimoo"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"junweimoo"},"content":"import seedu.address.model.meeting.MeetingDate;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"junweimoo"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"junweimoo"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"junweimoo"},"content":" * Jackson-friendly version of {@link seedu.address.model.meeting.Meeting}.","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"junweimoo"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"junweimoo"},"content":"@JsonIdentityInfo(generator \u003d ObjectIdGenerators.UUIDGenerator.class, property \u003d \"@UUID\")","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"junweimoo"},"content":"class JsonAdaptedMeeting {","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"junweimoo"},"content":"    private JsonAdaptedClient client;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"junweimoo"},"content":"    @JsonProperty","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"junweimoo"},"content":"    private String description;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"junweimoo"},"content":"    private String meetingDate;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"junweimoo"},"content":"    private String meetingTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"junweimoo"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"junweimoo"},"content":"     * Converts a given {@code Meeting} into this class for Jackson use.","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"junweimoo"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"junweimoo"},"content":"    JsonAdaptedMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"junweimoo"},"content":"        client \u003d new JsonAdaptedClient(meeting.getClient(), this);","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"junweimoo"},"content":"        description \u003d meeting.getDescription().toString();","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"junweimoo"},"content":"        meetingDate \u003d meeting.getMeetingDate().toString();","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"junweimoo"},"content":"        meetingTime \u003d meeting.getMeetingTime().toString();","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"junweimoo"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"junweimoo"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"junweimoo"},"content":"     * Converts a given {@code Meeting} and {@code JsonAdaptedClient} into this class for Jackson use.","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"junweimoo"},"content":"     * @param meeting","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"junweimoo"},"content":"     * @param adaptedClient","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"junweimoo"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"junweimoo"},"content":"    JsonAdaptedMeeting(Meeting meeting, JsonAdaptedClient adaptedClient) {","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"junweimoo"},"content":"        client \u003d adaptedClient;","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"junweimoo"},"content":"        description \u003d meeting.getDescription().toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"junweimoo"},"content":"        meetingDate \u003d meeting.getMeetingDate().toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"junweimoo"},"content":"        meetingTime \u003d meeting.getMeetingTime().toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"junweimoo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"junweimoo"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"junweimoo"},"content":"     * Default constructor for {@code JsonAdaptedMeeting}","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"junweimoo"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"junweimoo"},"content":"    public JsonAdaptedMeeting() {","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"junweimoo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"junweimoo"},"content":"    public void setClient(JsonAdaptedClient client) {","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"junweimoo"},"content":"        this.client \u003d client;","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"junweimoo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"junweimoo"},"content":"    public JsonAdaptedClient getClient() {","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"junweimoo"},"content":"        return client;","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"junweimoo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"junweimoo"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"junweimoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"junweimoo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"junweimoo"},"content":"    public String getDescription() {","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"junweimoo"},"content":"        return description;","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"junweimoo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"junweimoo"},"content":"    public void setMeetingDate(String meetingDate) {","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"junweimoo"},"content":"        this.meetingDate \u003d meetingDate;","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"junweimoo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"junweimoo"},"content":"    public String getMeetingDate() {","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"junweimoo"},"content":"        return meetingDate;","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"junweimoo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"junweimoo"},"content":"    public void setMeetingTime(String meetingTime) {","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"junweimoo"},"content":"        this.meetingTime \u003d meetingTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"junweimoo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"junweimoo"},"content":"    public String getMeetingTime() {","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"junweimoo"},"content":"        return meetingTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"junweimoo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"junweimoo"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"junweimoo"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Meeting} object.","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"junweimoo"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"junweimoo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted meeting.","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"junweimoo"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"junweimoo"},"content":"    public Meeting toModelType(Client client) throws IllegalValueException {","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"junweimoo"},"content":"        Description modelDescription \u003d new Description(description);","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"junweimoo"},"content":"        MeetingDate modelMeetingDate \u003d ParserUtil.parseDate(meetingDate);","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"junweimoo"},"content":"        MeetingTime modelMeetingTime \u003d ParserUtil.parseTime(meetingTime);","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"junweimoo"},"content":"        return new Meeting(client, modelDescription, modelMeetingDate, modelMeetingTime);","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"junweimoo"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"junweimoo"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"junweimoo":99}},{"path":"src/main/java/seedu/address/storage/JsonMyInsuRecStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"rexong"},"content":"import seedu.address.model.ReadOnlyMyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"rexong"},"content":" * A class to access MyInsuRec data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"rexong"},"content":"public class JsonMyInsuRecStorage implements MyInsuRecStorage {","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"rexong"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonMyInsuRecStorage.class);","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"rexong"},"content":"    public JsonMyInsuRecStorage(Path filePath) {","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"rexong"},"content":"    public Path getMyInsuRecFilePath() {","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"rexong"},"content":"    public Optional\u003cReadOnlyMyInsuRec\u003e readMyInsuRec() throws DataConversionException {","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"rexong"},"content":"        return readMyInsuRec(filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"rexong"},"content":"     * Similar to {@link #readMyInsuRec()}.","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"rexong"},"content":"    public Optional\u003cReadOnlyMyInsuRec\u003e readMyInsuRec(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"rexong"},"content":"        Optional\u003cJsonSerializableMyInsuRec\u003e jsonMyInsuRec \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"rexong"},"content":"                filePath, JsonSerializableMyInsuRec.class);","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"rexong"},"content":"        if (!jsonMyInsuRec.isPresent()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"rexong"},"content":"            return Optional.of(jsonMyInsuRec.get().toModelType());","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"rexong"},"content":"    public void saveMyInsuRec(ReadOnlyMyInsuRec myInsuRec) throws IOException {","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"rexong"},"content":"        saveMyInsuRec(myInsuRec, filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"rexong"},"content":"     * Similar to {@link #saveMyInsuRec(ReadOnlyMyInsuRec)}.","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"rexong"},"content":"    public void saveMyInsuRec(ReadOnlyMyInsuRec myInsuRec, Path filePath) throws IOException {","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"rexong"},"content":"        requireNonNull(myInsuRec);","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"rexong"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableMyInsuRec(myInsuRec), filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"rexong":20,"-":60}},{"path":"src/main/java/seedu/address/storage/JsonSerializableMyInsuRec.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"rexong"},"content":"import seedu.address.model.MyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"rexong"},"content":"import seedu.address.model.ReadOnlyMyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"rexong"},"content":" * An Immutable MyInsuRec that is serializable to JSON format.","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"rexong"},"content":"@JsonRootName(value \u003d \"myinsurec\")","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"rexong"},"content":"class JsonSerializableMyInsuRec {","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"Thing1Thing2"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"Clients list contains duplicate client(s).\";","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"Thing1Thing2"},"content":"    private final List\u003cJsonAdaptedClient\u003e clients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"rexong"},"content":"     * Constructs a {@code JsonSerializableMyInsuRec} with the given clients.","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"rexong"},"content":"    public JsonSerializableMyInsuRec(@JsonProperty(\"clients\") List\u003cJsonAdaptedClient\u003e clients) {","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"Thing1Thing2"},"content":"        this.clients.addAll(clients);","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"rexong"},"content":"     * Converts a given {@code ReadOnlyMyInsuRec} into this class for Jackson use.","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"rexong"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableMyInsuRec}.","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"rexong"},"content":"    public JsonSerializableMyInsuRec(ReadOnlyMyInsuRec source) {","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Thing1Thing2"},"content":"        clients.addAll(source.getClientList().stream().map(JsonAdaptedClient::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"rexong"},"content":"     * Converts this MyInsuRec into the model\u0027s {@code MyInsuRec} object.","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"rexong"},"content":"    public MyInsuRec toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"rexong"},"content":"        MyInsuRec myInsuRec \u003d new MyInsuRec();","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Thing1Thing2"},"content":"        for (JsonAdaptedClient jsonAdaptedClient : clients) {","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"Thing1Thing2"},"content":"            Client person \u003d jsonAdaptedClient.toModelType();","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"rexong"},"content":"            if (myInsuRec.hasClient(person)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"Thing1Thing2"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"rexong"},"content":"            myInsuRec.addClient(person);","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"            if (person.hasMeeting()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"                myInsuRec.addMeeting(person.getMeeting());","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"rexong"},"content":"        return myInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Thing1Thing2":8,"sikai00":3,"rexong":17,"-":36}},{"path":"src/main/java/seedu/address/storage/MyInsuRecStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rexong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"rexong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"rexong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"rexong"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"rexong"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"rexong"},"content":"import seedu.address.model.MyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"rexong"},"content":"import seedu.address.model.ReadOnlyMyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"rexong"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"rexong"},"content":" * Represents a storage for {@link MyInsuRec}.","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"rexong"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"rexong"},"content":"public interface MyInsuRecStorage {","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"rexong"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"rexong"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"rexong"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"rexong"},"content":"    Path getMyInsuRecFilePath();","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"rexong"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"rexong"},"content":"     * Returns MyInsuRec data as a {@link ReadOnlyMyInsuRec}.","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"rexong"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"rexong"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"rexong"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"rexong"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"rexong"},"content":"    Optional\u003cReadOnlyMyInsuRec\u003e readMyInsuRec() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"rexong"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"rexong"},"content":"     * @see #getMyInsuRecFilePath()","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"rexong"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"rexong"},"content":"    Optional\u003cReadOnlyMyInsuRec\u003e readMyInsuRec(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"rexong"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"rexong"},"content":"     * Saves the given {@link ReadOnlyMyInsuRec} to the storage.","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"rexong"},"content":"     * @param myInsuRec cannot be null.","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"rexong"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"rexong"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"rexong"},"content":"    void saveMyInsuRec(ReadOnlyMyInsuRec myInsuRec) throws IOException;","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"rexong"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"rexong"},"content":"     * @see #saveMyInsuRec(ReadOnlyMyInsuRec)","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"rexong"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"rexong"},"content":"    void saveMyInsuRec(ReadOnlyMyInsuRec myInsuRec, Path filePath) throws IOException;","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"rexong"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"rexong":46}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"rexong"},"content":"import seedu.address.model.ReadOnlyMyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"rexong"},"content":"public interface Storage extends MyInsuRecStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"rexong"},"content":"    Path getMyInsuRecFilePath();","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"rexong"},"content":"    Optional\u003cReadOnlyMyInsuRec\u003e readMyInsuRec() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"rexong"},"content":"    void saveMyInsuRec(ReadOnlyMyInsuRec myInsuRec) throws IOException;","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"rexong":5,"-":27}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"rexong"},"content":"import seedu.address.model.ReadOnlyMyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"rexong"},"content":" * Manages storage of MyInsuRec data in local storage.","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"rexong"},"content":"    private MyInsuRecStorage myInsuRecStorage;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"rexong"},"content":"     * Creates a {@code StorageManager} with the given {@code MyInsuRecStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"rexong"},"content":"    public StorageManager(MyInsuRecStorage myInsuRecStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"rexong"},"content":"        this.myInsuRecStorage \u003d myInsuRecStorage;","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"rexong"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d MyInsuRec methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"rexong"},"content":"    public Path getMyInsuRecFilePath() {","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"rexong"},"content":"        return myInsuRecStorage.getMyInsuRecFilePath();","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"rexong"},"content":"    public Optional\u003cReadOnlyMyInsuRec\u003e readMyInsuRec() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"rexong"},"content":"        return readMyInsuRec(myInsuRecStorage.getMyInsuRecFilePath());","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"rexong"},"content":"    public Optional\u003cReadOnlyMyInsuRec\u003e readMyInsuRec(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"rexong"},"content":"        return myInsuRecStorage.readMyInsuRec(filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"rexong"},"content":"    public void saveMyInsuRec(ReadOnlyMyInsuRec myInsuRec) throws IOException {","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"rexong"},"content":"        saveMyInsuRec(myInsuRec, myInsuRecStorage.getMyInsuRecFilePath());","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"rexong"},"content":"    public void saveMyInsuRec(ReadOnlyMyInsuRec myInsuRec, Path filePath) throws IOException {","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"rexong"},"content":"        myInsuRecStorage.saveMyInsuRec(myInsuRec, filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rexong":17,"-":61}},{"path":"src/main/java/seedu/address/ui/ClientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"Thing1Thing2"},"content":" * An UI component that displays information of a {@code Client}.","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":"public class ClientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"    private static final String FXML \u003d \"ClientListCard.fxml\";","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"Thing1Thing2"},"content":"    public final Client client;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"Thing1Thing2"},"content":"     * Creates a {@code ClientCode} with the given {@code Client} and index to display.","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"Thing1Thing2"},"content":"    public ClientCard(Client client, int displayedIndex) {","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"Thing1Thing2"},"content":"        this.client \u003d client;","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"Thing1Thing2"},"content":"        name.setText(client.getName().fullName);","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"Thing1Thing2"},"content":"        phone.setText(client.getPhone().value);","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"Thing1Thing2"},"content":"        address.setText(client.getAddress().value);","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"Thing1Thing2"},"content":"        email.setText(client.getEmail().value);","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"Thing1Thing2"},"content":"        client.getTags().stream()","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"Thing1Thing2"},"content":"        if (!(other instanceof ClientCard)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"Thing1Thing2"},"content":"        ClientCard card \u003d (ClientCard) other;","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"Thing1Thing2"},"content":"                \u0026\u0026 client.equals(card.client);","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Thing1Thing2":16,"-":61}},{"path":"src/main/java/seedu/address/ui/ClientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"Thing1Thing2"},"content":" * Panel containing the list of clients.","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":"public class ClientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"    private static final String FXML \u003d \"ClientListPanel.fxml\";","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ClientListPanel.class);","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"Thing1Thing2"},"content":"    private ListView\u003cClient\u003e clientListView;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"Thing1Thing2"},"content":"     * Creates a {@code ClientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"Thing1Thing2"},"content":"    public ClientListPanel(ObservableList\u003cClient\u003e clientList) {","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"Thing1Thing2"},"content":"        clientListView.setItems(clientList);","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"Thing1Thing2"},"content":"        clientListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"Thing1Thing2"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Client} using a {@code ClientCard}.","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"Thing1Thing2"},"content":"    class PersonListViewCell extends ListCell\u003cClient\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"Thing1Thing2"},"content":"        protected void updateItem(Client client, boolean empty) {","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"Thing1Thing2"},"content":"            super.updateItem(client, empty);","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"Thing1Thing2"},"content":"            if (empty || client \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"Thing1Thing2"},"content":"                setGraphic(new ClientCard(client, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Thing1Thing2":16,"-":33}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"rexong"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-w16-4.github.io/tp/UserGuide\";","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"rexong":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"Thing1Thing2"},"content":"    private ClientListPanel clientListPanel;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"    private MeetingListPanel meetingListPanel;","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"Thing1Thing2"},"content":"    private StackPane clientListPanelPlaceholder;","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"Thing1Thing2"},"content":"        clientListPanel \u003d new ClientListPanel(logic.getFilteredClientList());","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"Thing1Thing2"},"content":"        clientListPanelPlaceholder.getChildren().add(clientListPanel.getRoot());","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"sikai00"},"content":"        meetingListPanel \u003d new MeetingListPanel(logic.getFilteredMeetingList());","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"sikai00"},"content":"        // Depend on the command called, clientListPanel/meetingListPanel will swap with the panel in placeholder.","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"sikai00"},"content":"        // However, we will start with clientListPanel.","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"rexong"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getMyInsuRecFilePath());","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":171,"author":{"gitId":"Thing1Thing2"},"content":"    public ClientListPanel getClientListPanel() {","lastModifiedDate":"2022-10-04"},{"lineNumber":172,"author":{"gitId":"Thing1Thing2"},"content":"        return clientListPanel;","lastModifiedDate":"2022-10-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"sikai00"},"content":"    private void setListPanelToClient() {","lastModifiedDate":"2022-10-09"},{"lineNumber":176,"author":{"gitId":"sikai00"},"content":"        clientListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-10-09"},{"lineNumber":177,"author":{"gitId":"sikai00"},"content":"        clientListPanelPlaceholder.getChildren().add(clientListPanel.getRoot());","lastModifiedDate":"2022-10-09"},{"lineNumber":178,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":179,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":180,"author":{"gitId":"sikai00"},"content":"    private void setListPanelToMeeting() {","lastModifiedDate":"2022-10-09"},{"lineNumber":181,"author":{"gitId":"sikai00"},"content":"        clientListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-10-09"},{"lineNumber":182,"author":{"gitId":"sikai00"},"content":"        clientListPanelPlaceholder.getChildren().add(meetingListPanel.getRoot());","lastModifiedDate":"2022-10-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"sikai00"},"content":"            if (commandResult.isClientSpecific()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":205,"author":{"gitId":"sikai00"},"content":"                setListPanelToClient();","lastModifiedDate":"2022-10-09"},{"lineNumber":206,"author":{"gitId":"sikai00"},"content":"            } else if (commandResult.isMeetingSpecific()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":207,"author":{"gitId":"sikai00"},"content":"                setListPanelToMeeting();","lastModifiedDate":"2022-10-09"},{"lineNumber":208,"author":{"gitId":"sikai00"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":209,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Thing1Thing2":6,"sikai00":18,"rexong":1,"-":192}},{"path":"src/main/java/seedu/address/ui/MeetingCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":" * An UI component that displays information of a {@code Meeting}.","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"public class MeetingCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    private static final String FXML \u003d \"MeetingListCard.fxml\";","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    public final Meeting meeting;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"    private Label id;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"     * Creates a {@code MeetingCard} with the given {@code Meeting} and index to display.","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"    public MeetingCard(Meeting meeting, int displayedIndex) {","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"        super(FXML);","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"            return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"        if (!(other instanceof MeetingCard)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"            return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"        // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"        MeetingCard card \u003d (MeetingCard) other;","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"                \u0026\u0026 meeting.equals(card.meeting);","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"sikai00":57}},{"path":"src/main/java/seedu/address/ui/MeetingListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":" * Panel containing the list of meetings.","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"public class MeetingListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"    private static final String FXML \u003d \"MeetingListPanel.fxml\";","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MeetingListPanel.class);","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    private ListView\u003cMeeting\u003e meetingListView;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"     * Creates a {@code MeetingListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    public MeetingListPanel(ObservableList\u003cMeeting\u003e meetingList) {","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"        super(FXML);","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        meetingListView.setItems(meetingList);","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"        meetingListView.setCellFactory(listView -\u003e new MeetingListViewCell());","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Meeting} using a {@code MeetingCard}.","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"    class MeetingListViewCell extends ListCell\u003cMeeting\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"        protected void updateItem(Meeting meeting, boolean empty) {","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"            super.updateItem(meeting, empty);","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"            if (empty || meeting \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"                setText(null);","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"            } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"                setGraphic(new MeetingCard(meeting, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"sikai00":50}},{"path":"src/main/resources/view/ClientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"Thing1Thing2"},"content":"  \u003cListView fx:id\u003d\"clientListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Thing1Thing2":1,"-":7}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"Thing1Thing2"},"content":"        \u003cVBox fx:id\u003d\"clientList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"Thing1Thing2"},"content":"          \u003cStackPane fx:id\u003d\"clientListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Thing1Thing2":2,"-":58}},{"path":"src/main/resources/view/MeetingListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"\u003cHBox id\u003d\"meetingCardPane\" fx:id\u003d\"meetingCardPane\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"sikai00":34}},{"path":"src/main/resources/view/MeetingListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"  \u003cListView fx:id\u003d\"meetingListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"sikai00":8}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"Thing1Thing2"},"content":"        final Index fifthClientIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"Thing1Thing2"},"content":"        assertTrue(fifthClientIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"Thing1Thing2"},"content":"        assertTrue(fifthClientIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"Thing1Thing2"},"content":"        assertTrue(fifthClientIndex.equals(fifthClientIndex));","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"Thing1Thing2"},"content":"        assertFalse(fifthClientIndex.equals(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"Thing1Thing2"},"content":"        assertFalse(fifthClientIndex.equals(5.0f));","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"Thing1Thing2"},"content":"        assertFalse(fifthClientIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Thing1Thing2":7,"-":53}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.testutil.TypicalClients.AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.logic.commands.AddClientCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"rexong"},"content":"import seedu.address.model.ReadOnlyMyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"rexong"},"content":"import seedu.address.storage.JsonMyInsuRecStorage;","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"rexong"},"content":"        JsonMyInsuRecStorage myInsuRecStorage \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"rexong"},"content":"                new JsonMyInsuRecStorage(temporaryFolder.resolve(\"myInsuRec.json\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"rexong"},"content":"        StorageManager storage \u003d new StorageManager(myInsuRecStorage, userPrefsStorage);","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"Thing1Thing2"},"content":"        String deleteCommand \u003d \"delClient 9\";","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"Thing1Thing2"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"rexong"},"content":"        // Setup LogicManager with JsonMyInsuRecIoExceptionThrowingStub","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"rexong"},"content":"        JsonMyInsuRecStorage myInsuRecStorage \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"rexong"},"content":"                new JsonMyInsuRecIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionMyInsuRec.json\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"rexong"},"content":"        StorageManager storage \u003d new StorageManager(myInsuRecStorage, userPrefsStorage);","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"Thing1Thing2"},"content":"        String addCommand \u003d AddClientCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"Thing1Thing2"},"content":"        Client expectedClient \u003d new ClientBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"Thing1Thing2"},"content":"        expectedModel.addClient(expectedClient);","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"Thing1Thing2"},"content":"    public void getFilteredClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredClientList().remove(0));","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"rexong"},"content":"        Model expectedModel \u003d new ModelManager(model.getMyInsuRec(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"rexong"},"content":"    private static class JsonMyInsuRecIoExceptionThrowingStub extends JsonMyInsuRecStorage {","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"rexong"},"content":"        private JsonMyInsuRecIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"rexong"},"content":"        public void saveMyInsuRec(ReadOnlyMyInsuRec myInsuRec, Path filePath) throws IOException {","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Thing1Thing2":12,"rexong":13,"-":137}},{"path":"src/test/java/seedu/address/logic/commands/AddClientCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalMyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":" * Contains integration tests (interaction with the Model) for {@code AddClientCommand}.","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":"public class AddClientCommandIntegrationTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"rexong"},"content":"        model \u003d new ModelManager(getTypicalMyInsuRec(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"Thing1Thing2"},"content":"    public void execute_newClient_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"Thing1Thing2"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"rexong"},"content":"        Model expectedModel \u003d new ModelManager(model.getMyInsuRec(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Thing1Thing2"},"content":"        expectedModel.addClient(validClient);","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"Thing1Thing2"},"content":"        assertCommandSuccess(new AddClientCommand(validClient), model,","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"Thing1Thing2"},"content":"                String.format(AddClientCommand.MESSAGE_SUCCESS, validClient), expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"Thing1Thing2"},"content":"    public void execute_duplicateClient_throwsCommandException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"rexong"},"content":"        Client personInList \u003d model.getMyInsuRec().getClientList().get(0);","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Thing1Thing2"},"content":"        assertCommandFailure(new AddClientCommand(personInList), model, AddClientCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Thing1Thing2":12,"rexong":4,"-":29}},{"path":"src/test/java/seedu/address/logic/commands/AddClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"rexong"},"content":"import seedu.address.model.MyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"rexong"},"content":"import seedu.address.model.ReadOnlyMyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"Thing1Thing2"},"content":"public class AddClientCommandTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"Thing1Thing2"},"content":"    public void constructor_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddClientCommand(null));","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"Thing1Thing2"},"content":"    public void execute_clientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"Thing1Thing2"},"content":"        ModelStubAcceptingClientAdded modelStub \u003d new ModelStubAcceptingClientAdded();","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"Thing1Thing2"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"Thing1Thing2"},"content":"        CommandResult commandResult \u003d new AddClientCommand(validClient).execute(modelStub);","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"Thing1Thing2"},"content":"        assertEquals(String.format(AddClientCommand.MESSAGE_SUCCESS, validClient), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"Thing1Thing2"},"content":"        assertEquals(Arrays.asList(validClient), modelStub.clientsAdded);","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"Thing1Thing2"},"content":"    public void execute_duplicateClient_throwsCommandException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"Thing1Thing2"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"Thing1Thing2"},"content":"        AddClientCommand addCommand \u003d new AddClientCommand(validClient);","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"Thing1Thing2"},"content":"        ModelStub modelStub \u003d new ModelStubWithClient(validClient);","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"Thing1Thing2"},"content":"                AddClientCommand.MESSAGE_DUPLICATE_CLIENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"Thing1Thing2"},"content":"        Client alice \u003d new ClientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"Thing1Thing2"},"content":"        Client bob \u003d new ClientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"Thing1Thing2"},"content":"        AddClientCommand addAliceCommand \u003d new AddClientCommand(alice);","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"Thing1Thing2"},"content":"        AddClientCommand addBobCommand \u003d new AddClientCommand(bob);","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"Thing1Thing2"},"content":"        AddClientCommand addAliceCommandCopy \u003d new AddClientCommand(alice);","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"Thing1Thing2"},"content":"        // different Client -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"rexong"},"content":"        public Path getMyInsuRecFilePath() {","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"rexong"},"content":"        public void setMyInsuRecFilePath(Path myInsuRecFilePath) {","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"Thing1Thing2"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"rexong"},"content":"        public void setMyInsuRec(ReadOnlyMyInsuRec myInsuRec) {","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"rexong"},"content":"        public ReadOnlyMyInsuRec getMyInsuRec() {","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"Thing1Thing2"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"Thing1Thing2"},"content":"        public void deleteClient(Client target) {","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"Thing1Thing2"},"content":"        public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"junweimoo"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"junweimoo"},"content":"        public void addMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"junweimoo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"junweimoo"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"junweimoo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"junweimoo"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"junweimoo"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"junweimoo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"Thing1Thing2"},"content":"        public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"Thing1Thing2"},"content":"        public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":163,"author":{"gitId":"sikai00"},"content":"        @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":164,"author":{"gitId":"sikai00"},"content":"        public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2022-10-08"},{"lineNumber":165,"author":{"gitId":"sikai00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-08"},{"lineNumber":166,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":167,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":168,"author":{"gitId":"sikai00"},"content":"        @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":169,"author":{"gitId":"sikai00"},"content":"        public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2022-10-08"},{"lineNumber":170,"author":{"gitId":"sikai00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-08"},{"lineNumber":171,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":172,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":173,"author":{"gitId":"rexong"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":174,"author":{"gitId":"rexong"},"content":"        public void deleteMeeting(Meeting meeting) {","lastModifiedDate":"2022-10-09"},{"lineNumber":175,"author":{"gitId":"rexong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-09"},{"lineNumber":176,"author":{"gitId":"rexong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":177,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"Thing1Thing2"},"content":"     * A Model stub that contains a single Client.","lastModifiedDate":"2022-10-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"Thing1Thing2"},"content":"    private class ModelStubWithClient extends ModelStub {","lastModifiedDate":"2022-10-04"},{"lineNumber":184,"author":{"gitId":"Thing1Thing2"},"content":"        private final Client client;","lastModifiedDate":"2022-10-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"Thing1Thing2"},"content":"        ModelStubWithClient(Client client) {","lastModifiedDate":"2022-10-04"},{"lineNumber":187,"author":{"gitId":"Thing1Thing2"},"content":"            requireNonNull(client);","lastModifiedDate":"2022-10-04"},{"lineNumber":188,"author":{"gitId":"Thing1Thing2"},"content":"            this.client \u003d client;","lastModifiedDate":"2022-10-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"Thing1Thing2"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2022-10-04"},{"lineNumber":193,"author":{"gitId":"Thing1Thing2"},"content":"            requireNonNull(client);","lastModifiedDate":"2022-10-04"},{"lineNumber":194,"author":{"gitId":"Thing1Thing2"},"content":"            return this.client.isSameClient(client);","lastModifiedDate":"2022-10-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"Thing1Thing2"},"content":"     * A Model stub that always accept the Client being added.","lastModifiedDate":"2022-10-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"Thing1Thing2"},"content":"    private class ModelStubAcceptingClientAdded extends ModelStub {","lastModifiedDate":"2022-10-04"},{"lineNumber":202,"author":{"gitId":"Thing1Thing2"},"content":"        final ArrayList\u003cClient\u003e clientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"Thing1Thing2"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2022-10-04"},{"lineNumber":206,"author":{"gitId":"Thing1Thing2"},"content":"            requireNonNull(client);","lastModifiedDate":"2022-10-04"},{"lineNumber":207,"author":{"gitId":"Thing1Thing2"},"content":"            return clientsAdded.stream().anyMatch(client::isSameClient);","lastModifiedDate":"2022-10-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"Thing1Thing2"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2022-10-04"},{"lineNumber":212,"author":{"gitId":"Thing1Thing2"},"content":"            requireNonNull(client);","lastModifiedDate":"2022-10-04"},{"lineNumber":213,"author":{"gitId":"Thing1Thing2"},"content":"            clientsAdded.add(client);","lastModifiedDate":"2022-10-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"rexong"},"content":"        public ReadOnlyMyInsuRec getMyInsuRec() {","lastModifiedDate":"2022-10-05"},{"lineNumber":218,"author":{"gitId":"rexong"},"content":"            return new MyInsuRec();","lastModifiedDate":"2022-10-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Thing1Thing2":47,"sikai00":11,"junweimoo":8,"rexong":14,"-":142}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalMyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"rexong"},"content":"import seedu.address.model.MyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"rexong"},"content":"    public void execute_emptyMyInsuRec_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"rexong"},"content":"    public void execute_nonEmptyMyInsuRec_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"rexong"},"content":"        Model model \u003d new ModelManager(getTypicalMyInsuRec(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"rexong"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalMyInsuRec(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"rexong"},"content":"        expectedModel.setMyInsuRec(new MyInsuRec());","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"rexong":7,"-":25}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"rexong"},"content":"import seedu.address.model.MyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"rexong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"rexong"},"content":"import seedu.address.model.meeting.MeetingContainsClientPredicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"ThomasHoooo"},"content":"    public static final String VALID_DESCRIPTION_MEETING1 \u003d \"meeting1\";","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"ThomasHoooo"},"content":"    public static final String VALID_DESCRIPTION_MEETING2 \u003d \"meeting2\";","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"ThomasHoooo"},"content":"    public static final LocalDate VALID_MEETING_DATE_MEETING1 \u003d LocalDate.of(2020, 1, 8);","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"ThomasHoooo"},"content":"    public static final LocalDate VALID_MEETING_DATE_MEETING2 \u003d LocalDate.of(2020, 5, 5);","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"ThomasHoooo"},"content":"    public static final LocalTime VALID_MEETING_TIME_MEETING1 \u003d LocalTime.of(7, 20, 45, 342123342);","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"ThomasHoooo"},"content":"    public static final LocalTime VALID_MEETING_TIME_MEETING2 \u003d LocalTime.of(7, 20, 45, 342123321);","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"Thing1Thing2"},"content":"    public static final EditCommand.EditClientDescriptor DESC_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"Thing1Thing2"},"content":"    public static final EditCommand.EditClientDescriptor DESC_BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"Thing1Thing2"},"content":"        DESC_AMY \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"Thing1Thing2"},"content":"        DESC_BOB \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"rexong"},"content":"     * - MyInsuRec, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"rexong"},"content":"        MyInsuRec expectedMyInsuRec \u003d new MyInsuRec(actualModel.getMyInsuRec());","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"Thing1Thing2"},"content":"        List\u003cClient\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredClientList());","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":122,"author":{"gitId":"rexong"},"content":"        assertEquals(expectedMyInsuRec, actualModel.getMyInsuRec());","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"Thing1Thing2"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredClientList());","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"rexong"},"content":"     * Updates {@code model}\u0027s client filtered list to show only the client at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"rexong"},"content":"     * {@code model}\u0027s MyInsuRec.","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"Thing1Thing2"},"content":"    public static void showClientAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"Thing1Thing2"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredClientList().size());","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"Thing1Thing2"},"content":"        Client client \u003d model.getFilteredClientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"Thing1Thing2"},"content":"        final String[] splitName \u003d client.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"Thing1Thing2"},"content":"        model.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"Thing1Thing2"},"content":"        assertEquals(1, model.getFilteredClientList().size());","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"rexong"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"rexong"},"content":"     * Updates {@code model}\u0027s meeting filtered list to show only the meeting at the given {@code targetIndex} in","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"rexong"},"content":"     * the {@code model}\u0027s MyInsuRec.","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"rexong"},"content":"    public static void showMeetingAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"rexong"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredMeetingList().size());","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"rexong"},"content":"        Meeting meeting \u003d model.getFilteredMeetingList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"rexong"},"content":"        final Client[] clientList \u003d {meeting.getClient()};","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"rexong"},"content":"        model.updateFilteredMeetingList(new MeetingContainsClientPredicate(Arrays.asList(clientList)));","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"rexong"},"content":"        assertEquals(1, model.getFilteredMeetingList().size());","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Thing1Thing2":13,"rexong":17,"-":112,"ThomasHoooo":11}},{"path":"src/test/java/seedu/address/logic/commands/DeleteClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalMyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"rexong"},"content":" * {@code DeleteClientCommand}.","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"Thing1Thing2"},"content":"public class DeleteClientCommandTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"rexong"},"content":"    private Model model \u003d new ModelManager(getTypicalMyInsuRec(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"rexong"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"rexong"},"content":"        DeleteClientCommand deleteClientCommand \u003d new DeleteClientCommand(INDEX_FIRST_ELEMENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"Thing1Thing2"},"content":"        String expectedMessage \u003d String.format(DeleteClientCommand.MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete);","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"rexong"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getMyInsuRec(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Thing1Thing2"},"content":"        expectedModel.deleteClient(clientToDelete);","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"rexong"},"content":"        assertCommandSuccess(deleteClientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"Thing1Thing2"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"rexong"},"content":"        DeleteClientCommand deleteClientCommand \u003d new DeleteClientCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"rexong"},"content":"        assertCommandFailure(deleteClientCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"rexong"},"content":"        showClientAtIndex(model, INDEX_FIRST_ELEMENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"rexong"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"rexong"},"content":"        DeleteClientCommand deleteClientCommand \u003d new DeleteClientCommand(INDEX_FIRST_ELEMENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"Thing1Thing2"},"content":"        String expectedMessage \u003d String.format(DeleteClientCommand.MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete);","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"rexong"},"content":"        Model expectedModel \u003d new ModelManager(model.getMyInsuRec(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"Thing1Thing2"},"content":"        expectedModel.deleteClient(clientToDelete);","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"Thing1Thing2"},"content":"        showNoClient(expectedModel);","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"rexong"},"content":"        assertCommandSuccess(deleteClientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"rexong"},"content":"        showClientAtIndex(model, INDEX_FIRST_ELEMENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"rexong"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"rexong"},"content":"        // ensures that outOfBoundIndex is still in bounds of client list","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"rexong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getMyInsuRec().getClientList().size());","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"rexong"},"content":"        DeleteClientCommand deleteClientCommand \u003d new DeleteClientCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"rexong"},"content":"        assertCommandFailure(deleteClientCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"rexong"},"content":"        DeleteClientCommand deleteFirstCommand \u003d new DeleteClientCommand(INDEX_FIRST_ELEMENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"rexong"},"content":"        DeleteClientCommand deleteSecondCommand \u003d new DeleteClientCommand(INDEX_SECOND_ELEMENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"rexong"},"content":"        DeleteClientCommand deleteFirstCommandCopy \u003d new DeleteClientCommand(INDEX_FIRST_ELEMENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"Thing1Thing2"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"Thing1Thing2"},"content":"    private void showNoClient(Model model) {","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"Thing1Thing2"},"content":"        model.updateFilteredClientList(p -\u003e false);","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"Thing1Thing2"},"content":"        assertTrue(model.getFilteredClientList().isEmpty());","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Thing1Thing2":13,"rexong":25,"-":71}},{"path":"src/test/java/seedu/address/logic/commands/DeleteMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rexong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"rexong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"rexong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"rexong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"rexong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"rexong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMeetingAtIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalMeetings.getTypicalMyInsuRec;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"rexong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"rexong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"rexong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"rexong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"rexong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"rexong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"rexong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"rexong"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"rexong"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"rexong"},"content":" * {@code DeleteMeetingCommand}.","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"rexong"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"rexong"},"content":"public class DeleteMeetingCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"rexong"},"content":"    private Model model \u003d new ModelManager(getTypicalMyInsuRec(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"rexong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"rexong"},"content":"    public void execute_validIndexUnfliteredList_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"rexong"},"content":"        Meeting meetingToDelete \u003d model.getFilteredMeetingList().get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"rexong"},"content":"        DeleteMeetingCommand deleteMeetingCommand \u003d new DeleteMeetingCommand(INDEX_FIRST_ELEMENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"rexong"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"rexong"},"content":"                DeleteMeetingCommand.MESSAGE_DELETE_MEETING_SUCCESS,","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"rexong"},"content":"                meetingToDelete.getClient()","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"rexong"},"content":"        );","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"rexong"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getMyInsuRec(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"rexong"},"content":"        expectedModel.deleteMeeting(meetingToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"rexong"},"content":"        assertCommandSuccess(deleteMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"rexong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"rexong"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"rexong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredMeetingList().size() + 1);","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"rexong"},"content":"        DeleteMeetingCommand deleteMeetingCommand \u003d new DeleteMeetingCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"rexong"},"content":"        assertCommandFailure(deleteMeetingCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"rexong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"rexong"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"rexong"},"content":"        showMeetingAtIndex(model, INDEX_FIRST_ELEMENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"rexong"},"content":"        Meeting meetingToDelete \u003d model.getFilteredMeetingList().get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"rexong"},"content":"        DeleteMeetingCommand deleteMeetingCommand \u003d new DeleteMeetingCommand(INDEX_FIRST_ELEMENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"rexong"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"rexong"},"content":"                DeleteMeetingCommand.MESSAGE_DELETE_MEETING_SUCCESS,","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"rexong"},"content":"                meetingToDelete.getClient()","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"rexong"},"content":"        );","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"rexong"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getMyInsuRec(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"rexong"},"content":"        expectedModel.deleteMeeting(meetingToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"rexong"},"content":"        showNoMeeting(expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"rexong"},"content":"        assertCommandSuccess(deleteMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"rexong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"rexong"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"rexong"},"content":"        showMeetingAtIndex(model, INDEX_FIRST_ELEMENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"rexong"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"rexong"},"content":"        //ensures that outOfBoundIndex is still in bounds of client list","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"rexong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getMyInsuRec().getMeetingList().size());","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"rexong"},"content":"        DeleteMeetingCommand deleteMeetingCommand \u003d new DeleteMeetingCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"rexong"},"content":"        assertCommandFailure(deleteMeetingCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"rexong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"rexong"},"content":"    public void equals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"rexong"},"content":"        DeleteMeetingCommand deleteFirstCommand \u003d new DeleteMeetingCommand(INDEX_FIRST_ELEMENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"rexong"},"content":"        DeleteMeetingCommand deleteSecondCommand \u003d new DeleteMeetingCommand(INDEX_SECOND_ELEMENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"rexong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"rexong"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"rexong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"rexong"},"content":"        DeleteMeetingCommand deleteFirstCommandCopy \u003d new DeleteMeetingCommand(INDEX_FIRST_ELEMENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"rexong"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"rexong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"rexong"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"rexong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"rexong"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"rexong"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"rexong"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"rexong"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"rexong"},"content":"     * Updates {@code model}\u0027s filtered list to show no meeting.","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"rexong"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"rexong"},"content":"    private void showNoMeeting(Model model) {","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"rexong"},"content":"        model.updateFilteredMeetingList(p -\u003e false);","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"rexong"},"content":"        assertTrue(model.getFilteredMeetingList().isEmpty());","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"rexong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"rexong":115}},{"path":"src/test/java/seedu/address/logic/commands/EditClientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":"public class EditClientDescriptorTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"Thing1Thing2"},"content":"        EditClientDescriptor descriptorWithSameValues \u003d new EditClientDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"Thing1Thing2"},"content":"        EditClientDescriptor editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"Thing1Thing2"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"Thing1Thing2"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"Thing1Thing2"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"Thing1Thing2"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Thing1Thing2":9,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalMyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"rexong"},"content":"import seedu.address.model.MyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"rexong"},"content":"    private Model model \u003d new ModelManager(getTypicalMyInsuRec(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"Thing1Thing2"},"content":"        Client editedClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"Thing1Thing2"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(editedClient).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"rexong"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ELEMENT, descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"Thing1Thing2"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"rexong"},"content":"        Model expectedModel \u003d new ModelManager(new MyInsuRec(model.getMyInsuRec()), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Thing1Thing2"},"content":"        expectedModel.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"Thing1Thing2"},"content":"        Index indexLastClient \u003d Index.fromOneBased(model.getFilteredClientList().size());","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"Thing1Thing2"},"content":"        Client lastClient \u003d model.getFilteredClientList().get(indexLastClient.getZeroBased());","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"Thing1Thing2"},"content":"        ClientBuilder clientInList \u003d new ClientBuilder(lastClient);","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"Thing1Thing2"},"content":"        Client editedClient \u003d clientInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"Thing1Thing2"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"Thing1Thing2"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastClient, descriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"Thing1Thing2"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"rexong"},"content":"        Model expectedModel \u003d new ModelManager(new MyInsuRec(model.getMyInsuRec()), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"Thing1Thing2"},"content":"        expectedModel.setClient(lastClient, editedClient);","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"rexong"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ELEMENT, new EditClientDescriptor());","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"rexong"},"content":"        Client editedClient \u003d model.getFilteredClientList().get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"Thing1Thing2"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"rexong"},"content":"        Model expectedModel \u003d new ModelManager(new MyInsuRec(model.getMyInsuRec()), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"rexong"},"content":"        showClientAtIndex(model, INDEX_FIRST_ELEMENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"rexong"},"content":"        Client clientInFilteredList \u003d model.getFilteredClientList().get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"Thing1Thing2"},"content":"        Client editedClient \u003d new ClientBuilder(clientInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"rexong"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ELEMENT,","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"Thing1Thing2"},"content":"                new EditClientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"Thing1Thing2"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"rexong"},"content":"        Model expectedModel \u003d new ModelManager(new MyInsuRec(model.getMyInsuRec()), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"Thing1Thing2"},"content":"        expectedModel.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"Thing1Thing2"},"content":"    public void execute_duplicateClientUnfilteredList_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"rexong"},"content":"        Client firstClient \u003d model.getFilteredClientList().get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"Thing1Thing2"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(firstClient).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"rexong"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_ELEMENT, descriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"Thing1Thing2"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"Thing1Thing2"},"content":"    public void execute_duplicateClientFilteredList_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"rexong"},"content":"        showClientAtIndex(model, INDEX_FIRST_ELEMENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"rexong"},"content":"        // edit client in filtered list into a duplicate in MyInsuRec","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"rexong"},"content":"        Client clientInList \u003d model.getMyInsuRec().getClientList().get(INDEX_SECOND_ELEMENT.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"rexong"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ELEMENT,","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"Thing1Thing2"},"content":"                new EditClientDescriptorBuilder(clientInList).build());","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"Thing1Thing2"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"Thing1Thing2"},"content":"    public void execute_invalidClientIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"Thing1Thing2"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2022-10-04"},{"lineNumber":125,"author":{"gitId":"Thing1Thing2"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"Thing1Thing2"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"rexong"},"content":"     * but smaller than size of MyInsuRec","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"Thing1Thing2"},"content":"    public void execute_invalidClientIndexFilteredList_failure() {","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"rexong"},"content":"        showClientAtIndex(model, INDEX_FIRST_ELEMENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"rexong"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"rexong"},"content":"        // ensures that outOfBoundIndex is still in bounds of client list","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"rexong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getMyInsuRec().getClientList().size());","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"Thing1Thing2"},"content":"                new EditClientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"Thing1Thing2"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"rexong"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_ELEMENT, DESC_AMY);","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"Thing1Thing2"},"content":"        EditClientDescriptor copyDescriptor \u003d new EditClientDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-04"},{"lineNumber":154,"author":{"gitId":"rexong"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_ELEMENT, copyDescriptor);","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"rexong"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_ELEMENT, DESC_AMY)));","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"rexong"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_ELEMENT, DESC_BOB)));","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Thing1Thing2":36,"rexong":30,"-":107}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_CLIENTS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.testutil.TypicalClients.CARL;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.testutil.TypicalClients.ELLE;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.testutil.TypicalClients.FIONA;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalMyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"rexong"},"content":"    private Model model \u003d new ModelManager(getTypicalMyInsuRec(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"rexong"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalMyInsuRec(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"Thing1Thing2"},"content":"    public void execute_zeroKeywords_noClientFound() {","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"Thing1Thing2"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLIENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"Thing1Thing2"},"content":"        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"Thing1Thing2"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredClientList());","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"Thing1Thing2"},"content":"    public void execute_multipleKeywords_multipleClientsFound() {","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"Thing1Thing2"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLIENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"Thing1Thing2"},"content":"        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"Thing1Thing2"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredClientList());","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Thing1Thing2":13,"rexong":3,"-":67}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalMyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"rexong"},"content":"        model \u003d new ModelManager(getTypicalMyInsuRec(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"rexong"},"content":"        expectedModel \u003d new ModelManager(model.getMyInsuRec(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"rexong"},"content":"        showClientAtIndex(model, INDEX_FIRST_ELEMENT);","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Thing1Thing2":1,"rexong":5,"-":33}},{"path":"src/test/java/seedu/address/logic/commands/ListMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalMyInsuRec;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListMeetingCommand.","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"public class ListMeetingCommandTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"    private Model model;","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"        model \u003d new ModelManager(getTypicalMyInsuRec(), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"        expectedModel \u003d new ModelManager(model.getMyInsuRec(), new UserPrefs());","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        // Currently, there are no filters for listMeeting.","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"        assertCommandSuccess(new ListMeetingCommand(), model, ListMeetingCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"sikai00":32}},{"path":"src/test/java/seedu/address/logic/commands/ViewMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Thing1Thing2"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Thing1Thing2"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Thing1Thing2"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalMyInsuRec;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Thing1Thing2"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Thing1Thing2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Thing1Thing2"},"content":"public class ViewMeetingCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Thing1Thing2"},"content":"    private Model model;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Thing1Thing2"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"Thing1Thing2"},"content":"    private ViewMeetingCommand vmc \u003d new ViewMeetingCommand(Index.fromOneBased(1));","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"Thing1Thing2"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Thing1Thing2"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Thing1Thing2"},"content":"        model \u003d new ModelManager(getTypicalMyInsuRec(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Thing1Thing2"},"content":"        expectedModel \u003d new ModelManager(model.getMyInsuRec(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Thing1Thing2"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"Thing1Thing2"},"content":"    public void execute_modelIsNull_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(NullPointerException.class, () -\u003e vmc.execute(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"Thing1Thing2"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"Thing1Thing2"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Thing1Thing2"},"content":"        // Currently, there are no filters for listMeeting.","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"Thing1Thing2"},"content":"        assertCommandSuccess(new ListMeetingCommand(), model, ListMeetingCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"Thing1Thing2"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"Thing1Thing2"},"content":"    public void execute_indexTooBig_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"Thing1Thing2"},"content":"        int numberOfExistingMeetings \u003d model.getFilteredMeetingList().size();","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"Thing1Thing2"},"content":"        // trying to access meeting index that does not exist:","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"Thing1Thing2"},"content":"        vmc \u003d new ViewMeetingCommand(Index.fromOneBased(numberOfExistingMeetings + 1));","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(CommandException.class, () -\u003e vmc.execute(model));","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"Thing1Thing2"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"Thing1Thing2"},"content":"    public void execute_allFieldsValid_returnsViewMeetingCommand() {","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"Thing1Thing2"},"content":"        assertDoesNotThrow(() -\u003e vmc.execute(model));","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"Thing1Thing2"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"Thing1Thing2"},"content":"    public void equals_twoEquivalentMeetings_returnsTrue() {","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"Thing1Thing2"},"content":"        // same meeting object","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"Thing1Thing2"},"content":"        assertTrue(vmc.equals(vmc));","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"Thing1Thing2"},"content":"        ViewMeetingCommand equivalentVmc \u003d new ViewMeetingCommand(Index.fromOneBased(1));","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"Thing1Thing2"},"content":"        assertTrue(vmc.equals(equivalentVmc));","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"Thing1Thing2"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"Thing1Thing2"},"content":"    public void equals_twoNonEquivalentMeetings_returnsFalse() {","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"Thing1Thing2"},"content":"        ViewMeetingCommand nonEquivalentMeeting \u003d new ViewMeetingCommand(Index.fromOneBased(2));","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"Thing1Thing2"},"content":"        assertFalse(vmc.equals(nonEquivalentMeeting));","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"Thing1Thing2"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Thing1Thing2":71}},{"path":"src/test/java/seedu/address/logic/parser/AddClientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.testutil.TypicalClients.AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.testutil.TypicalClients.BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.logic.commands.AddClientCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"Thing1Thing2"},"content":"public class AddClientCommandParserTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"Thing1Thing2"},"content":"    private AddClientCommandParser parser \u003d new AddClientCommandParser();","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"Thing1Thing2"},"content":"        Client expectedClient \u003d new ClientBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"Thing1Thing2"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddClientCommand(expectedClient));","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"Thing1Thing2"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddClientCommand(expectedClient));","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"Thing1Thing2"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddClientCommand(expectedClient));","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"Thing1Thing2"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddClientCommand(expectedClient));","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"Thing1Thing2"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddClientCommand(expectedClient));","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"Thing1Thing2"},"content":"        Client expectedClientMultipleTags \u003d new ClientBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"Thing1Thing2"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddClientCommand(expectedClientMultipleTags));","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"Thing1Thing2"},"content":"        Client expectedClient \u003d new ClientBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"Thing1Thing2"},"content":"                new AddClientCommand(expectedClient));","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"Thing1Thing2"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClientCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"Thing1Thing2"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Thing1Thing2":23,"-":118}},{"path":"src/test/java/seedu/address/logic/parser/DeleteClientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.logic.commands.DeleteClientCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"Thing1Thing2"},"content":" * outside the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":"public class DeleteClientCommandParserTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"Thing1Thing2"},"content":"    private DeleteClientCommandParser parser \u003d new DeleteClientCommandParser();","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"rexong"},"content":"        assertParseSuccess(parser, \"1\", new DeleteClientCommand(INDEX_FIRST_ELEMENT));","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"Thing1Thing2"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"Thing1Thing2"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Thing1Thing2":6,"rexong":2,"-":25}},{"path":"src/test/java/seedu/address/logic/parser/DeleteMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rexong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"rexong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"rexong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"rexong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"rexong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"rexong"},"content":"import seedu.address.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"rexong"},"content":"public class DeleteMeetingCommandParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"rexong"},"content":"    private DeleteMeetingCommandParser parser \u003d new DeleteMeetingCommandParser();","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"rexong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"rexong"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"rexong"},"content":"        assertParseSuccess(parser, \" i/1\", new DeleteMeetingCommand(INDEX_FIRST_ELEMENT));","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"rexong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"rexong"},"content":"    public void parse_validArgs_throwsParseException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"rexong"},"content":"        assertParseFailure(","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"rexong"},"content":"                parser,","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"rexong"},"content":"                \" i/a\",","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"rexong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"rexong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"rexong":28}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"Thing1Thing2"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Client} being edited,","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"rexong"},"content":"        Index targetIndex \u003d INDEX_SECOND_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"Thing1Thing2"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"rexong"},"content":"        Index targetIndex \u003d INDEX_FIRST_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"Thing1Thing2"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"rexong"},"content":"        Index targetIndex \u003d INDEX_THIRD_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"Thing1Thing2"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"Thing1Thing2"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"Thing1Thing2"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"Thing1Thing2"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"Thing1Thing2"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"rexong"},"content":"        Index targetIndex \u003d INDEX_FIRST_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"Thing1Thing2"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"rexong"},"content":"        Index targetIndex \u003d INDEX_FIRST_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"Thing1Thing2"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"Thing1Thing2"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"rexong"},"content":"        Index targetIndex \u003d INDEX_THIRD_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"Thing1Thing2"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-10-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Thing1Thing2":18,"rexong":9,"-":184}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Thing1Thing2":1,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/MyInsuRecParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.logic.commands.AddClientCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.logic.commands.DeleteClientCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.testutil.ClientUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"rexong"},"content":"public class MyInsuRecParserTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"rexong"},"content":"    private final MyInsuRecParser parser \u003d new MyInsuRecParser();","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"Thing1Thing2"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"Thing1Thing2"},"content":"        AddClientCommand command \u003d (AddClientCommand) parser.parseCommand(ClientUtil.getAddCommand(client));","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"Thing1Thing2"},"content":"        assertEquals(new AddClientCommand(client), command);","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"Thing1Thing2"},"content":"        DeleteClientCommand command \u003d (DeleteClientCommand) parser.parseCommand(","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"rexong"},"content":"                DeleteClientCommand.COMMAND_WORD + \" \" + INDEX_FIRST_ELEMENT.getOneBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"rexong"},"content":"        assertEquals(new DeleteClientCommand(INDEX_FIRST_ELEMENT), command);","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"Thing1Thing2"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"Thing1Thing2"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(client).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"rexong"},"content":"                + INDEX_FIRST_ELEMENT.getOneBased() + \" \" + ClientUtil.getEditClientDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"rexong"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_ELEMENT, descriptor), command);","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Thing1Thing2":14,"rexong":7,"-":80}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"rexong"},"content":"        assertEquals(INDEX_FIRST_ELEMENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"rexong"},"content":"        assertEquals(INDEX_FIRST_ELEMENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Thing1Thing2":4,"rexong":3,"-":189}},{"path":"src/test/java/seedu/address/logic/parser/ViewMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Thing1Thing2"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Thing1Thing2"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Thing1Thing2"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Thing1Thing2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.logic.commands.ViewMeetingCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Thing1Thing2"},"content":"public class ViewMeetingCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":"    private ViewMeetingCommandParser vmcp \u003d new ViewMeetingCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":"    public void parse_negativeIndexGiven_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":"        String args \u003d \"viewMeeting i/-1\";","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Thing1Thing2"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e vmcp.parse(args));","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Thing1Thing2"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"Thing1Thing2"},"content":"    public void parse_allArgumentsValid_returnsCommandWithoutError() {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"Thing1Thing2"},"content":"        String args \u003d \"viewMeeting i/1\";","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"Thing1Thing2"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"Thing1Thing2"},"content":"            assertTrue(vmcp.parse(args) instanceof ViewMeetingCommand);","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"Thing1Thing2"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"Thing1Thing2"},"content":"            fail();","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"Thing1Thing2"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"Thing1Thing2"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Thing1Thing2":33}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.testutil.TypicalClients.BENSON;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"rexong"},"content":"import seedu.address.testutil.MyInsuRecBuilder;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"rexong"},"content":"        assertEquals(new MyInsuRec(), new MyInsuRec(modelManager.getMyInsuRec()));","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"rexong"},"content":"        userPrefs.setMyInsuRecFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"rexong"},"content":"        userPrefs.setMyInsuRecFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"rexong"},"content":"    public void setMyInsuRecFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"rexong"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setMyInsuRecFilePath(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"rexong"},"content":"    public void setMyInsuRecFilePath_validPath_setsMyInsuRecFilePath() {","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"rexong"},"content":"        modelManager.setMyInsuRecFilePath(path);","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"rexong"},"content":"        assertEquals(path, modelManager.getMyInsuRecFilePath());","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"Thing1Thing2"},"content":"    public void hasClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasClient(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"rexong"},"content":"    public void hasClient_clientNotInMyInsuRec_returnsFalse() {","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"Thing1Thing2"},"content":"        assertFalse(modelManager.hasClient(ALICE));","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"rexong"},"content":"    public void hasClient_clientInMyInsuRec_returnsTrue() {","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"Thing1Thing2"},"content":"        modelManager.addClient(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"Thing1Thing2"},"content":"        assertTrue(modelManager.hasClient(ALICE));","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"Thing1Thing2"},"content":"    public void getFilteredClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredClientList().remove(0));","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"rexong"},"content":"        MyInsuRec myInsuRec \u003d new MyInsuRecBuilder().withClient(ALICE).withClient(BENSON).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"rexong"},"content":"        MyInsuRec differentMyInsuRec \u003d new MyInsuRec();","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"rexong"},"content":"        modelManager \u003d new ModelManager(myInsuRec, userPrefs);","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"rexong"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(myInsuRec, userPrefs);","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"rexong"},"content":"        // different myInsuRec -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"rexong"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentMyInsuRec, userPrefs)));","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"Thing1Thing2"},"content":"        modelManager.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-10-04"},{"lineNumber":122,"author":{"gitId":"rexong"},"content":"        assertFalse(modelManager.equals(new ModelManager(myInsuRec, userPrefs)));","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"Thing1Thing2"},"content":"        modelManager.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"rexong"},"content":"        differentUserPrefs.setMyInsuRecFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"rexong"},"content":"        assertFalse(modelManager.equals(new ModelManager(myInsuRec, differentUserPrefs)));","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Thing1Thing2":13,"rexong":20,"-":99}},{"path":"src/test/java/seedu/address/model/MyInsuRecTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"Thing1Thing2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"Thing1Thing2"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"Thing1Thing2"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalMyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"Thing1Thing2"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"Thing1Thing2"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"Thing1Thing2"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"Thing1Thing2"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"rexong"},"content":"public class MyInsuRecTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"rexong"},"content":"    private final MyInsuRec myInsuRec \u003d new MyInsuRec();","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"Thing1Thing2"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"Thing1Thing2"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"rexong"},"content":"        assertEquals(Collections.emptyList(), myInsuRec.getClientList());","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"Thing1Thing2"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"Thing1Thing2"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"rexong"},"content":"        assertThrows(NullPointerException.class, () -\u003e myInsuRec.resetData(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"Thing1Thing2"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"rexong"},"content":"    public void resetData_withValidReadOnlyMyInsuRec_replacesData() {","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"rexong"},"content":"        MyInsuRec newData \u003d getTypicalMyInsuRec();","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Thing1Thing2"},"content":"        newData.resetData(newData);","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"rexong"},"content":"        assertEquals(newData, myInsuRec);","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"Thing1Thing2"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"Thing1Thing2"},"content":"    public void resetData_withDuplicateClients_throwsDuplicateClientException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"Thing1Thing2"},"content":"        // Two clients with the same identity fields","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"Thing1Thing2"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"Thing1Thing2"},"content":"                .build();","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"Thing1Thing2"},"content":"        List\u003cClient\u003e newClients \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"        // This test only tests for duplicate clients with same identity field. Meeting list can be empty.","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"        List\u003cMeeting\u003e emptyMeetings \u003d Collections.emptyList();","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"        MyInsuRecStub newData \u003d new MyInsuRecStub(newClients, emptyMeetings);","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"rexong"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e myInsuRec.resetData(newData));","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"Thing1Thing2"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"Thing1Thing2"},"content":"    public void hasClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"rexong"},"content":"        assertThrows(NullPointerException.class, () -\u003e myInsuRec.hasClient(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"Thing1Thing2"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"rexong"},"content":"    public void hasClient_clientNotInMyInsuRec_returnsFalse() {","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"rexong"},"content":"        assertFalse(myInsuRec.hasClient(ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"Thing1Thing2"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"rexong"},"content":"    public void hasClient_clientInMyInsuRec_returnsTrue() {","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"rexong"},"content":"        myInsuRec.addClient(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"rexong"},"content":"        assertTrue(myInsuRec.hasClient(ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"Thing1Thing2"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"rexong"},"content":"    public void hasClient_clientWithSameIdentityFieldsInMyInsuRec_returnsTrue() {","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"rexong"},"content":"        myInsuRec.addClient(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"Thing1Thing2"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"Thing1Thing2"},"content":"                .build();","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"rexong"},"content":"        assertTrue(myInsuRec.hasClient(editedAlice));","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"Thing1Thing2"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"Thing1Thing2"},"content":"    public void getClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"rexong"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e myInsuRec.getClientList().remove(0));","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"Thing1Thing2"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"rexong"},"content":"     * A stub ReadOnlyMyInsuRec whose Clients list can violate interface constraints.","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"Thing1Thing2"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"rexong"},"content":"    private static class MyInsuRecStub implements ReadOnlyMyInsuRec {","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"Thing1Thing2"},"content":"        private final ObservableList\u003cClient\u003e clients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"sikai00"},"content":"        private final ObservableList\u003cMeeting\u003e meetings \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-08"},{"lineNumber":95,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"sikai00"},"content":"        MyInsuRecStub(Collection\u003cClient\u003e clients, Collection\u003cMeeting\u003e meetings) {","lastModifiedDate":"2022-10-08"},{"lineNumber":97,"author":{"gitId":"Thing1Thing2"},"content":"            this.clients.setAll(clients);","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"sikai00"},"content":"            this.meetings.setAll(meetings);","lastModifiedDate":"2022-10-08"},{"lineNumber":99,"author":{"gitId":"Thing1Thing2"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"Thing1Thing2"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"Thing1Thing2"},"content":"        public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"Thing1Thing2"},"content":"            return clients;","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"Thing1Thing2"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"sikai00"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":106,"author":{"gitId":"sikai00"},"content":"        @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":107,"author":{"gitId":"sikai00"},"content":"        public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2022-10-08"},{"lineNumber":108,"author":{"gitId":"sikai00"},"content":"            return meetings;","lastModifiedDate":"2022-10-08"},{"lineNumber":109,"author":{"gitId":"sikai00"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"Thing1Thing2"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"Thing1Thing2"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"Thing1Thing2"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"Thing1Thing2":79,"sikai00":12,"rexong":21}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"rexong"},"content":"    public void setMyInsuRecFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"rexong"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setMyInsuRecFilePath(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"rexong":2,"-":19}},{"path":"src/test/java/seedu/address/model/client/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Thing1Thing2":1,"-":35}},{"path":"src/test/java/seedu/address/model/client/ClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.testutil.TypicalClients.BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":"public class ClientTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"Thing1Thing2"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e client.getTags().remove(0));","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"Thing1Thing2"},"content":"    public void isSameClient() {","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"Thing1Thing2"},"content":"        assertTrue(ALICE.isSameClient(ALICE));","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"Thing1Thing2"},"content":"        assertFalse(ALICE.isSameClient(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"Thing1Thing2"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"Thing1Thing2"},"content":"        assertTrue(ALICE.isSameClient(editedAlice));","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"Thing1Thing2"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"Thing1Thing2"},"content":"        assertFalse(ALICE.isSameClient(editedAlice));","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"Thing1Thing2"},"content":"        Client editedBob \u003d new ClientBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"Thing1Thing2"},"content":"        assertFalse(BOB.isSameClient(editedBob));","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"Thing1Thing2"},"content":"        editedBob \u003d new ClientBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"Thing1Thing2"},"content":"        assertFalse(BOB.isSameClient(editedBob));","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"Thing1Thing2"},"content":"        Client aliceCopy \u003d new ClientBuilder(ALICE).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"Thing1Thing2"},"content":"        // different Client -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"Thing1Thing2"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"Thing1Thing2"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"Thing1Thing2"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"Thing1Thing2"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"Thing1Thing2"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Thing1Thing2":25,"-":66}},{"path":"src/test/java/seedu/address/model/client/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Thing1Thing2":1,"-":67}},{"path":"src/test/java/seedu/address/model/client/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"Thing1Thing2"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"Thing1Thing2"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"Thing1Thing2"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"Thing1Thing2"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"Thing1Thing2"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"Thing1Thing2"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"Thing1Thing2"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"Thing1Thing2"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Thing1Thing2":10,"-":65}},{"path":"src/test/java/seedu/address/model/client/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Thing1Thing2":1,"-":39}},{"path":"src/test/java/seedu/address/model/client/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Thing1Thing2":1,"-":39}},{"path":"src/test/java/seedu/address/model/client/UniqueClientListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Thing1Thing2"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.testutil.TypicalClients.BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.exceptions.ClientNotFoundException;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"Thing1Thing2"},"content":"public class UniqueClientListTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"Thing1Thing2"},"content":"    private final UniqueClientList uniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"Thing1Thing2"},"content":"    public void contains_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.contains(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"Thing1Thing2"},"content":"    public void contains_clientNotInList_returnsFalse() {","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"Thing1Thing2"},"content":"        assertFalse(uniqueClientList.contains(ALICE));","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"Thing1Thing2"},"content":"    public void contains_clientInList_returnsTrue() {","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"Thing1Thing2"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"Thing1Thing2"},"content":"        assertTrue(uniqueClientList.contains(ALICE));","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"Thing1Thing2"},"content":"    public void contains_clientWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"Thing1Thing2"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"Thing1Thing2"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"Thing1Thing2"},"content":"        assertTrue(uniqueClientList.contains(editedAlice));","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"Thing1Thing2"},"content":"    public void add_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.add(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"Thing1Thing2"},"content":"    public void add_duplicateClient_throwsDuplicateClientException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"Thing1Thing2"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.add(ALICE));","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"Thing1Thing2"},"content":"    public void setClient_nullTargetClient_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClient(null, ALICE));","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"Thing1Thing2"},"content":"    public void setClient_nullEditedClient_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClient(ALICE, null));","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"Thing1Thing2"},"content":"    public void setClient_targetClientNotInList_throwsClientNotFoundException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(ClientNotFoundException.class, () -\u003e uniqueClientList.setClient(ALICE, ALICE));","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"Thing1Thing2"},"content":"    public void setClient_editedClientIsSameClient_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"Thing1Thing2"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"Thing1Thing2"},"content":"        uniqueClientList.setClient(ALICE, ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"Thing1Thing2"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"Thing1Thing2"},"content":"        expectedUniqueClientList.add(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"Thing1Thing2"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"Thing1Thing2"},"content":"    public void setClient_editedClientHasSameIdentity_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"Thing1Thing2"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"Thing1Thing2"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"Thing1Thing2"},"content":"        uniqueClientList.setClient(ALICE, editedAlice);","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"Thing1Thing2"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"Thing1Thing2"},"content":"        expectedUniqueClientList.add(editedAlice);","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"Thing1Thing2"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"Thing1Thing2"},"content":"    public void setClient_editedClientHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"Thing1Thing2"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"Thing1Thing2"},"content":"        uniqueClientList.setClient(ALICE, BOB);","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"Thing1Thing2"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"Thing1Thing2"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"Thing1Thing2"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"Thing1Thing2"},"content":"    public void setClient_editedClientHasNonUniqueIdentity_throwsDuplicateClientException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"Thing1Thing2"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"Thing1Thing2"},"content":"        uniqueClientList.add(BOB);","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.setClient(ALICE, BOB));","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"Thing1Thing2"},"content":"    public void remove_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.remove(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"Thing1Thing2"},"content":"    public void remove_clientDoesNotExist_throwsClientNotFoundException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(ClientNotFoundException.class, () -\u003e uniqueClientList.remove(ALICE));","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"Thing1Thing2"},"content":"    public void remove_existingClient_removesClient() {","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"Thing1Thing2"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":125,"author":{"gitId":"Thing1Thing2"},"content":"        uniqueClientList.remove(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"Thing1Thing2"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"Thing1Thing2"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"Thing1Thing2"},"content":"    public void setClients_nullUniqueClientList_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClients((List\u003cClient\u003e) null));","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"Thing1Thing2"},"content":"    public void setClients_uniqueClientList_replacesOwnListWithProvidedUniqueClientList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"Thing1Thing2"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"Thing1Thing2"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"Thing1Thing2"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"Thing1Thing2"},"content":"        uniqueClientList.setClient(expectedUniqueClientList);","lastModifiedDate":"2022-10-04"},{"lineNumber":141,"author":{"gitId":"Thing1Thing2"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-10-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"Thing1Thing2"},"content":"    public void setClients_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":146,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClients((List\u003cClient\u003e) null));","lastModifiedDate":"2022-10-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"Thing1Thing2"},"content":"    public void setClients_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":151,"author":{"gitId":"Thing1Thing2"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":152,"author":{"gitId":"Thing1Thing2"},"content":"        List\u003cClient\u003e clientList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-10-04"},{"lineNumber":153,"author":{"gitId":"Thing1Thing2"},"content":"        uniqueClientList.setClients(clientList);","lastModifiedDate":"2022-10-04"},{"lineNumber":154,"author":{"gitId":"Thing1Thing2"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-10-04"},{"lineNumber":155,"author":{"gitId":"Thing1Thing2"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2022-10-04"},{"lineNumber":156,"author":{"gitId":"Thing1Thing2"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-10-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"Thing1Thing2"},"content":"    public void setClients_listWithDuplicateClients_throwsDuplicateClientException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":161,"author":{"gitId":"Thing1Thing2"},"content":"        List\u003cClient\u003e listWithDuplicateClients \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":162,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.setClients(listWithDuplicateClients));","lastModifiedDate":"2022-10-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"Thing1Thing2"},"content":"            -\u003e uniqueClientList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Thing1Thing2":83,"-":87}},{"path":"src/test/java/seedu/address/model/meeting/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"public class DescriptionTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"ThomasHoooo":14}},{"path":"src/test/java/seedu/address/model/meeting/MeetingContainsClientPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rexong"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"rexong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"rexong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalClients.BENSON;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"rexong"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"rexong"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"rexong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"rexong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"rexong"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"rexong"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"rexong"},"content":"public class MeetingContainsClientPredicateTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"rexong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"rexong"},"content":"    public void equals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"rexong"},"content":"        List\u003cClient\u003e firstPredicateClientList \u003d Collections.singletonList(ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"rexong"},"content":"        List\u003cClient\u003e secondPredicateClientList \u003d Arrays.asList(ALICE, BENSON);","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"rexong"},"content":"        MeetingContainsClientPredicate firstPredicate \u003d new MeetingContainsClientPredicate(firstPredicateClientList);","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"rexong"},"content":"        MeetingContainsClientPredicate secondPredicate \u003d new MeetingContainsClientPredicate(secondPredicateClientList);","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"rexong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"rexong"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"rexong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"rexong"},"content":"        MeetingContainsClientPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"rexong"},"content":"                new MeetingContainsClientPredicate(firstPredicateClientList);","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"rexong"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"rexong"},"content":"        //different types -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"rexong"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"rexong"},"content":"        //null -\u003e return false","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"rexong"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"rexong"},"content":"        // different meeting -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"rexong"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"rexong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"rexong"},"content":"    public void test_meetingContainsClient_returnTrue() {","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"rexong"},"content":"        //One client to one client","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"rexong"},"content":"        MeetingContainsClientPredicate predicate \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"rexong"},"content":"                new MeetingContainsClientPredicate(Collections.singletonList(ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"rexong"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withClient(ALICE).build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"rexong"},"content":"        //Multiple client to multiple client","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"rexong"},"content":"        predicate \u003d new MeetingContainsClientPredicate(Arrays.asList(ALICE, BENSON));","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"rexong"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withClient(ALICE).withClient(BENSON).build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"rexong"},"content":"        //Multiple client to one client","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"rexong"},"content":"        predicate \u003d new MeetingContainsClientPredicate(Arrays.asList(ALICE, BENSON));","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"rexong"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withClient(ALICE).build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"rexong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"rexong"},"content":"    public void test_meetingDoesNotContainClient_returnFalse() {","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"rexong"},"content":"        //No client to one client","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"rexong"},"content":"        MeetingContainsClientPredicate predicate \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"rexong"},"content":"                new MeetingContainsClientPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"rexong"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withClient(ALICE).build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"rexong"},"content":"        //Non-matching client","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"rexong"},"content":"        predicate \u003d new MeetingContainsClientPredicate(Collections.singletonList(ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"rexong"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withClient(BENSON).build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"rexong"},"content":"        //One client to multiple client","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"rexong"},"content":"        predicate \u003d new MeetingContainsClientPredicate(Arrays.asList(ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"rexong"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withClient(ALICE).withClient(BENSON).build()));","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"rexong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"rexong":77}},{"path":"src/test/java/seedu/address/model/meeting/MeetingDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"public class MeetingDateTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MeetingDate(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"ThomasHoooo":14}},{"path":"src/test/java/seedu/address/model/meeting/MeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_MEETING2;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_DATE_MEETING2;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_TIME_MEETING2;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"import static seedu.address.testutil.TypicalClients.BENSON;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING1;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING2;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"public class MeetingTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"    public void equals() {","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"        Meeting meeting1Copy \u003d new MeetingBuilder(MEETING1).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"        assertTrue(MEETING1.equals(meeting1Copy));","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"        assertTrue(MEETING1.equals(MEETING1));","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"        assertFalse(MEETING1.equals(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"        assertFalse(MEETING1.equals(5));","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"ThomasHoooo"},"content":"        // different meeting -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"ThomasHoooo"},"content":"        assertFalse(MEETING1.equals(MEETING2));","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"ThomasHoooo"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"ThomasHoooo"},"content":"        Meeting editedMeeting1 \u003d new MeetingBuilder(MEETING1).withDescription(VALID_DESCRIPTION_MEETING2).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"ThomasHoooo"},"content":"        assertFalse(MEETING1.equals(editedMeeting1));","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"ThomasHoooo"},"content":"        // different meeting date -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"ThomasHoooo"},"content":"        editedMeeting1 \u003d new MeetingBuilder(MEETING1).withMeetingDate(VALID_MEETING_DATE_MEETING2).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"ThomasHoooo"},"content":"        assertFalse(MEETING1.equals(editedMeeting1));","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"ThomasHoooo"},"content":"        // different meeting time -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"ThomasHoooo"},"content":"        editedMeeting1 \u003d new MeetingBuilder(MEETING1).withMeetingTime(VALID_MEETING_TIME_MEETING2).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"ThomasHoooo"},"content":"        assertFalse(MEETING1.equals(editedMeeting1));","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"ThomasHoooo"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"ThomasHoooo"},"content":"        editedMeeting1 \u003d new MeetingBuilder(MEETING1).withClient(BENSON).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"ThomasHoooo"},"content":"        assertFalse(MEETING1.equals(editedMeeting1));","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"ThomasHoooo":52}},{"path":"src/test/java/seedu/address/model/meeting/MeetingTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"public class MeetingTimeTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MeetingTime(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"ThomasHoooo":14}},{"path":"src/test/java/seedu/address/model/meeting/NoConflictMeetingListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_MEETING2;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING1;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING2;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.model.meeting.exceptions.ConflictingMeetingException;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.model.meeting.exceptions.MeetingNotFoundException;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"public class NoConflictMeetingListTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"    private final NoConflictMeetingList noConflictMeetingList \u003d new NoConflictMeetingList();","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"    public void contains_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"        assertThrows(NullPointerException.class, () -\u003e noConflictMeetingList.contains(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"    public void contains_meetingNotInList_returnsFalse() {","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"        assertFalse(noConflictMeetingList.contains(MEETING1));","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"ThomasHoooo"},"content":"    public void contains_meetingInList_returnsTrue() {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"ThomasHoooo"},"content":"        noConflictMeetingList.add(MEETING1);","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"ThomasHoooo"},"content":"        assertTrue(noConflictMeetingList.contains(MEETING1));","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"ThomasHoooo"},"content":"    public void add_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"ThomasHoooo"},"content":"        assertThrows(NullPointerException.class, () -\u003e noConflictMeetingList.add(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"ThomasHoooo"},"content":"    public void add_duplicateMeeting_throwsConflictingMeetingException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"ThomasHoooo"},"content":"        noConflictMeetingList.add(MEETING1);","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"ThomasHoooo"},"content":"        assertThrows(ConflictingMeetingException.class, () -\u003e noConflictMeetingList.add(MEETING1));","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"ThomasHoooo"},"content":"    public void contains_meetingWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"ThomasHoooo"},"content":"        noConflictMeetingList.add(MEETING1);","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"ThomasHoooo"},"content":"        Meeting editedMeeting1 \u003d new MeetingBuilder(MEETING1).withDescription(VALID_DESCRIPTION_MEETING2)","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"ThomasHoooo"},"content":"                .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"ThomasHoooo"},"content":"        assertTrue(noConflictMeetingList.contains(editedMeeting1));","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"ThomasHoooo"},"content":"    public void setMeeting_nullTargetMeeting_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"ThomasHoooo"},"content":"        assertThrows(NullPointerException.class, () -\u003e noConflictMeetingList.setMeeting(null, MEETING1));","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"ThomasHoooo"},"content":"    public void setMeeting_nullEditedMeeting_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"ThomasHoooo"},"content":"        assertThrows(NullPointerException.class, () -\u003e noConflictMeetingList.setMeeting(MEETING1, null));","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"ThomasHoooo"},"content":"    public void setMeeting_targetMeetingNotInList_throwsClientNotFoundException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"ThomasHoooo"},"content":"        assertThrows(MeetingNotFoundException.class, () -\u003e noConflictMeetingList.setMeeting(MEETING1, MEETING1));","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"ThomasHoooo"},"content":"    public void setMeeting_editedMeetingIsSameMeeting_success() {","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"ThomasHoooo"},"content":"        noConflictMeetingList.add(MEETING1);","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"ThomasHoooo"},"content":"        noConflictMeetingList.setMeeting(MEETING1, MEETING1);","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"ThomasHoooo"},"content":"        NoConflictMeetingList expectedNoConflictMeetingList \u003d new NoConflictMeetingList();","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"ThomasHoooo"},"content":"        expectedNoConflictMeetingList.add(MEETING1);","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"ThomasHoooo"},"content":"        assertEquals(expectedNoConflictMeetingList, noConflictMeetingList);","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"ThomasHoooo"},"content":"    public void setMeeting_editedMeetingHasSameIdentity_success() {","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"ThomasHoooo"},"content":"        noConflictMeetingList.add(MEETING1);","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"ThomasHoooo"},"content":"        Meeting editedMeeting1 \u003d new MeetingBuilder(MEETING1).withDescription(VALID_DESCRIPTION_MEETING2)","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"ThomasHoooo"},"content":"                .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"ThomasHoooo"},"content":"        noConflictMeetingList.setMeeting(MEETING1, editedMeeting1);","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"ThomasHoooo"},"content":"        NoConflictMeetingList expectedNoConflictMeetingList \u003d new NoConflictMeetingList();","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"ThomasHoooo"},"content":"        expectedNoConflictMeetingList.add(editedMeeting1);","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"ThomasHoooo"},"content":"        assertEquals(expectedNoConflictMeetingList, noConflictMeetingList);","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"ThomasHoooo"},"content":"    public void setMeeting_editedMeetingHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"ThomasHoooo"},"content":"        noConflictMeetingList.add(MEETING1);","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"ThomasHoooo"},"content":"        noConflictMeetingList.setMeeting(MEETING1, MEETING2);","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"ThomasHoooo"},"content":"        NoConflictMeetingList expectedNoConflictMeetingList \u003d new NoConflictMeetingList();","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"ThomasHoooo"},"content":"        expectedNoConflictMeetingList.add(MEETING2);","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"ThomasHoooo"},"content":"        assertEquals(expectedNoConflictMeetingList, noConflictMeetingList);","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"ThomasHoooo"},"content":"    public void setMeeting_editedMeetingHasConflictingTiming_throwsConflictingMeetingException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"ThomasHoooo"},"content":"        noConflictMeetingList.add(MEETING1);","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"ThomasHoooo"},"content":"        noConflictMeetingList.add(MEETING2);","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"ThomasHoooo"},"content":"        assertThrows(ConflictingMeetingException.class, () -\u003e noConflictMeetingList.setMeeting(MEETING1, MEETING2));","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"ThomasHoooo"},"content":"    public void remove_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"ThomasHoooo"},"content":"        assertThrows(NullPointerException.class, () -\u003e noConflictMeetingList.remove(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"ThomasHoooo"},"content":"    public void remove_meetingDoesNotExist_throwsMeetingNotFoundException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"ThomasHoooo"},"content":"        assertThrows(MeetingNotFoundException.class, () -\u003e noConflictMeetingList.remove(MEETING1));","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"ThomasHoooo"},"content":"    public void remove_existingMeeting_removesMeeting() {","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"ThomasHoooo"},"content":"        noConflictMeetingList.add(MEETING1);","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"ThomasHoooo"},"content":"        noConflictMeetingList.remove(MEETING1);","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"ThomasHoooo"},"content":"        NoConflictMeetingList expectedNoConflictMeetingList \u003d new NoConflictMeetingList();","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"ThomasHoooo"},"content":"        assertEquals(expectedNoConflictMeetingList, noConflictMeetingList);","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"ThomasHoooo"},"content":"    public void setMeetings_nullUniqueMeetingList_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"ThomasHoooo"},"content":"        assertThrows(NullPointerException.class, () -\u003e noConflictMeetingList.setMeetings((List\u003cMeeting\u003e) null));","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"ThomasHoooo"},"content":"    public void setMeetings_noConflictMeetingList_replacesOwnListWithProvidedNoConflictMeetingList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"ThomasHoooo"},"content":"        noConflictMeetingList.add(MEETING1);","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"ThomasHoooo"},"content":"        NoConflictMeetingList expectedNoConflictMeetingList \u003d new NoConflictMeetingList();","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"ThomasHoooo"},"content":"        expectedNoConflictMeetingList.add(MEETING2);","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"ThomasHoooo"},"content":"        noConflictMeetingList.setMeeting(expectedNoConflictMeetingList);","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"ThomasHoooo"},"content":"        assertEquals(expectedNoConflictMeetingList, noConflictMeetingList);","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"ThomasHoooo"},"content":"    public void setMeetings_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"ThomasHoooo"},"content":"        assertThrows(NullPointerException.class, () -\u003e noConflictMeetingList.setMeetings((List\u003cMeeting\u003e) null));","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"ThomasHoooo"},"content":"    public void setMeetings_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"ThomasHoooo"},"content":"        noConflictMeetingList.add(MEETING1);","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"ThomasHoooo"},"content":"        List\u003cMeeting\u003e meetingList \u003d Collections.singletonList(MEETING2);","lastModifiedDate":"2022-10-09"},{"lineNumber":152,"author":{"gitId":"ThomasHoooo"},"content":"        noConflictMeetingList.setMeetings(meetingList);","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"ThomasHoooo"},"content":"        NoConflictMeetingList expectedNoConflictMeetingList \u003d new NoConflictMeetingList();","lastModifiedDate":"2022-10-09"},{"lineNumber":154,"author":{"gitId":"ThomasHoooo"},"content":"        expectedNoConflictMeetingList.add(MEETING2);","lastModifiedDate":"2022-10-09"},{"lineNumber":155,"author":{"gitId":"ThomasHoooo"},"content":"        assertEquals(expectedNoConflictMeetingList, noConflictMeetingList);","lastModifiedDate":"2022-10-09"},{"lineNumber":156,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":157,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":158,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":159,"author":{"gitId":"ThomasHoooo"},"content":"    public void setMeetings_listWithConflictingMeetings_throwsConflictingMeetingException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":160,"author":{"gitId":"ThomasHoooo"},"content":"        List\u003cMeeting\u003e listWithDuplicateMeetings \u003d Arrays.asList(MEETING1, MEETING1);","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"ThomasHoooo"},"content":"        assertThrows(ConflictingMeetingException.class, () -\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"ThomasHoooo"},"content":"                noConflictMeetingList.setMeetings(listWithDuplicateMeetings));","lastModifiedDate":"2022-10-09"},{"lineNumber":163,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":164,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":165,"author":{"gitId":"ThomasHoooo"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":166,"author":{"gitId":"ThomasHoooo"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":167,"author":{"gitId":"ThomasHoooo"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-09"},{"lineNumber":168,"author":{"gitId":"ThomasHoooo"},"content":"                -\u003e noConflictMeetingList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-09"},{"lineNumber":169,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":170,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"ThomasHoooo":170}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.storage.JsonAdaptedClient.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.testutil.TypicalClients.BENSON;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Thing1Thing2"},"content":"public class JsonAdaptedClientTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"Thing1Thing2"},"content":"    public void toModelType_validClientDetails_returnsClient() throws Exception {","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"Thing1Thing2"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(BENSON);","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"Thing1Thing2"},"content":"        assertEquals(BENSON, client.toModelType());","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"Thing1Thing2"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"junweimoo"},"content":"                new JsonAdaptedClient(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, null);","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"junweimoo"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"junweimoo"},"content":"                VALID_TAGS, null);","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"Thing1Thing2"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"junweimoo"},"content":"                new JsonAdaptedClient(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, null);","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"junweimoo"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"junweimoo"},"content":"                VALID_TAGS, null);","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"Thing1Thing2"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"junweimoo"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"junweimoo"},"content":"                        VALID_ADDRESS, VALID_TAGS, null);","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"junweimoo"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"junweimoo"},"content":"                VALID_ADDRESS, VALID_TAGS, null);","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"Thing1Thing2"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"junweimoo"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"junweimoo"},"content":"                        VALID_TAGS, null);","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"junweimoo"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"junweimoo"},"content":"                VALID_TAGS, null);","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"Thing1Thing2"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"junweimoo"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags, null);","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"Thing1Thing2"},"content":"        assertThrows(IllegalValueException.class, client::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Thing1Thing2":24,"junweimoo":15,"-":77}},{"path":"src/test/java/seedu/address/storage/JsonMyInsuRecStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rexong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"rexong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"rexong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalClients.HOON;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalClients.IDA;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalMyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"rexong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"rexong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"rexong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"rexong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"rexong"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"rexong"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"rexong"},"content":"import seedu.address.model.MyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"rexong"},"content":"import seedu.address.model.ReadOnlyMyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"rexong"},"content":"public class JsonMyInsuRecStorageTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"rexong"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonMyInsuRecStorageTest\");","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"rexong"},"content":"    @TempDir","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"rexong"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"rexong"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"rexong"},"content":"    public void readMyInsuRec_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"rexong"},"content":"        assertThrows(NullPointerException.class, () -\u003e readMyInsuRec(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"rexong"},"content":"    private java.util.Optional\u003cReadOnlyMyInsuRec\u003e readMyInsuRec(String filePath) throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"rexong"},"content":"        return new JsonMyInsuRecStorage(Paths.get(filePath)).readMyInsuRec(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"rexong"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"rexong"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"rexong"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"rexong"},"content":"                : null;","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"rexong"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"rexong"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"rexong"},"content":"        assertFalse(readMyInsuRec(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"rexong"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"rexong"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"rexong"},"content":"        assertThrows(DataConversionException.class, () -\u003e readMyInsuRec(\"notJsonFormatMyInsuRec.json\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"rexong"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"rexong"},"content":"    public void readMyInsuRec_invalidClientMyInsuRec_throwDataConversionException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"rexong"},"content":"        assertThrows(DataConversionException.class, () -\u003e readMyInsuRec(\"invalidClientMyInsuRec.json\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"rexong"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"rexong"},"content":"    public void readMyInsuRec_invalidAndValidClientMyInsuRec_throwDataConversionException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"rexong"},"content":"        assertThrows(DataConversionException.class, () -\u003e readMyInsuRec(\"invalidAndValidClientMyInsuRec.json\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"rexong"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"rexong"},"content":"    public void readAndSaveMyInsuRec_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"rexong"},"content":"        Path filePath \u003d testFolder.resolve(\"TempMyInsuRec.json\");","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"rexong"},"content":"        MyInsuRec original \u003d getTypicalMyInsuRec();","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"rexong"},"content":"        JsonMyInsuRecStorage jsonMyInsuRecStorage \u003d new JsonMyInsuRecStorage(filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"rexong"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"rexong"},"content":"        jsonMyInsuRecStorage.saveMyInsuRec(original, filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"rexong"},"content":"        ReadOnlyMyInsuRec readBack \u003d jsonMyInsuRecStorage.readMyInsuRec(filePath).get();","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"rexong"},"content":"        assertEquals(original, new MyInsuRec(readBack));","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"rexong"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"rexong"},"content":"        original.addClient(HOON);","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"rexong"},"content":"        original.removeClient(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"rexong"},"content":"        jsonMyInsuRecStorage.saveMyInsuRec(original, filePath);","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"rexong"},"content":"        readBack \u003d jsonMyInsuRecStorage.readMyInsuRec(filePath).get();","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"rexong"},"content":"        assertEquals(original, new MyInsuRec(readBack));","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"rexong"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"rexong"},"content":"        original.addClient(IDA);","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"rexong"},"content":"        jsonMyInsuRecStorage.saveMyInsuRec(original); // file path not specified","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"rexong"},"content":"        readBack \u003d jsonMyInsuRecStorage.readMyInsuRec().get(); // file path not specified","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"rexong"},"content":"        assertEquals(original, new MyInsuRec(readBack));","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"rexong"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"rexong"},"content":"    public void saveMyInsuRec_nullMyInsuRec_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"rexong"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveMyInsuRec(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"rexong"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"rexong"},"content":"     * Saves {@code myInsuRec} at the specified {@code filePath}.","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"rexong"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"rexong"},"content":"    private void saveMyInsuRec(ReadOnlyMyInsuRec myInsuRec, String filePath) {","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"rexong"},"content":"        try {","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"rexong"},"content":"            new JsonMyInsuRecStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"rexong"},"content":"                    .saveMyInsuRec(myInsuRec, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"rexong"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"rexong"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"rexong"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"rexong"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"rexong"},"content":"    public void saveMyInsuRec_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"rexong"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveMyInsuRec(new MyInsuRec(), null));","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"rexong"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"rexong":110}},{"path":"src/test/java/seedu/address/storage/JsonSerializableMyInsuRecTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"rexong"},"content":"import seedu.address.model.MyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.testutil.TypicalClients;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"rexong"},"content":"public class JsonSerializableMyInsuRecTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"rexong"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableMyInsuRecTest\");","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"rexong"},"content":"    private static final Path TYPICAL_CLIENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalClientsMyInsuRec.json\");","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"rexong"},"content":"    private static final Path INVALID_CLIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidClientMyInsuRec.json\");","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"rexong"},"content":"    private static final Path DUPLICATE_CLIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateClientMyInsuRec.json\");","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Thing1Thing2"},"content":"    public void toModelType_typicalClientsFile_success() throws Exception {","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"rexong"},"content":"        JsonSerializableMyInsuRec dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CLIENTS_FILE,","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"rexong"},"content":"                JsonSerializableMyInsuRec.class).get();","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"rexong"},"content":"        MyInsuRec myInsuRecFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"rexong"},"content":"        MyInsuRec typicalClientMyInsuRec \u003d TypicalClients.getTypicalMyInsuRec();","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"rexong"},"content":"        assertEquals(myInsuRecFromFile, typicalClientMyInsuRec);","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Thing1Thing2"},"content":"    public void toModelType_invalidClientFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"rexong"},"content":"        JsonSerializableMyInsuRec dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CLIENT_FILE,","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"rexong"},"content":"                JsonSerializableMyInsuRec.class).get();","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Thing1Thing2"},"content":"    public void toModelType_duplicateClients_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"rexong"},"content":"        JsonSerializableMyInsuRec dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CLIENT_FILE,","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"rexong"},"content":"                JsonSerializableMyInsuRec.class).get();","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"rexong"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableMyInsuRec.MESSAGE_DUPLICATE_CLIENT,","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Thing1Thing2":4,"rexong":16,"-":27}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"rexong"},"content":"        userPrefs.setMyInsuRecFilePath(Paths.get(\"myinsurec.json\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"Thing1Thing2"},"content":"        Path perfsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"Thing1Thing2"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(perfsFilePath);","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Thing1Thing2":2,"rexong":1,"-":106}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"rexong"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalMyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"rexong"},"content":"import seedu.address.model.MyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"rexong"},"content":"import seedu.address.model.ReadOnlyMyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"rexong"},"content":"        JsonMyInsuRecStorage myInsuRecStorage \u003d new JsonMyInsuRecStorage(getTempFilePath(\"cb\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"rexong"},"content":"        storageManager \u003d new StorageManager(myInsuRecStorage, userPrefsStorage);","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"rexong"},"content":"    public void myInsuRecReadSave() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"rexong"},"content":"         * {@link JsonMyInsuRecStorage} class.","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"rexong"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonMyInsuRecStorageTest} class.","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"rexong"},"content":"        MyInsuRec original \u003d getTypicalMyInsuRec();","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"rexong"},"content":"        storageManager.saveMyInsuRec(original);","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"rexong"},"content":"        ReadOnlyMyInsuRec retrieved \u003d storageManager.readMyInsuRec().get();","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"rexong"},"content":"        assertEquals(original, new MyInsuRec(retrieved));","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"rexong"},"content":"    public void getMyInsuRecFilePath() {","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"rexong"},"content":"        assertNotNull(storageManager.getMyInsuRecFilePath());","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rexong":14,"-":54}},{"path":"src/test/java/seedu/address/testutil/ClientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"Thing1Thing2"},"content":" * A utility class to help with building Client objects.","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":"public class ClientBuilder {","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"Thing1Thing2"},"content":"     * Creates a {@code ClientBuilder} with the default details.","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"Thing1Thing2"},"content":"    public ClientBuilder() {","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"Thing1Thing2"},"content":"     * Initializes the ClientBuilder with the data of {@code clientToCopy}.","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"Thing1Thing2"},"content":"    public ClientBuilder(Client clientToCopy) {","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"Thing1Thing2"},"content":"        name \u003d clientToCopy.getName();","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"Thing1Thing2"},"content":"        phone \u003d clientToCopy.getPhone();","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"Thing1Thing2"},"content":"        email \u003d clientToCopy.getEmail();","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"Thing1Thing2"},"content":"        address \u003d clientToCopy.getAddress();","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"Thing1Thing2"},"content":"        tags \u003d new HashSet\u003c\u003e(clientToCopy.getTags());","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"Thing1Thing2"},"content":"     * Sets the {@code Name} of the {@code Client} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"Thing1Thing2"},"content":"    public ClientBuilder withName(String name) {","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"Thing1Thing2"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Client} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"Thing1Thing2"},"content":"    public ClientBuilder withTags(String ... tags) {","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"Thing1Thing2"},"content":"     * Sets the {@code Address} of the {@code Client} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"Thing1Thing2"},"content":"    public ClientBuilder withAddress(String address) {","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"Thing1Thing2"},"content":"     * Sets the {@code Phone} of the {@code Client} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"Thing1Thing2"},"content":"    public ClientBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"Thing1Thing2"},"content":"     * Sets the {@code Email} of the {@code Client} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"Thing1Thing2"},"content":"    public ClientBuilder withEmail(String email) {","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"Thing1Thing2"},"content":"    public Client build() {","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"Thing1Thing2"},"content":"        return new Client(name, phone, email, address, tags);","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Thing1Thing2":28,"-":68}},{"path":"src/test/java/seedu/address/testutil/ClientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.logic.commands.AddClientCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"Thing1Thing2"},"content":" * A utility class for Client.","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"Thing1Thing2"},"content":"public class ClientUtil {","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"Thing1Thing2"},"content":"     * Returns an add command string for adding the {@code client}.","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"Thing1Thing2"},"content":"    public static String getAddCommand(Client client) {","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"Thing1Thing2"},"content":"        return AddClientCommand.COMMAND_WORD + \" \" + getClientDetails(client);","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"Thing1Thing2"},"content":"     * Returns the part of command string for the given {@code client}\u0027s details.","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"Thing1Thing2"},"content":"    public static String getClientDetails(Client client) {","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"Thing1Thing2"},"content":"        sb.append(PREFIX_NAME + client.getName().fullName + \" \");","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"Thing1Thing2"},"content":"        sb.append(PREFIX_PHONE + client.getPhone().value + \" \");","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"Thing1Thing2"},"content":"        sb.append(PREFIX_EMAIL + client.getEmail().value + \" \");","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"Thing1Thing2"},"content":"        sb.append(PREFIX_ADDRESS + client.getAddress().value + \" \");","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"Thing1Thing2"},"content":"        client.getTags().stream().forEach(","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"Thing1Thing2"},"content":"     * Returns the part of command string for the given {@code EditClientDescriptor}\u0027s details.","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"Thing1Thing2"},"content":"    public static String getEditClientDescriptorDetails(EditClientDescriptor descriptor) {","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Thing1Thing2":17,"-":45}},{"path":"src/test/java/seedu/address/testutil/EditClientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"Thing1Thing2"},"content":" * A utility class to help with building EditClientDescriptor objects.","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"Thing1Thing2"},"content":"public class EditClientDescriptorBuilder {","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"Thing1Thing2"},"content":"    private EditClientDescriptor descriptor;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"Thing1Thing2"},"content":"    public EditClientDescriptorBuilder() {","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"Thing1Thing2"},"content":"        descriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"Thing1Thing2"},"content":"    public EditClientDescriptorBuilder(EditClientDescriptor descriptor) {","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"Thing1Thing2"},"content":"        this.descriptor \u003d new EditClientDescriptor(descriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"Thing1Thing2"},"content":"     * Returns an {@code EditClientDescriptor} with fields containing {@code Client}\u0027s details","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"Thing1Thing2"},"content":"    public EditClientDescriptorBuilder(Client client) {","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"Thing1Thing2"},"content":"        descriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"Thing1Thing2"},"content":"        descriptor.setName(client.getName());","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"Thing1Thing2"},"content":"        descriptor.setPhone(client.getPhone());","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"Thing1Thing2"},"content":"        descriptor.setEmail(client.getEmail());","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"Thing1Thing2"},"content":"        descriptor.setAddress(client.getAddress());","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"Thing1Thing2"},"content":"        descriptor.setTags(client.getTags());","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"Thing1Thing2"},"content":"     * Sets the {@code Name} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"Thing1Thing2"},"content":"    public EditClientDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"Thing1Thing2"},"content":"     * Sets the {@code Phone} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"Thing1Thing2"},"content":"    public EditClientDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"Thing1Thing2"},"content":"     * Sets the {@code Email} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"Thing1Thing2"},"content":"    public EditClientDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"Thing1Thing2"},"content":"     * Sets the {@code Address} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"Thing1Thing2"},"content":"    public EditClientDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"Thing1Thing2"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditClientDescriptor}","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"Thing1Thing2"},"content":"    public EditClientDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"Thing1Thing2"},"content":"    public EditClientDescriptor build() {","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Thing1Thing2":32,"-":55}},{"path":"src/test/java/seedu/address/testutil/MeetingBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.model.meeting.Description;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.model.meeting.MeetingDate;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.model.meeting.MeetingTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":" * A utility class to help with building Meeting objects.","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"public class MeetingBuilder {","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"meeting\";","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"    public static final LocalDate DEFAULT_MEETING_DATE \u003d LocalDate.of(2020, 1, 8);","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"    public static final LocalTime DEFAULT_MEETING_TIME \u003d LocalTime.of(7, 20, 45, 342123342);","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"    private static final Set\u003cTag\u003e DEFAULT_TAGS \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"ThomasHoooo"},"content":"    private Description description;","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"ThomasHoooo"},"content":"    private Client client;","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"ThomasHoooo"},"content":"    private MeetingDate meetingDate;","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"ThomasHoooo"},"content":"    private MeetingTime meetingTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"ThomasHoooo"},"content":"     * Creates a {@code MeetingBuilder} with the default details.","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"ThomasHoooo"},"content":"    public MeetingBuilder() {","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"ThomasHoooo"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"ThomasHoooo"},"content":"        meetingDate \u003d new MeetingDate(DEFAULT_MEETING_DATE);","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"ThomasHoooo"},"content":"        meetingTime \u003d new MeetingTime(DEFAULT_MEETING_TIME);","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"ThomasHoooo"},"content":"        client \u003d new Client(new Name(DEFAULT_NAME), new Phone(DEFAULT_PHONE),","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"ThomasHoooo"},"content":"                new Email(DEFAULT_EMAIL), new Address(DEFAULT_ADDRESS), DEFAULT_TAGS);","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"ThomasHoooo"},"content":"     * Initializes the MeetingBuilder with the data of {@code meetingToCopy}.","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"ThomasHoooo"},"content":"    public MeetingBuilder(Meeting meetingToCopy) {","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"ThomasHoooo"},"content":"        description \u003d meetingToCopy.getDescription();","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"ThomasHoooo"},"content":"        meetingDate \u003d meetingToCopy.getMeetingDate();","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"ThomasHoooo"},"content":"        meetingTime \u003d meetingToCopy.getMeetingTime();","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"ThomasHoooo"},"content":"        client \u003d meetingToCopy.getClient();","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"ThomasHoooo"},"content":"     * Sets the {@code Description} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"ThomasHoooo"},"content":"    public MeetingBuilder withDescription(String description) {","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"ThomasHoooo"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"ThomasHoooo"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"ThomasHoooo"},"content":"     * Sets the {@code MeetingDate} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"ThomasHoooo"},"content":"    public MeetingBuilder withMeetingDate(LocalDate date) {","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"ThomasHoooo"},"content":"        this.meetingDate \u003d new MeetingDate(date);","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"ThomasHoooo"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"ThomasHoooo"},"content":"     * Sets the {@code MeetingTime} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"ThomasHoooo"},"content":"    public MeetingBuilder withMeetingTime(LocalTime time) {","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"ThomasHoooo"},"content":"        this.meetingTime \u003d new MeetingTime(time);","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"ThomasHoooo"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"ThomasHoooo"},"content":"     * Sets the {@code Client} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"ThomasHoooo"},"content":"    public MeetingBuilder withClient(Client client) {","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"ThomasHoooo"},"content":"        this.client \u003d client;","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"ThomasHoooo"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"ThomasHoooo"},"content":"    public Meeting build() {","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"ThomasHoooo"},"content":"        return new Meeting(client, description, meetingDate, meetingTime);","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"ThomasHoooo":93}},{"path":"src/test/java/seedu/address/testutil/MyInsuRecBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rexong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"rexong"},"content":"import seedu.address.model.MyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"rexong"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"rexong"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"rexong"},"content":" * A utility class to help with building MyInsuRec objects.","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"rexong"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"rexong"},"content":" *     {@code MyInsuRec ab \u003d new MyInsuRecBuilder().withClient(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"rexong"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"rexong"},"content":"public class MyInsuRecBuilder {","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"rexong"},"content":"    private MyInsuRec myInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"rexong"},"content":"    public MyInsuRecBuilder() {","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"rexong"},"content":"        myInsuRec \u003d new MyInsuRec();","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"rexong"},"content":"    public MyInsuRecBuilder(MyInsuRec myInsuRec) {","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"rexong"},"content":"        this.myInsuRec \u003d myInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"rexong"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"rexong"},"content":"     * Adds a new {@code Client} to the {@code MyInsuRec} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"rexong"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"rexong"},"content":"    public MyInsuRecBuilder withClient(Client client) {","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"rexong"},"content":"        myInsuRec.addClient(client);","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"rexong"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"rexong"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"rexong"},"content":"    public MyInsuRec build() {","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"rexong"},"content":"        return myInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"rexong"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"rexong"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"rexong":34}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"Thing1Thing2"},"content":"     * Returns the middle index of the client in the {@code model}\u0027s client list.","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"Thing1Thing2"},"content":"        return Index.fromOneBased(model.getFilteredClientList().size() / 2);","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"Thing1Thing2"},"content":"     * Returns the last index of the client in the {@code model}\u0027s client list.","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"Thing1Thing2"},"content":"        return Index.fromOneBased(model.getFilteredClientList().size());","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"Thing1Thing2"},"content":"     * Returns the client in the {@code model}\u0027s client list at {@code index}.","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"Thing1Thing2"},"content":"    public static Client getClient(Model model, Index index) {","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"Thing1Thing2"},"content":"        return model.getFilteredClientList().get(index.getZeroBased());","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Thing1Thing2":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalClients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"Thing1Thing2"},"content":"import static seedu.address.testutil.TypicalMeetings.getTypicalMeetings;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"rexong"},"content":"import seedu.address.model.MyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"Thing1Thing2"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"Thing1Thing2"},"content":" * A utility class containing a list of {@code Client} objects to be used in tests.","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"Thing1Thing2"},"content":"public class TypicalClients {","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"Thing1Thing2"},"content":"    public static final Client ALICE \u003d new ClientBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"Thing1Thing2"},"content":"    public static final Client BENSON \u003d new ClientBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"Thing1Thing2"},"content":"    public static final Client CARL \u003d new ClientBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"Thing1Thing2"},"content":"    public static final Client DANIEL \u003d new ClientBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"Thing1Thing2"},"content":"    public static final Client ELLE \u003d new ClientBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"Thing1Thing2"},"content":"    public static final Client FIONA \u003d new ClientBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"Thing1Thing2"},"content":"    public static final Client GEORGE \u003d new ClientBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"Thing1Thing2"},"content":"    public static final Client HOON \u003d new ClientBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"Thing1Thing2"},"content":"    public static final Client IDA \u003d new ClientBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"Thing1Thing2"},"content":"    // Manually added - Client\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"Thing1Thing2"},"content":"    public static final Client AMY \u003d new ClientBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"Thing1Thing2"},"content":"    public static final Client BOB \u003d new ClientBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":62,"author":{"gitId":"Thing1Thing2"},"content":"    private TypicalClients() {} // prevents instantiation","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"rexong"},"content":"     * Returns an {@code MyInsuRec} with all the typical clients.","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"rexong"},"content":"    public static MyInsuRec getTypicalMyInsuRec() {","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"rexong"},"content":"        MyInsuRec cb \u003d new MyInsuRec();","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"Thing1Thing2"},"content":"        for (Client client : getTypicalClients()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"Thing1Thing2"},"content":"            cb.addClient(client);","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"Thing1Thing2"},"content":"        for (Meeting meeting: getTypicalMeetings()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"Thing1Thing2"},"content":"            cb.addMeeting(meeting);","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"Thing1Thing2"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"Thing1Thing2"},"content":"        return cb;","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":78,"author":{"gitId":"Thing1Thing2"},"content":"    public static List\u003cClient\u003e getTypicalClients() {","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Thing1Thing2":25,"rexong":4,"-":52}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"rexong"},"content":"    public static final Index INDEX_FIRST_ELEMENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"rexong"},"content":"    public static final Index INDEX_SECOND_ELEMENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"rexong"},"content":"    public static final Index INDEX_THIRD_ELEMENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"rexong":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalMeetings.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ThomasHoooo"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"ThomasHoooo"},"content":"import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"ThomasHoooo"},"content":"import static seedu.address.testutil.TypicalClients.BENSON;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"ThomasHoooo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"ThomasHoooo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"ThomasHoooo"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"rexong"},"content":"import seedu.address.model.MyInsuRec;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"ThomasHoooo"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"ThomasHoooo"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"ThomasHoooo"},"content":" * A utility class containing a list of {@code Meeting} objects to be used in tests.","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"ThomasHoooo"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"ThomasHoooo"},"content":"public class TypicalMeetings {","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"ThomasHoooo"},"content":"    public static final Meeting MEETING1 \u003d new MeetingBuilder().withDescription(\"meeting1\")","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"ThomasHoooo"},"content":"            .withMeetingDate(LocalDate.of(2020, 1, 8))","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"ThomasHoooo"},"content":"            .withMeetingTime(LocalTime.of(7, 20, 45, 342123342))","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"ThomasHoooo"},"content":"            .withClient(ALICE).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"ThomasHoooo"},"content":"    public static final Meeting MEETING2 \u003d new MeetingBuilder().withDescription(\"meeting2\")","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"ThomasHoooo"},"content":"            .withMeetingDate(LocalDate.of(2020, 5, 5))","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"ThomasHoooo"},"content":"            .withMeetingTime(LocalTime.of(7, 20, 45, 342123321))","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"ThomasHoooo"},"content":"            .withClient(BENSON).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"ThomasHoooo"},"content":"    private TypicalMeetings() {} // prevents instantiation","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"ThomasHoooo"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"rexong"},"content":"     * Returns an {@code MyInsuRec} with all the typical clients.","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"ThomasHoooo"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"rexong"},"content":"    public static MyInsuRec getTypicalMyInsuRec() {","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"rexong"},"content":"        MyInsuRec cb \u003d TypicalClients.getTypicalMyInsuRec();","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"ThomasHoooo"},"content":"        for (Meeting meeting : getTypicalMeetings()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"ThomasHoooo"},"content":"            cb.addMeeting(meeting);","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"ThomasHoooo"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"ThomasHoooo"},"content":"        return cb;","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"ThomasHoooo"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"ThomasHoooo"},"content":"    public static List\u003cMeeting\u003e getTypicalMeetings() {","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"ThomasHoooo"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MEETING1, MEETING2));","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"ThomasHoooo"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"ThomasHoooo"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"rexong":4,"ThomasHoooo":41}}]
